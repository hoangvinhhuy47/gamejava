// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Poker.proto

package message;

public final class PokerProto {
  private PokerProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface Poker_Response_RoomIdFundOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 roomid = 1;
    /**
     * <code>optional int32 roomid = 1;</code>
     */
    boolean hasRoomid();
    /**
     * <code>optional int32 roomid = 1;</code>
     */
    int getRoomid();

    // optional int64 fund = 2;
    /**
     * <code>optional int64 fund = 2;</code>
     */
    boolean hasFund();
    /**
     * <code>optional int64 fund = 2;</code>
     */
    long getFund();
  }
  /**
   * Protobuf type {@code com.nope.fishing.Poker_Response_RoomIdFund}
   *
   * <pre>
   * Trả thông tin fund cho user 2s 1 lần dựa vào RoomID (50000)
   * </pre>
   */
  public static final class Poker_Response_RoomIdFund extends
      com.google.protobuf.GeneratedMessage
      implements Poker_Response_RoomIdFundOrBuilder {
    // Use Poker_Response_RoomIdFund.newBuilder() to construct.
    private Poker_Response_RoomIdFund(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Poker_Response_RoomIdFund(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Poker_Response_RoomIdFund defaultInstance;
    public static Poker_Response_RoomIdFund getDefaultInstance() {
      return defaultInstance;
    }

    public Poker_Response_RoomIdFund getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Poker_Response_RoomIdFund(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              roomid_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              fund_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return message.PokerProto.internal_static_com_nope_fishing_Poker_Response_RoomIdFund_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return message.PokerProto.internal_static_com_nope_fishing_Poker_Response_RoomIdFund_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              message.PokerProto.Poker_Response_RoomIdFund.class, message.PokerProto.Poker_Response_RoomIdFund.Builder.class);
    }

    public static com.google.protobuf.Parser<Poker_Response_RoomIdFund> PARSER =
        new com.google.protobuf.AbstractParser<Poker_Response_RoomIdFund>() {
      public Poker_Response_RoomIdFund parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Poker_Response_RoomIdFund(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Poker_Response_RoomIdFund> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 roomid = 1;
    public static final int ROOMID_FIELD_NUMBER = 1;
    private int roomid_;
    /**
     * <code>optional int32 roomid = 1;</code>
     */
    public boolean hasRoomid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 roomid = 1;</code>
     */
    public int getRoomid() {
      return roomid_;
    }

    // optional int64 fund = 2;
    public static final int FUND_FIELD_NUMBER = 2;
    private long fund_;
    /**
     * <code>optional int64 fund = 2;</code>
     */
    public boolean hasFund() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int64 fund = 2;</code>
     */
    public long getFund() {
      return fund_;
    }

    private void initFields() {
      roomid_ = 0;
      fund_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, roomid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, fund_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, roomid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, fund_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static message.PokerProto.Poker_Response_RoomIdFund parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static message.PokerProto.Poker_Response_RoomIdFund parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static message.PokerProto.Poker_Response_RoomIdFund parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static message.PokerProto.Poker_Response_RoomIdFund parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static message.PokerProto.Poker_Response_RoomIdFund parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static message.PokerProto.Poker_Response_RoomIdFund parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static message.PokerProto.Poker_Response_RoomIdFund parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static message.PokerProto.Poker_Response_RoomIdFund parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static message.PokerProto.Poker_Response_RoomIdFund parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static message.PokerProto.Poker_Response_RoomIdFund parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(message.PokerProto.Poker_Response_RoomIdFund prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.nope.fishing.Poker_Response_RoomIdFund}
     *
     * <pre>
     * Trả thông tin fund cho user 2s 1 lần dựa vào RoomID (50000)
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements message.PokerProto.Poker_Response_RoomIdFundOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return message.PokerProto.internal_static_com_nope_fishing_Poker_Response_RoomIdFund_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return message.PokerProto.internal_static_com_nope_fishing_Poker_Response_RoomIdFund_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                message.PokerProto.Poker_Response_RoomIdFund.class, message.PokerProto.Poker_Response_RoomIdFund.Builder.class);
      }

      // Construct using message.PokerProto.Poker_Response_RoomIdFund.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        roomid_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        fund_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return message.PokerProto.internal_static_com_nope_fishing_Poker_Response_RoomIdFund_descriptor;
      }

      public message.PokerProto.Poker_Response_RoomIdFund getDefaultInstanceForType() {
        return message.PokerProto.Poker_Response_RoomIdFund.getDefaultInstance();
      }

      public message.PokerProto.Poker_Response_RoomIdFund build() {
        message.PokerProto.Poker_Response_RoomIdFund result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public message.PokerProto.Poker_Response_RoomIdFund buildPartial() {
        message.PokerProto.Poker_Response_RoomIdFund result = new message.PokerProto.Poker_Response_RoomIdFund(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.roomid_ = roomid_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.fund_ = fund_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof message.PokerProto.Poker_Response_RoomIdFund) {
          return mergeFrom((message.PokerProto.Poker_Response_RoomIdFund)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(message.PokerProto.Poker_Response_RoomIdFund other) {
        if (other == message.PokerProto.Poker_Response_RoomIdFund.getDefaultInstance()) return this;
        if (other.hasRoomid()) {
          setRoomid(other.getRoomid());
        }
        if (other.hasFund()) {
          setFund(other.getFund());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        message.PokerProto.Poker_Response_RoomIdFund parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (message.PokerProto.Poker_Response_RoomIdFund) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 roomid = 1;
      private int roomid_ ;
      /**
       * <code>optional int32 roomid = 1;</code>
       */
      public boolean hasRoomid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 roomid = 1;</code>
       */
      public int getRoomid() {
        return roomid_;
      }
      /**
       * <code>optional int32 roomid = 1;</code>
       */
      public Builder setRoomid(int value) {
        bitField0_ |= 0x00000001;
        roomid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 roomid = 1;</code>
       */
      public Builder clearRoomid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        roomid_ = 0;
        onChanged();
        return this;
      }

      // optional int64 fund = 2;
      private long fund_ ;
      /**
       * <code>optional int64 fund = 2;</code>
       */
      public boolean hasFund() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int64 fund = 2;</code>
       */
      public long getFund() {
        return fund_;
      }
      /**
       * <code>optional int64 fund = 2;</code>
       */
      public Builder setFund(long value) {
        bitField0_ |= 0x00000002;
        fund_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 fund = 2;</code>
       */
      public Builder clearFund() {
        bitField0_ = (bitField0_ & ~0x00000002);
        fund_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.nope.fishing.Poker_Response_RoomIdFund)
    }

    static {
      defaultInstance = new Poker_Response_RoomIdFund(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.nope.fishing.Poker_Response_RoomIdFund)
  }

  public interface Poker_Response_GameInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated .com.nope.fishing.Poker_Response_RoomInfo room = 1;
    /**
     * <code>repeated .com.nope.fishing.Poker_Response_RoomInfo room = 1;</code>
     *
     * <pre>
     * 0.5 s 1 lần
     * </pre>
     */
    java.util.List<message.PokerProto.Poker_Response_RoomInfo> 
        getRoomList();
    /**
     * <code>repeated .com.nope.fishing.Poker_Response_RoomInfo room = 1;</code>
     *
     * <pre>
     * 0.5 s 1 lần
     * </pre>
     */
    message.PokerProto.Poker_Response_RoomInfo getRoom(int index);
    /**
     * <code>repeated .com.nope.fishing.Poker_Response_RoomInfo room = 1;</code>
     *
     * <pre>
     * 0.5 s 1 lần
     * </pre>
     */
    int getRoomCount();
    /**
     * <code>repeated .com.nope.fishing.Poker_Response_RoomInfo room = 1;</code>
     *
     * <pre>
     * 0.5 s 1 lần
     * </pre>
     */
    java.util.List<? extends message.PokerProto.Poker_Response_RoomInfoOrBuilder> 
        getRoomOrBuilderList();
    /**
     * <code>repeated .com.nope.fishing.Poker_Response_RoomInfo room = 1;</code>
     *
     * <pre>
     * 0.5 s 1 lần
     * </pre>
     */
    message.PokerProto.Poker_Response_RoomInfoOrBuilder getRoomOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code com.nope.fishing.Poker_Response_GameInfo}
   *
   * <pre>
   * -----------------------------------------------------------------------------------------------------
   * </pre>
   */
  public static final class Poker_Response_GameInfo extends
      com.google.protobuf.GeneratedMessage
      implements Poker_Response_GameInfoOrBuilder {
    // Use Poker_Response_GameInfo.newBuilder() to construct.
    private Poker_Response_GameInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Poker_Response_GameInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Poker_Response_GameInfo defaultInstance;
    public static Poker_Response_GameInfo getDefaultInstance() {
      return defaultInstance;
    }

    public Poker_Response_GameInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Poker_Response_GameInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                room_ = new java.util.ArrayList<message.PokerProto.Poker_Response_RoomInfo>();
                mutable_bitField0_ |= 0x00000001;
              }
              room_.add(input.readMessage(message.PokerProto.Poker_Response_RoomInfo.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          room_ = java.util.Collections.unmodifiableList(room_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return message.PokerProto.internal_static_com_nope_fishing_Poker_Response_GameInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return message.PokerProto.internal_static_com_nope_fishing_Poker_Response_GameInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              message.PokerProto.Poker_Response_GameInfo.class, message.PokerProto.Poker_Response_GameInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<Poker_Response_GameInfo> PARSER =
        new com.google.protobuf.AbstractParser<Poker_Response_GameInfo>() {
      public Poker_Response_GameInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Poker_Response_GameInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Poker_Response_GameInfo> getParserForType() {
      return PARSER;
    }

    // repeated .com.nope.fishing.Poker_Response_RoomInfo room = 1;
    public static final int ROOM_FIELD_NUMBER = 1;
    private java.util.List<message.PokerProto.Poker_Response_RoomInfo> room_;
    /**
     * <code>repeated .com.nope.fishing.Poker_Response_RoomInfo room = 1;</code>
     *
     * <pre>
     * 0.5 s 1 lần
     * </pre>
     */
    public java.util.List<message.PokerProto.Poker_Response_RoomInfo> getRoomList() {
      return room_;
    }
    /**
     * <code>repeated .com.nope.fishing.Poker_Response_RoomInfo room = 1;</code>
     *
     * <pre>
     * 0.5 s 1 lần
     * </pre>
     */
    public java.util.List<? extends message.PokerProto.Poker_Response_RoomInfoOrBuilder> 
        getRoomOrBuilderList() {
      return room_;
    }
    /**
     * <code>repeated .com.nope.fishing.Poker_Response_RoomInfo room = 1;</code>
     *
     * <pre>
     * 0.5 s 1 lần
     * </pre>
     */
    public int getRoomCount() {
      return room_.size();
    }
    /**
     * <code>repeated .com.nope.fishing.Poker_Response_RoomInfo room = 1;</code>
     *
     * <pre>
     * 0.5 s 1 lần
     * </pre>
     */
    public message.PokerProto.Poker_Response_RoomInfo getRoom(int index) {
      return room_.get(index);
    }
    /**
     * <code>repeated .com.nope.fishing.Poker_Response_RoomInfo room = 1;</code>
     *
     * <pre>
     * 0.5 s 1 lần
     * </pre>
     */
    public message.PokerProto.Poker_Response_RoomInfoOrBuilder getRoomOrBuilder(
        int index) {
      return room_.get(index);
    }

    private void initFields() {
      room_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < room_.size(); i++) {
        output.writeMessage(1, room_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < room_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, room_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static message.PokerProto.Poker_Response_GameInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static message.PokerProto.Poker_Response_GameInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static message.PokerProto.Poker_Response_GameInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static message.PokerProto.Poker_Response_GameInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static message.PokerProto.Poker_Response_GameInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static message.PokerProto.Poker_Response_GameInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static message.PokerProto.Poker_Response_GameInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static message.PokerProto.Poker_Response_GameInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static message.PokerProto.Poker_Response_GameInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static message.PokerProto.Poker_Response_GameInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(message.PokerProto.Poker_Response_GameInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.nope.fishing.Poker_Response_GameInfo}
     *
     * <pre>
     * -----------------------------------------------------------------------------------------------------
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements message.PokerProto.Poker_Response_GameInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return message.PokerProto.internal_static_com_nope_fishing_Poker_Response_GameInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return message.PokerProto.internal_static_com_nope_fishing_Poker_Response_GameInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                message.PokerProto.Poker_Response_GameInfo.class, message.PokerProto.Poker_Response_GameInfo.Builder.class);
      }

      // Construct using message.PokerProto.Poker_Response_GameInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getRoomFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (roomBuilder_ == null) {
          room_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          roomBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return message.PokerProto.internal_static_com_nope_fishing_Poker_Response_GameInfo_descriptor;
      }

      public message.PokerProto.Poker_Response_GameInfo getDefaultInstanceForType() {
        return message.PokerProto.Poker_Response_GameInfo.getDefaultInstance();
      }

      public message.PokerProto.Poker_Response_GameInfo build() {
        message.PokerProto.Poker_Response_GameInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public message.PokerProto.Poker_Response_GameInfo buildPartial() {
        message.PokerProto.Poker_Response_GameInfo result = new message.PokerProto.Poker_Response_GameInfo(this);
        int from_bitField0_ = bitField0_;
        if (roomBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            room_ = java.util.Collections.unmodifiableList(room_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.room_ = room_;
        } else {
          result.room_ = roomBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof message.PokerProto.Poker_Response_GameInfo) {
          return mergeFrom((message.PokerProto.Poker_Response_GameInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(message.PokerProto.Poker_Response_GameInfo other) {
        if (other == message.PokerProto.Poker_Response_GameInfo.getDefaultInstance()) return this;
        if (roomBuilder_ == null) {
          if (!other.room_.isEmpty()) {
            if (room_.isEmpty()) {
              room_ = other.room_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureRoomIsMutable();
              room_.addAll(other.room_);
            }
            onChanged();
          }
        } else {
          if (!other.room_.isEmpty()) {
            if (roomBuilder_.isEmpty()) {
              roomBuilder_.dispose();
              roomBuilder_ = null;
              room_ = other.room_;
              bitField0_ = (bitField0_ & ~0x00000001);
              roomBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getRoomFieldBuilder() : null;
            } else {
              roomBuilder_.addAllMessages(other.room_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        message.PokerProto.Poker_Response_GameInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (message.PokerProto.Poker_Response_GameInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .com.nope.fishing.Poker_Response_RoomInfo room = 1;
      private java.util.List<message.PokerProto.Poker_Response_RoomInfo> room_ =
        java.util.Collections.emptyList();
      private void ensureRoomIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          room_ = new java.util.ArrayList<message.PokerProto.Poker_Response_RoomInfo>(room_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          message.PokerProto.Poker_Response_RoomInfo, message.PokerProto.Poker_Response_RoomInfo.Builder, message.PokerProto.Poker_Response_RoomInfoOrBuilder> roomBuilder_;

      /**
       * <code>repeated .com.nope.fishing.Poker_Response_RoomInfo room = 1;</code>
       *
       * <pre>
       * 0.5 s 1 lần
       * </pre>
       */
      public java.util.List<message.PokerProto.Poker_Response_RoomInfo> getRoomList() {
        if (roomBuilder_ == null) {
          return java.util.Collections.unmodifiableList(room_);
        } else {
          return roomBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.nope.fishing.Poker_Response_RoomInfo room = 1;</code>
       *
       * <pre>
       * 0.5 s 1 lần
       * </pre>
       */
      public int getRoomCount() {
        if (roomBuilder_ == null) {
          return room_.size();
        } else {
          return roomBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.nope.fishing.Poker_Response_RoomInfo room = 1;</code>
       *
       * <pre>
       * 0.5 s 1 lần
       * </pre>
       */
      public message.PokerProto.Poker_Response_RoomInfo getRoom(int index) {
        if (roomBuilder_ == null) {
          return room_.get(index);
        } else {
          return roomBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.nope.fishing.Poker_Response_RoomInfo room = 1;</code>
       *
       * <pre>
       * 0.5 s 1 lần
       * </pre>
       */
      public Builder setRoom(
          int index, message.PokerProto.Poker_Response_RoomInfo value) {
        if (roomBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRoomIsMutable();
          room_.set(index, value);
          onChanged();
        } else {
          roomBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.nope.fishing.Poker_Response_RoomInfo room = 1;</code>
       *
       * <pre>
       * 0.5 s 1 lần
       * </pre>
       */
      public Builder setRoom(
          int index, message.PokerProto.Poker_Response_RoomInfo.Builder builderForValue) {
        if (roomBuilder_ == null) {
          ensureRoomIsMutable();
          room_.set(index, builderForValue.build());
          onChanged();
        } else {
          roomBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.nope.fishing.Poker_Response_RoomInfo room = 1;</code>
       *
       * <pre>
       * 0.5 s 1 lần
       * </pre>
       */
      public Builder addRoom(message.PokerProto.Poker_Response_RoomInfo value) {
        if (roomBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRoomIsMutable();
          room_.add(value);
          onChanged();
        } else {
          roomBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.nope.fishing.Poker_Response_RoomInfo room = 1;</code>
       *
       * <pre>
       * 0.5 s 1 lần
       * </pre>
       */
      public Builder addRoom(
          int index, message.PokerProto.Poker_Response_RoomInfo value) {
        if (roomBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRoomIsMutable();
          room_.add(index, value);
          onChanged();
        } else {
          roomBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.nope.fishing.Poker_Response_RoomInfo room = 1;</code>
       *
       * <pre>
       * 0.5 s 1 lần
       * </pre>
       */
      public Builder addRoom(
          message.PokerProto.Poker_Response_RoomInfo.Builder builderForValue) {
        if (roomBuilder_ == null) {
          ensureRoomIsMutable();
          room_.add(builderForValue.build());
          onChanged();
        } else {
          roomBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.nope.fishing.Poker_Response_RoomInfo room = 1;</code>
       *
       * <pre>
       * 0.5 s 1 lần
       * </pre>
       */
      public Builder addRoom(
          int index, message.PokerProto.Poker_Response_RoomInfo.Builder builderForValue) {
        if (roomBuilder_ == null) {
          ensureRoomIsMutable();
          room_.add(index, builderForValue.build());
          onChanged();
        } else {
          roomBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.nope.fishing.Poker_Response_RoomInfo room = 1;</code>
       *
       * <pre>
       * 0.5 s 1 lần
       * </pre>
       */
      public Builder addAllRoom(
          java.lang.Iterable<? extends message.PokerProto.Poker_Response_RoomInfo> values) {
        if (roomBuilder_ == null) {
          ensureRoomIsMutable();
          super.addAll(values, room_);
          onChanged();
        } else {
          roomBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.nope.fishing.Poker_Response_RoomInfo room = 1;</code>
       *
       * <pre>
       * 0.5 s 1 lần
       * </pre>
       */
      public Builder clearRoom() {
        if (roomBuilder_ == null) {
          room_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          roomBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.nope.fishing.Poker_Response_RoomInfo room = 1;</code>
       *
       * <pre>
       * 0.5 s 1 lần
       * </pre>
       */
      public Builder removeRoom(int index) {
        if (roomBuilder_ == null) {
          ensureRoomIsMutable();
          room_.remove(index);
          onChanged();
        } else {
          roomBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.nope.fishing.Poker_Response_RoomInfo room = 1;</code>
       *
       * <pre>
       * 0.5 s 1 lần
       * </pre>
       */
      public message.PokerProto.Poker_Response_RoomInfo.Builder getRoomBuilder(
          int index) {
        return getRoomFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.nope.fishing.Poker_Response_RoomInfo room = 1;</code>
       *
       * <pre>
       * 0.5 s 1 lần
       * </pre>
       */
      public message.PokerProto.Poker_Response_RoomInfoOrBuilder getRoomOrBuilder(
          int index) {
        if (roomBuilder_ == null) {
          return room_.get(index);  } else {
          return roomBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.nope.fishing.Poker_Response_RoomInfo room = 1;</code>
       *
       * <pre>
       * 0.5 s 1 lần
       * </pre>
       */
      public java.util.List<? extends message.PokerProto.Poker_Response_RoomInfoOrBuilder> 
           getRoomOrBuilderList() {
        if (roomBuilder_ != null) {
          return roomBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(room_);
        }
      }
      /**
       * <code>repeated .com.nope.fishing.Poker_Response_RoomInfo room = 1;</code>
       *
       * <pre>
       * 0.5 s 1 lần
       * </pre>
       */
      public message.PokerProto.Poker_Response_RoomInfo.Builder addRoomBuilder() {
        return getRoomFieldBuilder().addBuilder(
            message.PokerProto.Poker_Response_RoomInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .com.nope.fishing.Poker_Response_RoomInfo room = 1;</code>
       *
       * <pre>
       * 0.5 s 1 lần
       * </pre>
       */
      public message.PokerProto.Poker_Response_RoomInfo.Builder addRoomBuilder(
          int index) {
        return getRoomFieldBuilder().addBuilder(
            index, message.PokerProto.Poker_Response_RoomInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .com.nope.fishing.Poker_Response_RoomInfo room = 1;</code>
       *
       * <pre>
       * 0.5 s 1 lần
       * </pre>
       */
      public java.util.List<message.PokerProto.Poker_Response_RoomInfo.Builder> 
           getRoomBuilderList() {
        return getRoomFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          message.PokerProto.Poker_Response_RoomInfo, message.PokerProto.Poker_Response_RoomInfo.Builder, message.PokerProto.Poker_Response_RoomInfoOrBuilder> 
          getRoomFieldBuilder() {
        if (roomBuilder_ == null) {
          roomBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              message.PokerProto.Poker_Response_RoomInfo, message.PokerProto.Poker_Response_RoomInfo.Builder, message.PokerProto.Poker_Response_RoomInfoOrBuilder>(
                  room_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          room_ = null;
        }
        return roomBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:com.nope.fishing.Poker_Response_GameInfo)
    }

    static {
      defaultInstance = new Poker_Response_GameInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.nope.fishing.Poker_Response_GameInfo)
  }

  public interface Poker_Response_AllCountDown_10RoomOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated .com.nope.fishing.Poker_Response_CountDown room = 1;
    /**
     * <code>repeated .com.nope.fishing.Poker_Response_CountDown room = 1;</code>
     */
    java.util.List<message.PokerProto.Poker_Response_CountDown> 
        getRoomList();
    /**
     * <code>repeated .com.nope.fishing.Poker_Response_CountDown room = 1;</code>
     */
    message.PokerProto.Poker_Response_CountDown getRoom(int index);
    /**
     * <code>repeated .com.nope.fishing.Poker_Response_CountDown room = 1;</code>
     */
    int getRoomCount();
    /**
     * <code>repeated .com.nope.fishing.Poker_Response_CountDown room = 1;</code>
     */
    java.util.List<? extends message.PokerProto.Poker_Response_CountDownOrBuilder> 
        getRoomOrBuilderList();
    /**
     * <code>repeated .com.nope.fishing.Poker_Response_CountDown room = 1;</code>
     */
    message.PokerProto.Poker_Response_CountDownOrBuilder getRoomOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code com.nope.fishing.Poker_Response_AllCountDown_10Room}
   *
   * <pre>
   * Trả thông tin 10 room timecountdown
   * </pre>
   */
  public static final class Poker_Response_AllCountDown_10Room extends
      com.google.protobuf.GeneratedMessage
      implements Poker_Response_AllCountDown_10RoomOrBuilder {
    // Use Poker_Response_AllCountDown_10Room.newBuilder() to construct.
    private Poker_Response_AllCountDown_10Room(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Poker_Response_AllCountDown_10Room(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Poker_Response_AllCountDown_10Room defaultInstance;
    public static Poker_Response_AllCountDown_10Room getDefaultInstance() {
      return defaultInstance;
    }

    public Poker_Response_AllCountDown_10Room getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Poker_Response_AllCountDown_10Room(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                room_ = new java.util.ArrayList<message.PokerProto.Poker_Response_CountDown>();
                mutable_bitField0_ |= 0x00000001;
              }
              room_.add(input.readMessage(message.PokerProto.Poker_Response_CountDown.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          room_ = java.util.Collections.unmodifiableList(room_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return message.PokerProto.internal_static_com_nope_fishing_Poker_Response_AllCountDown_10Room_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return message.PokerProto.internal_static_com_nope_fishing_Poker_Response_AllCountDown_10Room_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              message.PokerProto.Poker_Response_AllCountDown_10Room.class, message.PokerProto.Poker_Response_AllCountDown_10Room.Builder.class);
    }

    public static com.google.protobuf.Parser<Poker_Response_AllCountDown_10Room> PARSER =
        new com.google.protobuf.AbstractParser<Poker_Response_AllCountDown_10Room>() {
      public Poker_Response_AllCountDown_10Room parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Poker_Response_AllCountDown_10Room(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Poker_Response_AllCountDown_10Room> getParserForType() {
      return PARSER;
    }

    // repeated .com.nope.fishing.Poker_Response_CountDown room = 1;
    public static final int ROOM_FIELD_NUMBER = 1;
    private java.util.List<message.PokerProto.Poker_Response_CountDown> room_;
    /**
     * <code>repeated .com.nope.fishing.Poker_Response_CountDown room = 1;</code>
     */
    public java.util.List<message.PokerProto.Poker_Response_CountDown> getRoomList() {
      return room_;
    }
    /**
     * <code>repeated .com.nope.fishing.Poker_Response_CountDown room = 1;</code>
     */
    public java.util.List<? extends message.PokerProto.Poker_Response_CountDownOrBuilder> 
        getRoomOrBuilderList() {
      return room_;
    }
    /**
     * <code>repeated .com.nope.fishing.Poker_Response_CountDown room = 1;</code>
     */
    public int getRoomCount() {
      return room_.size();
    }
    /**
     * <code>repeated .com.nope.fishing.Poker_Response_CountDown room = 1;</code>
     */
    public message.PokerProto.Poker_Response_CountDown getRoom(int index) {
      return room_.get(index);
    }
    /**
     * <code>repeated .com.nope.fishing.Poker_Response_CountDown room = 1;</code>
     */
    public message.PokerProto.Poker_Response_CountDownOrBuilder getRoomOrBuilder(
        int index) {
      return room_.get(index);
    }

    private void initFields() {
      room_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < room_.size(); i++) {
        output.writeMessage(1, room_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < room_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, room_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static message.PokerProto.Poker_Response_AllCountDown_10Room parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static message.PokerProto.Poker_Response_AllCountDown_10Room parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static message.PokerProto.Poker_Response_AllCountDown_10Room parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static message.PokerProto.Poker_Response_AllCountDown_10Room parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static message.PokerProto.Poker_Response_AllCountDown_10Room parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static message.PokerProto.Poker_Response_AllCountDown_10Room parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static message.PokerProto.Poker_Response_AllCountDown_10Room parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static message.PokerProto.Poker_Response_AllCountDown_10Room parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static message.PokerProto.Poker_Response_AllCountDown_10Room parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static message.PokerProto.Poker_Response_AllCountDown_10Room parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(message.PokerProto.Poker_Response_AllCountDown_10Room prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.nope.fishing.Poker_Response_AllCountDown_10Room}
     *
     * <pre>
     * Trả thông tin 10 room timecountdown
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements message.PokerProto.Poker_Response_AllCountDown_10RoomOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return message.PokerProto.internal_static_com_nope_fishing_Poker_Response_AllCountDown_10Room_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return message.PokerProto.internal_static_com_nope_fishing_Poker_Response_AllCountDown_10Room_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                message.PokerProto.Poker_Response_AllCountDown_10Room.class, message.PokerProto.Poker_Response_AllCountDown_10Room.Builder.class);
      }

      // Construct using message.PokerProto.Poker_Response_AllCountDown_10Room.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getRoomFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (roomBuilder_ == null) {
          room_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          roomBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return message.PokerProto.internal_static_com_nope_fishing_Poker_Response_AllCountDown_10Room_descriptor;
      }

      public message.PokerProto.Poker_Response_AllCountDown_10Room getDefaultInstanceForType() {
        return message.PokerProto.Poker_Response_AllCountDown_10Room.getDefaultInstance();
      }

      public message.PokerProto.Poker_Response_AllCountDown_10Room build() {
        message.PokerProto.Poker_Response_AllCountDown_10Room result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public message.PokerProto.Poker_Response_AllCountDown_10Room buildPartial() {
        message.PokerProto.Poker_Response_AllCountDown_10Room result = new message.PokerProto.Poker_Response_AllCountDown_10Room(this);
        int from_bitField0_ = bitField0_;
        if (roomBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            room_ = java.util.Collections.unmodifiableList(room_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.room_ = room_;
        } else {
          result.room_ = roomBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof message.PokerProto.Poker_Response_AllCountDown_10Room) {
          return mergeFrom((message.PokerProto.Poker_Response_AllCountDown_10Room)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(message.PokerProto.Poker_Response_AllCountDown_10Room other) {
        if (other == message.PokerProto.Poker_Response_AllCountDown_10Room.getDefaultInstance()) return this;
        if (roomBuilder_ == null) {
          if (!other.room_.isEmpty()) {
            if (room_.isEmpty()) {
              room_ = other.room_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureRoomIsMutable();
              room_.addAll(other.room_);
            }
            onChanged();
          }
        } else {
          if (!other.room_.isEmpty()) {
            if (roomBuilder_.isEmpty()) {
              roomBuilder_.dispose();
              roomBuilder_ = null;
              room_ = other.room_;
              bitField0_ = (bitField0_ & ~0x00000001);
              roomBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getRoomFieldBuilder() : null;
            } else {
              roomBuilder_.addAllMessages(other.room_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        message.PokerProto.Poker_Response_AllCountDown_10Room parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (message.PokerProto.Poker_Response_AllCountDown_10Room) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .com.nope.fishing.Poker_Response_CountDown room = 1;
      private java.util.List<message.PokerProto.Poker_Response_CountDown> room_ =
        java.util.Collections.emptyList();
      private void ensureRoomIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          room_ = new java.util.ArrayList<message.PokerProto.Poker_Response_CountDown>(room_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          message.PokerProto.Poker_Response_CountDown, message.PokerProto.Poker_Response_CountDown.Builder, message.PokerProto.Poker_Response_CountDownOrBuilder> roomBuilder_;

      /**
       * <code>repeated .com.nope.fishing.Poker_Response_CountDown room = 1;</code>
       */
      public java.util.List<message.PokerProto.Poker_Response_CountDown> getRoomList() {
        if (roomBuilder_ == null) {
          return java.util.Collections.unmodifiableList(room_);
        } else {
          return roomBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.nope.fishing.Poker_Response_CountDown room = 1;</code>
       */
      public int getRoomCount() {
        if (roomBuilder_ == null) {
          return room_.size();
        } else {
          return roomBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.nope.fishing.Poker_Response_CountDown room = 1;</code>
       */
      public message.PokerProto.Poker_Response_CountDown getRoom(int index) {
        if (roomBuilder_ == null) {
          return room_.get(index);
        } else {
          return roomBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.nope.fishing.Poker_Response_CountDown room = 1;</code>
       */
      public Builder setRoom(
          int index, message.PokerProto.Poker_Response_CountDown value) {
        if (roomBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRoomIsMutable();
          room_.set(index, value);
          onChanged();
        } else {
          roomBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.nope.fishing.Poker_Response_CountDown room = 1;</code>
       */
      public Builder setRoom(
          int index, message.PokerProto.Poker_Response_CountDown.Builder builderForValue) {
        if (roomBuilder_ == null) {
          ensureRoomIsMutable();
          room_.set(index, builderForValue.build());
          onChanged();
        } else {
          roomBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.nope.fishing.Poker_Response_CountDown room = 1;</code>
       */
      public Builder addRoom(message.PokerProto.Poker_Response_CountDown value) {
        if (roomBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRoomIsMutable();
          room_.add(value);
          onChanged();
        } else {
          roomBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.nope.fishing.Poker_Response_CountDown room = 1;</code>
       */
      public Builder addRoom(
          int index, message.PokerProto.Poker_Response_CountDown value) {
        if (roomBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRoomIsMutable();
          room_.add(index, value);
          onChanged();
        } else {
          roomBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.nope.fishing.Poker_Response_CountDown room = 1;</code>
       */
      public Builder addRoom(
          message.PokerProto.Poker_Response_CountDown.Builder builderForValue) {
        if (roomBuilder_ == null) {
          ensureRoomIsMutable();
          room_.add(builderForValue.build());
          onChanged();
        } else {
          roomBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.nope.fishing.Poker_Response_CountDown room = 1;</code>
       */
      public Builder addRoom(
          int index, message.PokerProto.Poker_Response_CountDown.Builder builderForValue) {
        if (roomBuilder_ == null) {
          ensureRoomIsMutable();
          room_.add(index, builderForValue.build());
          onChanged();
        } else {
          roomBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.nope.fishing.Poker_Response_CountDown room = 1;</code>
       */
      public Builder addAllRoom(
          java.lang.Iterable<? extends message.PokerProto.Poker_Response_CountDown> values) {
        if (roomBuilder_ == null) {
          ensureRoomIsMutable();
          super.addAll(values, room_);
          onChanged();
        } else {
          roomBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.nope.fishing.Poker_Response_CountDown room = 1;</code>
       */
      public Builder clearRoom() {
        if (roomBuilder_ == null) {
          room_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          roomBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.nope.fishing.Poker_Response_CountDown room = 1;</code>
       */
      public Builder removeRoom(int index) {
        if (roomBuilder_ == null) {
          ensureRoomIsMutable();
          room_.remove(index);
          onChanged();
        } else {
          roomBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.nope.fishing.Poker_Response_CountDown room = 1;</code>
       */
      public message.PokerProto.Poker_Response_CountDown.Builder getRoomBuilder(
          int index) {
        return getRoomFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.nope.fishing.Poker_Response_CountDown room = 1;</code>
       */
      public message.PokerProto.Poker_Response_CountDownOrBuilder getRoomOrBuilder(
          int index) {
        if (roomBuilder_ == null) {
          return room_.get(index);  } else {
          return roomBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.nope.fishing.Poker_Response_CountDown room = 1;</code>
       */
      public java.util.List<? extends message.PokerProto.Poker_Response_CountDownOrBuilder> 
           getRoomOrBuilderList() {
        if (roomBuilder_ != null) {
          return roomBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(room_);
        }
      }
      /**
       * <code>repeated .com.nope.fishing.Poker_Response_CountDown room = 1;</code>
       */
      public message.PokerProto.Poker_Response_CountDown.Builder addRoomBuilder() {
        return getRoomFieldBuilder().addBuilder(
            message.PokerProto.Poker_Response_CountDown.getDefaultInstance());
      }
      /**
       * <code>repeated .com.nope.fishing.Poker_Response_CountDown room = 1;</code>
       */
      public message.PokerProto.Poker_Response_CountDown.Builder addRoomBuilder(
          int index) {
        return getRoomFieldBuilder().addBuilder(
            index, message.PokerProto.Poker_Response_CountDown.getDefaultInstance());
      }
      /**
       * <code>repeated .com.nope.fishing.Poker_Response_CountDown room = 1;</code>
       */
      public java.util.List<message.PokerProto.Poker_Response_CountDown.Builder> 
           getRoomBuilderList() {
        return getRoomFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          message.PokerProto.Poker_Response_CountDown, message.PokerProto.Poker_Response_CountDown.Builder, message.PokerProto.Poker_Response_CountDownOrBuilder> 
          getRoomFieldBuilder() {
        if (roomBuilder_ == null) {
          roomBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              message.PokerProto.Poker_Response_CountDown, message.PokerProto.Poker_Response_CountDown.Builder, message.PokerProto.Poker_Response_CountDownOrBuilder>(
                  room_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          room_ = null;
        }
        return roomBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:com.nope.fishing.Poker_Response_AllCountDown_10Room)
    }

    static {
      defaultInstance = new Poker_Response_AllCountDown_10Room(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.nope.fishing.Poker_Response_AllCountDown_10Room)
  }

  public interface Poker_Response_UpdateMoneyOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int64 money = 1;
    /**
     * <code>optional int64 money = 1;</code>
     */
    boolean hasMoney();
    /**
     * <code>optional int64 money = 1;</code>
     */
    long getMoney();
  }
  /**
   * Protobuf type {@code com.nope.fishing.Poker_Response_UpdateMoney}
   *
   * <pre>
   * -----------------------------------------------------------------------------------------------------
   * </pre>
   */
  public static final class Poker_Response_UpdateMoney extends
      com.google.protobuf.GeneratedMessage
      implements Poker_Response_UpdateMoneyOrBuilder {
    // Use Poker_Response_UpdateMoney.newBuilder() to construct.
    private Poker_Response_UpdateMoney(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Poker_Response_UpdateMoney(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Poker_Response_UpdateMoney defaultInstance;
    public static Poker_Response_UpdateMoney getDefaultInstance() {
      return defaultInstance;
    }

    public Poker_Response_UpdateMoney getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Poker_Response_UpdateMoney(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              money_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return message.PokerProto.internal_static_com_nope_fishing_Poker_Response_UpdateMoney_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return message.PokerProto.internal_static_com_nope_fishing_Poker_Response_UpdateMoney_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              message.PokerProto.Poker_Response_UpdateMoney.class, message.PokerProto.Poker_Response_UpdateMoney.Builder.class);
    }

    public static com.google.protobuf.Parser<Poker_Response_UpdateMoney> PARSER =
        new com.google.protobuf.AbstractParser<Poker_Response_UpdateMoney>() {
      public Poker_Response_UpdateMoney parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Poker_Response_UpdateMoney(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Poker_Response_UpdateMoney> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int64 money = 1;
    public static final int MONEY_FIELD_NUMBER = 1;
    private long money_;
    /**
     * <code>optional int64 money = 1;</code>
     */
    public boolean hasMoney() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 money = 1;</code>
     */
    public long getMoney() {
      return money_;
    }

    private void initFields() {
      money_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, money_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, money_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static message.PokerProto.Poker_Response_UpdateMoney parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static message.PokerProto.Poker_Response_UpdateMoney parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static message.PokerProto.Poker_Response_UpdateMoney parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static message.PokerProto.Poker_Response_UpdateMoney parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static message.PokerProto.Poker_Response_UpdateMoney parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static message.PokerProto.Poker_Response_UpdateMoney parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static message.PokerProto.Poker_Response_UpdateMoney parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static message.PokerProto.Poker_Response_UpdateMoney parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static message.PokerProto.Poker_Response_UpdateMoney parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static message.PokerProto.Poker_Response_UpdateMoney parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(message.PokerProto.Poker_Response_UpdateMoney prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.nope.fishing.Poker_Response_UpdateMoney}
     *
     * <pre>
     * -----------------------------------------------------------------------------------------------------
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements message.PokerProto.Poker_Response_UpdateMoneyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return message.PokerProto.internal_static_com_nope_fishing_Poker_Response_UpdateMoney_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return message.PokerProto.internal_static_com_nope_fishing_Poker_Response_UpdateMoney_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                message.PokerProto.Poker_Response_UpdateMoney.class, message.PokerProto.Poker_Response_UpdateMoney.Builder.class);
      }

      // Construct using message.PokerProto.Poker_Response_UpdateMoney.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        money_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return message.PokerProto.internal_static_com_nope_fishing_Poker_Response_UpdateMoney_descriptor;
      }

      public message.PokerProto.Poker_Response_UpdateMoney getDefaultInstanceForType() {
        return message.PokerProto.Poker_Response_UpdateMoney.getDefaultInstance();
      }

      public message.PokerProto.Poker_Response_UpdateMoney build() {
        message.PokerProto.Poker_Response_UpdateMoney result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public message.PokerProto.Poker_Response_UpdateMoney buildPartial() {
        message.PokerProto.Poker_Response_UpdateMoney result = new message.PokerProto.Poker_Response_UpdateMoney(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.money_ = money_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof message.PokerProto.Poker_Response_UpdateMoney) {
          return mergeFrom((message.PokerProto.Poker_Response_UpdateMoney)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(message.PokerProto.Poker_Response_UpdateMoney other) {
        if (other == message.PokerProto.Poker_Response_UpdateMoney.getDefaultInstance()) return this;
        if (other.hasMoney()) {
          setMoney(other.getMoney());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        message.PokerProto.Poker_Response_UpdateMoney parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (message.PokerProto.Poker_Response_UpdateMoney) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int64 money = 1;
      private long money_ ;
      /**
       * <code>optional int64 money = 1;</code>
       */
      public boolean hasMoney() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 money = 1;</code>
       */
      public long getMoney() {
        return money_;
      }
      /**
       * <code>optional int64 money = 1;</code>
       */
      public Builder setMoney(long value) {
        bitField0_ |= 0x00000001;
        money_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 money = 1;</code>
       */
      public Builder clearMoney() {
        bitField0_ = (bitField0_ & ~0x00000001);
        money_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.nope.fishing.Poker_Response_UpdateMoney)
    }

    static {
      defaultInstance = new Poker_Response_UpdateMoney(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.nope.fishing.Poker_Response_UpdateMoney)
  }

  public interface Poker_Request_JoinFakePlayerOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 RoomID = 1;
    /**
     * <code>optional int32 RoomID = 1;</code>
     */
    boolean hasRoomID();
    /**
     * <code>optional int32 RoomID = 1;</code>
     */
    int getRoomID();

    // optional int32 id = 2;
    /**
     * <code>optional int32 id = 2;</code>
     */
    boolean hasId();
    /**
     * <code>optional int32 id = 2;</code>
     */
    int getId();

    // optional string username = 3;
    /**
     * <code>optional string username = 3;</code>
     */
    boolean hasUsername();
    /**
     * <code>optional string username = 3;</code>
     */
    java.lang.String getUsername();
    /**
     * <code>optional string username = 3;</code>
     */
    com.google.protobuf.ByteString
        getUsernameBytes();
  }
  /**
   * Protobuf type {@code com.nope.fishing.Poker_Request_JoinFakePlayer}
   */
  public static final class Poker_Request_JoinFakePlayer extends
      com.google.protobuf.GeneratedMessage
      implements Poker_Request_JoinFakePlayerOrBuilder {
    // Use Poker_Request_JoinFakePlayer.newBuilder() to construct.
    private Poker_Request_JoinFakePlayer(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Poker_Request_JoinFakePlayer(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Poker_Request_JoinFakePlayer defaultInstance;
    public static Poker_Request_JoinFakePlayer getDefaultInstance() {
      return defaultInstance;
    }

    public Poker_Request_JoinFakePlayer getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Poker_Request_JoinFakePlayer(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              roomID_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              id_ = input.readInt32();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              username_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return message.PokerProto.internal_static_com_nope_fishing_Poker_Request_JoinFakePlayer_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return message.PokerProto.internal_static_com_nope_fishing_Poker_Request_JoinFakePlayer_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              message.PokerProto.Poker_Request_JoinFakePlayer.class, message.PokerProto.Poker_Request_JoinFakePlayer.Builder.class);
    }

    public static com.google.protobuf.Parser<Poker_Request_JoinFakePlayer> PARSER =
        new com.google.protobuf.AbstractParser<Poker_Request_JoinFakePlayer>() {
      public Poker_Request_JoinFakePlayer parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Poker_Request_JoinFakePlayer(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Poker_Request_JoinFakePlayer> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 RoomID = 1;
    public static final int ROOMID_FIELD_NUMBER = 1;
    private int roomID_;
    /**
     * <code>optional int32 RoomID = 1;</code>
     */
    public boolean hasRoomID() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 RoomID = 1;</code>
     */
    public int getRoomID() {
      return roomID_;
    }

    // optional int32 id = 2;
    public static final int ID_FIELD_NUMBER = 2;
    private int id_;
    /**
     * <code>optional int32 id = 2;</code>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 id = 2;</code>
     */
    public int getId() {
      return id_;
    }

    // optional string username = 3;
    public static final int USERNAME_FIELD_NUMBER = 3;
    private java.lang.Object username_;
    /**
     * <code>optional string username = 3;</code>
     */
    public boolean hasUsername() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string username = 3;</code>
     */
    public java.lang.String getUsername() {
      java.lang.Object ref = username_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          username_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string username = 3;</code>
     */
    public com.google.protobuf.ByteString
        getUsernameBytes() {
      java.lang.Object ref = username_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        username_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      roomID_ = 0;
      id_ = 0;
      username_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, roomID_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, id_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getUsernameBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, roomID_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, id_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getUsernameBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static message.PokerProto.Poker_Request_JoinFakePlayer parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static message.PokerProto.Poker_Request_JoinFakePlayer parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static message.PokerProto.Poker_Request_JoinFakePlayer parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static message.PokerProto.Poker_Request_JoinFakePlayer parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static message.PokerProto.Poker_Request_JoinFakePlayer parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static message.PokerProto.Poker_Request_JoinFakePlayer parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static message.PokerProto.Poker_Request_JoinFakePlayer parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static message.PokerProto.Poker_Request_JoinFakePlayer parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static message.PokerProto.Poker_Request_JoinFakePlayer parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static message.PokerProto.Poker_Request_JoinFakePlayer parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(message.PokerProto.Poker_Request_JoinFakePlayer prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.nope.fishing.Poker_Request_JoinFakePlayer}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements message.PokerProto.Poker_Request_JoinFakePlayerOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return message.PokerProto.internal_static_com_nope_fishing_Poker_Request_JoinFakePlayer_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return message.PokerProto.internal_static_com_nope_fishing_Poker_Request_JoinFakePlayer_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                message.PokerProto.Poker_Request_JoinFakePlayer.class, message.PokerProto.Poker_Request_JoinFakePlayer.Builder.class);
      }

      // Construct using message.PokerProto.Poker_Request_JoinFakePlayer.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        roomID_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        username_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return message.PokerProto.internal_static_com_nope_fishing_Poker_Request_JoinFakePlayer_descriptor;
      }

      public message.PokerProto.Poker_Request_JoinFakePlayer getDefaultInstanceForType() {
        return message.PokerProto.Poker_Request_JoinFakePlayer.getDefaultInstance();
      }

      public message.PokerProto.Poker_Request_JoinFakePlayer build() {
        message.PokerProto.Poker_Request_JoinFakePlayer result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public message.PokerProto.Poker_Request_JoinFakePlayer buildPartial() {
        message.PokerProto.Poker_Request_JoinFakePlayer result = new message.PokerProto.Poker_Request_JoinFakePlayer(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.roomID_ = roomID_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.username_ = username_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof message.PokerProto.Poker_Request_JoinFakePlayer) {
          return mergeFrom((message.PokerProto.Poker_Request_JoinFakePlayer)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(message.PokerProto.Poker_Request_JoinFakePlayer other) {
        if (other == message.PokerProto.Poker_Request_JoinFakePlayer.getDefaultInstance()) return this;
        if (other.hasRoomID()) {
          setRoomID(other.getRoomID());
        }
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasUsername()) {
          bitField0_ |= 0x00000004;
          username_ = other.username_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        message.PokerProto.Poker_Request_JoinFakePlayer parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (message.PokerProto.Poker_Request_JoinFakePlayer) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 RoomID = 1;
      private int roomID_ ;
      /**
       * <code>optional int32 RoomID = 1;</code>
       */
      public boolean hasRoomID() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 RoomID = 1;</code>
       */
      public int getRoomID() {
        return roomID_;
      }
      /**
       * <code>optional int32 RoomID = 1;</code>
       */
      public Builder setRoomID(int value) {
        bitField0_ |= 0x00000001;
        roomID_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 RoomID = 1;</code>
       */
      public Builder clearRoomID() {
        bitField0_ = (bitField0_ & ~0x00000001);
        roomID_ = 0;
        onChanged();
        return this;
      }

      // optional int32 id = 2;
      private int id_ ;
      /**
       * <code>optional int32 id = 2;</code>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 id = 2;</code>
       */
      public int getId() {
        return id_;
      }
      /**
       * <code>optional int32 id = 2;</code>
       */
      public Builder setId(int value) {
        bitField0_ |= 0x00000002;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 id = 2;</code>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        id_ = 0;
        onChanged();
        return this;
      }

      // optional string username = 3;
      private java.lang.Object username_ = "";
      /**
       * <code>optional string username = 3;</code>
       */
      public boolean hasUsername() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string username = 3;</code>
       */
      public java.lang.String getUsername() {
        java.lang.Object ref = username_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          username_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string username = 3;</code>
       */
      public com.google.protobuf.ByteString
          getUsernameBytes() {
        java.lang.Object ref = username_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          username_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string username = 3;</code>
       */
      public Builder setUsername(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        username_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string username = 3;</code>
       */
      public Builder clearUsername() {
        bitField0_ = (bitField0_ & ~0x00000004);
        username_ = getDefaultInstance().getUsername();
        onChanged();
        return this;
      }
      /**
       * <code>optional string username = 3;</code>
       */
      public Builder setUsernameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        username_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.nope.fishing.Poker_Request_JoinFakePlayer)
    }

    static {
      defaultInstance = new Poker_Request_JoinFakePlayer(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.nope.fishing.Poker_Request_JoinFakePlayer)
  }

  public interface Poker_Request_JoinLobbyOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code com.nope.fishing.Poker_Request_JoinLobby}
   *
   * <pre>
   * -----------------------------------------------------------------------------------------------------
   * </pre>
   */
  public static final class Poker_Request_JoinLobby extends
      com.google.protobuf.GeneratedMessage
      implements Poker_Request_JoinLobbyOrBuilder {
    // Use Poker_Request_JoinLobby.newBuilder() to construct.
    private Poker_Request_JoinLobby(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Poker_Request_JoinLobby(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Poker_Request_JoinLobby defaultInstance;
    public static Poker_Request_JoinLobby getDefaultInstance() {
      return defaultInstance;
    }

    public Poker_Request_JoinLobby getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Poker_Request_JoinLobby(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return message.PokerProto.internal_static_com_nope_fishing_Poker_Request_JoinLobby_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return message.PokerProto.internal_static_com_nope_fishing_Poker_Request_JoinLobby_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              message.PokerProto.Poker_Request_JoinLobby.class, message.PokerProto.Poker_Request_JoinLobby.Builder.class);
    }

    public static com.google.protobuf.Parser<Poker_Request_JoinLobby> PARSER =
        new com.google.protobuf.AbstractParser<Poker_Request_JoinLobby>() {
      public Poker_Request_JoinLobby parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Poker_Request_JoinLobby(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Poker_Request_JoinLobby> getParserForType() {
      return PARSER;
    }

    private void initFields() {
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static message.PokerProto.Poker_Request_JoinLobby parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static message.PokerProto.Poker_Request_JoinLobby parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static message.PokerProto.Poker_Request_JoinLobby parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static message.PokerProto.Poker_Request_JoinLobby parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static message.PokerProto.Poker_Request_JoinLobby parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static message.PokerProto.Poker_Request_JoinLobby parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static message.PokerProto.Poker_Request_JoinLobby parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static message.PokerProto.Poker_Request_JoinLobby parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static message.PokerProto.Poker_Request_JoinLobby parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static message.PokerProto.Poker_Request_JoinLobby parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(message.PokerProto.Poker_Request_JoinLobby prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.nope.fishing.Poker_Request_JoinLobby}
     *
     * <pre>
     * -----------------------------------------------------------------------------------------------------
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements message.PokerProto.Poker_Request_JoinLobbyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return message.PokerProto.internal_static_com_nope_fishing_Poker_Request_JoinLobby_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return message.PokerProto.internal_static_com_nope_fishing_Poker_Request_JoinLobby_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                message.PokerProto.Poker_Request_JoinLobby.class, message.PokerProto.Poker_Request_JoinLobby.Builder.class);
      }

      // Construct using message.PokerProto.Poker_Request_JoinLobby.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return message.PokerProto.internal_static_com_nope_fishing_Poker_Request_JoinLobby_descriptor;
      }

      public message.PokerProto.Poker_Request_JoinLobby getDefaultInstanceForType() {
        return message.PokerProto.Poker_Request_JoinLobby.getDefaultInstance();
      }

      public message.PokerProto.Poker_Request_JoinLobby build() {
        message.PokerProto.Poker_Request_JoinLobby result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public message.PokerProto.Poker_Request_JoinLobby buildPartial() {
        message.PokerProto.Poker_Request_JoinLobby result = new message.PokerProto.Poker_Request_JoinLobby(this);
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof message.PokerProto.Poker_Request_JoinLobby) {
          return mergeFrom((message.PokerProto.Poker_Request_JoinLobby)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(message.PokerProto.Poker_Request_JoinLobby other) {
        if (other == message.PokerProto.Poker_Request_JoinLobby.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        message.PokerProto.Poker_Request_JoinLobby parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (message.PokerProto.Poker_Request_JoinLobby) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.nope.fishing.Poker_Request_JoinLobby)
    }

    static {
      defaultInstance = new Poker_Request_JoinLobby(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.nope.fishing.Poker_Request_JoinLobby)
  }

  public interface Poker_Request_LeaveLobbyOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code com.nope.fishing.Poker_Request_LeaveLobby}
   */
  public static final class Poker_Request_LeaveLobby extends
      com.google.protobuf.GeneratedMessage
      implements Poker_Request_LeaveLobbyOrBuilder {
    // Use Poker_Request_LeaveLobby.newBuilder() to construct.
    private Poker_Request_LeaveLobby(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Poker_Request_LeaveLobby(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Poker_Request_LeaveLobby defaultInstance;
    public static Poker_Request_LeaveLobby getDefaultInstance() {
      return defaultInstance;
    }

    public Poker_Request_LeaveLobby getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Poker_Request_LeaveLobby(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return message.PokerProto.internal_static_com_nope_fishing_Poker_Request_LeaveLobby_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return message.PokerProto.internal_static_com_nope_fishing_Poker_Request_LeaveLobby_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              message.PokerProto.Poker_Request_LeaveLobby.class, message.PokerProto.Poker_Request_LeaveLobby.Builder.class);
    }

    public static com.google.protobuf.Parser<Poker_Request_LeaveLobby> PARSER =
        new com.google.protobuf.AbstractParser<Poker_Request_LeaveLobby>() {
      public Poker_Request_LeaveLobby parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Poker_Request_LeaveLobby(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Poker_Request_LeaveLobby> getParserForType() {
      return PARSER;
    }

    private void initFields() {
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static message.PokerProto.Poker_Request_LeaveLobby parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static message.PokerProto.Poker_Request_LeaveLobby parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static message.PokerProto.Poker_Request_LeaveLobby parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static message.PokerProto.Poker_Request_LeaveLobby parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static message.PokerProto.Poker_Request_LeaveLobby parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static message.PokerProto.Poker_Request_LeaveLobby parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static message.PokerProto.Poker_Request_LeaveLobby parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static message.PokerProto.Poker_Request_LeaveLobby parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static message.PokerProto.Poker_Request_LeaveLobby parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static message.PokerProto.Poker_Request_LeaveLobby parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(message.PokerProto.Poker_Request_LeaveLobby prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.nope.fishing.Poker_Request_LeaveLobby}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements message.PokerProto.Poker_Request_LeaveLobbyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return message.PokerProto.internal_static_com_nope_fishing_Poker_Request_LeaveLobby_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return message.PokerProto.internal_static_com_nope_fishing_Poker_Request_LeaveLobby_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                message.PokerProto.Poker_Request_LeaveLobby.class, message.PokerProto.Poker_Request_LeaveLobby.Builder.class);
      }

      // Construct using message.PokerProto.Poker_Request_LeaveLobby.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return message.PokerProto.internal_static_com_nope_fishing_Poker_Request_LeaveLobby_descriptor;
      }

      public message.PokerProto.Poker_Request_LeaveLobby getDefaultInstanceForType() {
        return message.PokerProto.Poker_Request_LeaveLobby.getDefaultInstance();
      }

      public message.PokerProto.Poker_Request_LeaveLobby build() {
        message.PokerProto.Poker_Request_LeaveLobby result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public message.PokerProto.Poker_Request_LeaveLobby buildPartial() {
        message.PokerProto.Poker_Request_LeaveLobby result = new message.PokerProto.Poker_Request_LeaveLobby(this);
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof message.PokerProto.Poker_Request_LeaveLobby) {
          return mergeFrom((message.PokerProto.Poker_Request_LeaveLobby)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(message.PokerProto.Poker_Request_LeaveLobby other) {
        if (other == message.PokerProto.Poker_Request_LeaveLobby.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        message.PokerProto.Poker_Request_LeaveLobby parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (message.PokerProto.Poker_Request_LeaveLobby) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.nope.fishing.Poker_Request_LeaveLobby)
    }

    static {
      defaultInstance = new Poker_Request_LeaveLobby(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.nope.fishing.Poker_Request_LeaveLobby)
  }

  public interface Poker_Request_JoinRoomOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 roomid = 1;
    /**
     * <code>optional int32 roomid = 1;</code>
     */
    boolean hasRoomid();
    /**
     * <code>optional int32 roomid = 1;</code>
     */
    int getRoomid();
  }
  /**
   * Protobuf type {@code com.nope.fishing.Poker_Request_JoinRoom}
   *
   * <pre>
   * Nhận yêu cầu user khi join room - dựa vào roomid (5000)
   * </pre>
   */
  public static final class Poker_Request_JoinRoom extends
      com.google.protobuf.GeneratedMessage
      implements Poker_Request_JoinRoomOrBuilder {
    // Use Poker_Request_JoinRoom.newBuilder() to construct.
    private Poker_Request_JoinRoom(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Poker_Request_JoinRoom(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Poker_Request_JoinRoom defaultInstance;
    public static Poker_Request_JoinRoom getDefaultInstance() {
      return defaultInstance;
    }

    public Poker_Request_JoinRoom getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Poker_Request_JoinRoom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              roomid_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return message.PokerProto.internal_static_com_nope_fishing_Poker_Request_JoinRoom_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return message.PokerProto.internal_static_com_nope_fishing_Poker_Request_JoinRoom_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              message.PokerProto.Poker_Request_JoinRoom.class, message.PokerProto.Poker_Request_JoinRoom.Builder.class);
    }

    public static com.google.protobuf.Parser<Poker_Request_JoinRoom> PARSER =
        new com.google.protobuf.AbstractParser<Poker_Request_JoinRoom>() {
      public Poker_Request_JoinRoom parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Poker_Request_JoinRoom(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Poker_Request_JoinRoom> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 roomid = 1;
    public static final int ROOMID_FIELD_NUMBER = 1;
    private int roomid_;
    /**
     * <code>optional int32 roomid = 1;</code>
     */
    public boolean hasRoomid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 roomid = 1;</code>
     */
    public int getRoomid() {
      return roomid_;
    }

    private void initFields() {
      roomid_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, roomid_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, roomid_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static message.PokerProto.Poker_Request_JoinRoom parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static message.PokerProto.Poker_Request_JoinRoom parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static message.PokerProto.Poker_Request_JoinRoom parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static message.PokerProto.Poker_Request_JoinRoom parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static message.PokerProto.Poker_Request_JoinRoom parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static message.PokerProto.Poker_Request_JoinRoom parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static message.PokerProto.Poker_Request_JoinRoom parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static message.PokerProto.Poker_Request_JoinRoom parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static message.PokerProto.Poker_Request_JoinRoom parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static message.PokerProto.Poker_Request_JoinRoom parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(message.PokerProto.Poker_Request_JoinRoom prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.nope.fishing.Poker_Request_JoinRoom}
     *
     * <pre>
     * Nhận yêu cầu user khi join room - dựa vào roomid (5000)
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements message.PokerProto.Poker_Request_JoinRoomOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return message.PokerProto.internal_static_com_nope_fishing_Poker_Request_JoinRoom_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return message.PokerProto.internal_static_com_nope_fishing_Poker_Request_JoinRoom_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                message.PokerProto.Poker_Request_JoinRoom.class, message.PokerProto.Poker_Request_JoinRoom.Builder.class);
      }

      // Construct using message.PokerProto.Poker_Request_JoinRoom.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        roomid_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return message.PokerProto.internal_static_com_nope_fishing_Poker_Request_JoinRoom_descriptor;
      }

      public message.PokerProto.Poker_Request_JoinRoom getDefaultInstanceForType() {
        return message.PokerProto.Poker_Request_JoinRoom.getDefaultInstance();
      }

      public message.PokerProto.Poker_Request_JoinRoom build() {
        message.PokerProto.Poker_Request_JoinRoom result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public message.PokerProto.Poker_Request_JoinRoom buildPartial() {
        message.PokerProto.Poker_Request_JoinRoom result = new message.PokerProto.Poker_Request_JoinRoom(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.roomid_ = roomid_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof message.PokerProto.Poker_Request_JoinRoom) {
          return mergeFrom((message.PokerProto.Poker_Request_JoinRoom)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(message.PokerProto.Poker_Request_JoinRoom other) {
        if (other == message.PokerProto.Poker_Request_JoinRoom.getDefaultInstance()) return this;
        if (other.hasRoomid()) {
          setRoomid(other.getRoomid());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        message.PokerProto.Poker_Request_JoinRoom parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (message.PokerProto.Poker_Request_JoinRoom) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 roomid = 1;
      private int roomid_ ;
      /**
       * <code>optional int32 roomid = 1;</code>
       */
      public boolean hasRoomid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 roomid = 1;</code>
       */
      public int getRoomid() {
        return roomid_;
      }
      /**
       * <code>optional int32 roomid = 1;</code>
       */
      public Builder setRoomid(int value) {
        bitField0_ |= 0x00000001;
        roomid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 roomid = 1;</code>
       */
      public Builder clearRoomid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        roomid_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.nope.fishing.Poker_Request_JoinRoom)
    }

    static {
      defaultInstance = new Poker_Request_JoinRoom(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.nope.fishing.Poker_Request_JoinRoom)
  }

  public interface Poker_Request_LeaveRoomOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 roomid = 1;
    /**
     * <code>optional int32 roomid = 1;</code>
     */
    boolean hasRoomid();
    /**
     * <code>optional int32 roomid = 1;</code>
     */
    int getRoomid();

    // optional int32 errorCode = 2;
    /**
     * <code>optional int32 errorCode = 2;</code>
     */
    boolean hasErrorCode();
    /**
     * <code>optional int32 errorCode = 2;</code>
     */
    int getErrorCode();
  }
  /**
   * Protobuf type {@code com.nope.fishing.Poker_Request_LeaveRoom}
   */
  public static final class Poker_Request_LeaveRoom extends
      com.google.protobuf.GeneratedMessage
      implements Poker_Request_LeaveRoomOrBuilder {
    // Use Poker_Request_LeaveRoom.newBuilder() to construct.
    private Poker_Request_LeaveRoom(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Poker_Request_LeaveRoom(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Poker_Request_LeaveRoom defaultInstance;
    public static Poker_Request_LeaveRoom getDefaultInstance() {
      return defaultInstance;
    }

    public Poker_Request_LeaveRoom getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Poker_Request_LeaveRoom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              roomid_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              errorCode_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return message.PokerProto.internal_static_com_nope_fishing_Poker_Request_LeaveRoom_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return message.PokerProto.internal_static_com_nope_fishing_Poker_Request_LeaveRoom_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              message.PokerProto.Poker_Request_LeaveRoom.class, message.PokerProto.Poker_Request_LeaveRoom.Builder.class);
    }

    public static com.google.protobuf.Parser<Poker_Request_LeaveRoom> PARSER =
        new com.google.protobuf.AbstractParser<Poker_Request_LeaveRoom>() {
      public Poker_Request_LeaveRoom parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Poker_Request_LeaveRoom(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Poker_Request_LeaveRoom> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 roomid = 1;
    public static final int ROOMID_FIELD_NUMBER = 1;
    private int roomid_;
    /**
     * <code>optional int32 roomid = 1;</code>
     */
    public boolean hasRoomid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 roomid = 1;</code>
     */
    public int getRoomid() {
      return roomid_;
    }

    // optional int32 errorCode = 2;
    public static final int ERRORCODE_FIELD_NUMBER = 2;
    private int errorCode_;
    /**
     * <code>optional int32 errorCode = 2;</code>
     */
    public boolean hasErrorCode() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 errorCode = 2;</code>
     */
    public int getErrorCode() {
      return errorCode_;
    }

    private void initFields() {
      roomid_ = 0;
      errorCode_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, roomid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, errorCode_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, roomid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, errorCode_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static message.PokerProto.Poker_Request_LeaveRoom parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static message.PokerProto.Poker_Request_LeaveRoom parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static message.PokerProto.Poker_Request_LeaveRoom parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static message.PokerProto.Poker_Request_LeaveRoom parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static message.PokerProto.Poker_Request_LeaveRoom parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static message.PokerProto.Poker_Request_LeaveRoom parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static message.PokerProto.Poker_Request_LeaveRoom parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static message.PokerProto.Poker_Request_LeaveRoom parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static message.PokerProto.Poker_Request_LeaveRoom parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static message.PokerProto.Poker_Request_LeaveRoom parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(message.PokerProto.Poker_Request_LeaveRoom prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.nope.fishing.Poker_Request_LeaveRoom}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements message.PokerProto.Poker_Request_LeaveRoomOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return message.PokerProto.internal_static_com_nope_fishing_Poker_Request_LeaveRoom_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return message.PokerProto.internal_static_com_nope_fishing_Poker_Request_LeaveRoom_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                message.PokerProto.Poker_Request_LeaveRoom.class, message.PokerProto.Poker_Request_LeaveRoom.Builder.class);
      }

      // Construct using message.PokerProto.Poker_Request_LeaveRoom.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        roomid_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        errorCode_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return message.PokerProto.internal_static_com_nope_fishing_Poker_Request_LeaveRoom_descriptor;
      }

      public message.PokerProto.Poker_Request_LeaveRoom getDefaultInstanceForType() {
        return message.PokerProto.Poker_Request_LeaveRoom.getDefaultInstance();
      }

      public message.PokerProto.Poker_Request_LeaveRoom build() {
        message.PokerProto.Poker_Request_LeaveRoom result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public message.PokerProto.Poker_Request_LeaveRoom buildPartial() {
        message.PokerProto.Poker_Request_LeaveRoom result = new message.PokerProto.Poker_Request_LeaveRoom(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.roomid_ = roomid_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.errorCode_ = errorCode_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof message.PokerProto.Poker_Request_LeaveRoom) {
          return mergeFrom((message.PokerProto.Poker_Request_LeaveRoom)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(message.PokerProto.Poker_Request_LeaveRoom other) {
        if (other == message.PokerProto.Poker_Request_LeaveRoom.getDefaultInstance()) return this;
        if (other.hasRoomid()) {
          setRoomid(other.getRoomid());
        }
        if (other.hasErrorCode()) {
          setErrorCode(other.getErrorCode());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        message.PokerProto.Poker_Request_LeaveRoom parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (message.PokerProto.Poker_Request_LeaveRoom) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 roomid = 1;
      private int roomid_ ;
      /**
       * <code>optional int32 roomid = 1;</code>
       */
      public boolean hasRoomid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 roomid = 1;</code>
       */
      public int getRoomid() {
        return roomid_;
      }
      /**
       * <code>optional int32 roomid = 1;</code>
       */
      public Builder setRoomid(int value) {
        bitField0_ |= 0x00000001;
        roomid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 roomid = 1;</code>
       */
      public Builder clearRoomid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        roomid_ = 0;
        onChanged();
        return this;
      }

      // optional int32 errorCode = 2;
      private int errorCode_ ;
      /**
       * <code>optional int32 errorCode = 2;</code>
       */
      public boolean hasErrorCode() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 errorCode = 2;</code>
       */
      public int getErrorCode() {
        return errorCode_;
      }
      /**
       * <code>optional int32 errorCode = 2;</code>
       */
      public Builder setErrorCode(int value) {
        bitField0_ |= 0x00000002;
        errorCode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 errorCode = 2;</code>
       */
      public Builder clearErrorCode() {
        bitField0_ = (bitField0_ & ~0x00000002);
        errorCode_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.nope.fishing.Poker_Request_LeaveRoom)
    }

    static {
      defaultInstance = new Poker_Request_LeaveRoom(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.nope.fishing.Poker_Request_LeaveRoom)
  }

  public interface Poker_Response_RoomInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 roomId = 1;
    /**
     * <code>optional int32 roomId = 1;</code>
     */
    boolean hasRoomId();
    /**
     * <code>optional int32 roomId = 1;</code>
     */
    int getRoomId();

    // optional int32 roomCurrentPhase = 8;
    /**
     * <code>optional int32 roomCurrentPhase = 8;</code>
     */
    boolean hasRoomCurrentPhase();
    /**
     * <code>optional int32 roomCurrentPhase = 8;</code>
     */
    int getRoomCurrentPhase();

    // optional int64 roomPot = 9;
    /**
     * <code>optional int64 roomPot = 9;</code>
     */
    boolean hasRoomPot();
    /**
     * <code>optional int64 roomPot = 9;</code>
     */
    long getRoomPot();

    // optional int64 roomNewMinBet = 18;
    /**
     * <code>optional int64 roomNewMinBet = 18;</code>
     */
    boolean hasRoomNewMinBet();
    /**
     * <code>optional int64 roomNewMinBet = 18;</code>
     */
    long getRoomNewMinBet();

    // optional int32 roomIDOfNextDealer = 22;
    /**
     * <code>optional int32 roomIDOfNextDealer = 22;</code>
     */
    boolean hasRoomIDOfNextDealer();
    /**
     * <code>optional int32 roomIDOfNextDealer = 22;</code>
     */
    int getRoomIDOfNextDealer();

    // repeated int32 roomLastAction = 19;
    /**
     * <code>repeated int32 roomLastAction = 19;</code>
     */
    java.util.List<java.lang.Integer> getRoomLastActionList();
    /**
     * <code>repeated int32 roomLastAction = 19;</code>
     */
    int getRoomLastActionCount();
    /**
     * <code>repeated int32 roomLastAction = 19;</code>
     */
    int getRoomLastAction(int index);

    // repeated int32 roomJoinedGameID = 10;
    /**
     * <code>repeated int32 roomJoinedGameID = 10;</code>
     */
    java.util.List<java.lang.Integer> getRoomJoinedGameIDList();
    /**
     * <code>repeated int32 roomJoinedGameID = 10;</code>
     */
    int getRoomJoinedGameIDCount();
    /**
     * <code>repeated int32 roomJoinedGameID = 10;</code>
     */
    int getRoomJoinedGameID(int index);

    // repeated bool roomTurn = 11;
    /**
     * <code>repeated bool roomTurn = 11;</code>
     */
    java.util.List<java.lang.Boolean> getRoomTurnList();
    /**
     * <code>repeated bool roomTurn = 11;</code>
     */
    int getRoomTurnCount();
    /**
     * <code>repeated bool roomTurn = 11;</code>
     */
    boolean getRoomTurn(int index);

    // repeated int32 roomDealerTurn = 12;
    /**
     * <code>repeated int32 roomDealerTurn = 12;</code>
     */
    java.util.List<java.lang.Integer> getRoomDealerTurnList();
    /**
     * <code>repeated int32 roomDealerTurn = 12;</code>
     */
    int getRoomDealerTurnCount();
    /**
     * <code>repeated int32 roomDealerTurn = 12;</code>
     */
    int getRoomDealerTurn(int index);

    // repeated int64 roomBetAmount = 17;
    /**
     * <code>repeated int64 roomBetAmount = 17;</code>
     */
    java.util.List<java.lang.Long> getRoomBetAmountList();
    /**
     * <code>repeated int64 roomBetAmount = 17;</code>
     */
    int getRoomBetAmountCount();
    /**
     * <code>repeated int64 roomBetAmount = 17;</code>
     */
    long getRoomBetAmount(int index);

    // repeated int64 roomBetAmountTotal = 23;
    /**
     * <code>repeated int64 roomBetAmountTotal = 23;</code>
     */
    java.util.List<java.lang.Long> getRoomBetAmountTotalList();
    /**
     * <code>repeated int64 roomBetAmountTotal = 23;</code>
     */
    int getRoomBetAmountTotalCount();
    /**
     * <code>repeated int64 roomBetAmountTotal = 23;</code>
     */
    long getRoomBetAmountTotal(int index);

    // repeated .com.nope.fishing.Poker_Player roomPlayerCardsHolder = 13;
    /**
     * <code>repeated .com.nope.fishing.Poker_Player roomPlayerCardsHolder = 13;</code>
     */
    java.util.List<message.PokerProto.Poker_Player> 
        getRoomPlayerCardsHolderList();
    /**
     * <code>repeated .com.nope.fishing.Poker_Player roomPlayerCardsHolder = 13;</code>
     */
    message.PokerProto.Poker_Player getRoomPlayerCardsHolder(int index);
    /**
     * <code>repeated .com.nope.fishing.Poker_Player roomPlayerCardsHolder = 13;</code>
     */
    int getRoomPlayerCardsHolderCount();
    /**
     * <code>repeated .com.nope.fishing.Poker_Player roomPlayerCardsHolder = 13;</code>
     */
    java.util.List<? extends message.PokerProto.Poker_PlayerOrBuilder> 
        getRoomPlayerCardsHolderOrBuilderList();
    /**
     * <code>repeated .com.nope.fishing.Poker_Player roomPlayerCardsHolder = 13;</code>
     */
    message.PokerProto.Poker_PlayerOrBuilder getRoomPlayerCardsHolderOrBuilder(
        int index);

    // repeated .com.nope.fishing.Poker_Player roomPlayerAvailableAction = 14;
    /**
     * <code>repeated .com.nope.fishing.Poker_Player roomPlayerAvailableAction = 14;</code>
     */
    java.util.List<message.PokerProto.Poker_Player> 
        getRoomPlayerAvailableActionList();
    /**
     * <code>repeated .com.nope.fishing.Poker_Player roomPlayerAvailableAction = 14;</code>
     */
    message.PokerProto.Poker_Player getRoomPlayerAvailableAction(int index);
    /**
     * <code>repeated .com.nope.fishing.Poker_Player roomPlayerAvailableAction = 14;</code>
     */
    int getRoomPlayerAvailableActionCount();
    /**
     * <code>repeated .com.nope.fishing.Poker_Player roomPlayerAvailableAction = 14;</code>
     */
    java.util.List<? extends message.PokerProto.Poker_PlayerOrBuilder> 
        getRoomPlayerAvailableActionOrBuilderList();
    /**
     * <code>repeated .com.nope.fishing.Poker_Player roomPlayerAvailableAction = 14;</code>
     */
    message.PokerProto.Poker_PlayerOrBuilder getRoomPlayerAvailableActionOrBuilder(
        int index);

    // repeated .com.nope.fishing.Poker_Cards roomAll52Cards = 15;
    /**
     * <code>repeated .com.nope.fishing.Poker_Cards roomAll52Cards = 15;</code>
     */
    java.util.List<message.PokerProto.Poker_Cards> 
        getRoomAll52CardsList();
    /**
     * <code>repeated .com.nope.fishing.Poker_Cards roomAll52Cards = 15;</code>
     */
    message.PokerProto.Poker_Cards getRoomAll52Cards(int index);
    /**
     * <code>repeated .com.nope.fishing.Poker_Cards roomAll52Cards = 15;</code>
     */
    int getRoomAll52CardsCount();
    /**
     * <code>repeated .com.nope.fishing.Poker_Cards roomAll52Cards = 15;</code>
     */
    java.util.List<? extends message.PokerProto.Poker_CardsOrBuilder> 
        getRoomAll52CardsOrBuilderList();
    /**
     * <code>repeated .com.nope.fishing.Poker_Cards roomAll52Cards = 15;</code>
     */
    message.PokerProto.Poker_CardsOrBuilder getRoomAll52CardsOrBuilder(
        int index);

    // repeated .com.nope.fishing.Poker_Cards roomCommunityCards = 16;
    /**
     * <code>repeated .com.nope.fishing.Poker_Cards roomCommunityCards = 16;</code>
     */
    java.util.List<message.PokerProto.Poker_Cards> 
        getRoomCommunityCardsList();
    /**
     * <code>repeated .com.nope.fishing.Poker_Cards roomCommunityCards = 16;</code>
     */
    message.PokerProto.Poker_Cards getRoomCommunityCards(int index);
    /**
     * <code>repeated .com.nope.fishing.Poker_Cards roomCommunityCards = 16;</code>
     */
    int getRoomCommunityCardsCount();
    /**
     * <code>repeated .com.nope.fishing.Poker_Cards roomCommunityCards = 16;</code>
     */
    java.util.List<? extends message.PokerProto.Poker_CardsOrBuilder> 
        getRoomCommunityCardsOrBuilderList();
    /**
     * <code>repeated .com.nope.fishing.Poker_Cards roomCommunityCards = 16;</code>
     */
    message.PokerProto.Poker_CardsOrBuilder getRoomCommunityCardsOrBuilder(
        int index);

    // repeated int64 roomCardStrenght = 20;
    /**
     * <code>repeated int64 roomCardStrenght = 20;</code>
     */
    java.util.List<java.lang.Long> getRoomCardStrenghtList();
    /**
     * <code>repeated int64 roomCardStrenght = 20;</code>
     */
    int getRoomCardStrenghtCount();
    /**
     * <code>repeated int64 roomCardStrenght = 20;</code>
     */
    long getRoomCardStrenght(int index);

    // repeated int32 roomJoinedGameIDFOLDER = 21;
    /**
     * <code>repeated int32 roomJoinedGameIDFOLDER = 21;</code>
     */
    java.util.List<java.lang.Integer> getRoomJoinedGameIDFOLDERList();
    /**
     * <code>repeated int32 roomJoinedGameIDFOLDER = 21;</code>
     */
    int getRoomJoinedGameIDFOLDERCount();
    /**
     * <code>repeated int32 roomJoinedGameIDFOLDER = 21;</code>
     */
    int getRoomJoinedGameIDFOLDER(int index);

    // repeated int32 roomJoinedGameIDOUTOFMONEY = 24;
    /**
     * <code>repeated int32 roomJoinedGameIDOUTOFMONEY = 24;</code>
     */
    java.util.List<java.lang.Integer> getRoomJoinedGameIDOUTOFMONEYList();
    /**
     * <code>repeated int32 roomJoinedGameIDOUTOFMONEY = 24;</code>
     */
    int getRoomJoinedGameIDOUTOFMONEYCount();
    /**
     * <code>repeated int32 roomJoinedGameIDOUTOFMONEY = 24;</code>
     */
    int getRoomJoinedGameIDOUTOFMONEY(int index);

    // repeated int32 userid = 3;
    /**
     * <code>repeated int32 userid = 3;</code>
     *
     * <pre>
     * list các userid trong room
     * </pre>
     */
    java.util.List<java.lang.Integer> getUseridList();
    /**
     * <code>repeated int32 userid = 3;</code>
     *
     * <pre>
     * list các userid trong room
     * </pre>
     */
    int getUseridCount();
    /**
     * <code>repeated int32 userid = 3;</code>
     *
     * <pre>
     * list các userid trong room
     * </pre>
     */
    int getUserid(int index);

    // repeated string username = 4;
    /**
     * <code>repeated string username = 4;</code>
     *
     * <pre>
     * list các username trong room
     * </pre>
     */
    java.util.List<java.lang.String>
    getUsernameList();
    /**
     * <code>repeated string username = 4;</code>
     *
     * <pre>
     * list các username trong room
     * </pre>
     */
    int getUsernameCount();
    /**
     * <code>repeated string username = 4;</code>
     *
     * <pre>
     * list các username trong room
     * </pre>
     */
    java.lang.String getUsername(int index);
    /**
     * <code>repeated string username = 4;</code>
     *
     * <pre>
     * list các username trong room
     * </pre>
     */
    com.google.protobuf.ByteString
        getUsernameBytes(int index);

    // repeated int64 usermoney = 5;
    /**
     * <code>repeated int64 usermoney = 5;</code>
     *
     * <pre>
     * list các usermoney trong room
     * </pre>
     */
    java.util.List<java.lang.Long> getUsermoneyList();
    /**
     * <code>repeated int64 usermoney = 5;</code>
     *
     * <pre>
     * list các usermoney trong room
     * </pre>
     */
    int getUsermoneyCount();
    /**
     * <code>repeated int64 usermoney = 5;</code>
     *
     * <pre>
     * list các usermoney trong room
     * </pre>
     */
    long getUsermoney(int index);

    // repeated bool userBeginTurn = 6;
    /**
     * <code>repeated bool userBeginTurn = 6;</code>
     */
    java.util.List<java.lang.Boolean> getUserBeginTurnList();
    /**
     * <code>repeated bool userBeginTurn = 6;</code>
     */
    int getUserBeginTurnCount();
    /**
     * <code>repeated bool userBeginTurn = 6;</code>
     */
    boolean getUserBeginTurn(int index);

    // repeated int32 userAction = 7;
    /**
     * <code>repeated int32 userAction = 7;</code>
     */
    java.util.List<java.lang.Integer> getUserActionList();
    /**
     * <code>repeated int32 userAction = 7;</code>
     */
    int getUserActionCount();
    /**
     * <code>repeated int32 userAction = 7;</code>
     */
    int getUserAction(int index);
  }
  /**
   * Protobuf type {@code com.nope.fishing.Poker_Response_RoomInfo}
   *
   * <pre>
   * Trả thông tin về cho User khi join room - chỉ 1 room
   * </pre>
   */
  public static final class Poker_Response_RoomInfo extends
      com.google.protobuf.GeneratedMessage
      implements Poker_Response_RoomInfoOrBuilder {
    // Use Poker_Response_RoomInfo.newBuilder() to construct.
    private Poker_Response_RoomInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Poker_Response_RoomInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Poker_Response_RoomInfo defaultInstance;
    public static Poker_Response_RoomInfo getDefaultInstance() {
      return defaultInstance;
    }

    public Poker_Response_RoomInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Poker_Response_RoomInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              roomId_ = input.readInt32();
              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00040000) == 0x00040000)) {
                userid_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00040000;
              }
              userid_.add(input.readInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00040000) == 0x00040000) && input.getBytesUntilLimit() > 0) {
                userid_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00040000;
              }
              while (input.getBytesUntilLimit() > 0) {
                userid_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00080000) == 0x00080000)) {
                username_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00080000;
              }
              username_.add(input.readBytes());
              break;
            }
            case 40: {
              if (!((mutable_bitField0_ & 0x00100000) == 0x00100000)) {
                usermoney_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00100000;
              }
              usermoney_.add(input.readInt64());
              break;
            }
            case 42: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00100000) == 0x00100000) && input.getBytesUntilLimit() > 0) {
                usermoney_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00100000;
              }
              while (input.getBytesUntilLimit() > 0) {
                usermoney_.add(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 48: {
              if (!((mutable_bitField0_ & 0x00200000) == 0x00200000)) {
                userBeginTurn_ = new java.util.ArrayList<java.lang.Boolean>();
                mutable_bitField0_ |= 0x00200000;
              }
              userBeginTurn_.add(input.readBool());
              break;
            }
            case 50: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00200000) == 0x00200000) && input.getBytesUntilLimit() > 0) {
                userBeginTurn_ = new java.util.ArrayList<java.lang.Boolean>();
                mutable_bitField0_ |= 0x00200000;
              }
              while (input.getBytesUntilLimit() > 0) {
                userBeginTurn_.add(input.readBool());
              }
              input.popLimit(limit);
              break;
            }
            case 56: {
              if (!((mutable_bitField0_ & 0x00400000) == 0x00400000)) {
                userAction_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00400000;
              }
              userAction_.add(input.readInt32());
              break;
            }
            case 58: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00400000) == 0x00400000) && input.getBytesUntilLimit() > 0) {
                userAction_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00400000;
              }
              while (input.getBytesUntilLimit() > 0) {
                userAction_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 64: {
              bitField0_ |= 0x00000002;
              roomCurrentPhase_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000004;
              roomPot_ = input.readInt64();
              break;
            }
            case 80: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                roomJoinedGameID_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000040;
              }
              roomJoinedGameID_.add(input.readInt32());
              break;
            }
            case 82: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040) && input.getBytesUntilLimit() > 0) {
                roomJoinedGameID_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000040;
              }
              while (input.getBytesUntilLimit() > 0) {
                roomJoinedGameID_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 88: {
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                roomTurn_ = new java.util.ArrayList<java.lang.Boolean>();
                mutable_bitField0_ |= 0x00000080;
              }
              roomTurn_.add(input.readBool());
              break;
            }
            case 90: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080) && input.getBytesUntilLimit() > 0) {
                roomTurn_ = new java.util.ArrayList<java.lang.Boolean>();
                mutable_bitField0_ |= 0x00000080;
              }
              while (input.getBytesUntilLimit() > 0) {
                roomTurn_.add(input.readBool());
              }
              input.popLimit(limit);
              break;
            }
            case 96: {
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
                roomDealerTurn_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000100;
              }
              roomDealerTurn_.add(input.readInt32());
              break;
            }
            case 98: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100) && input.getBytesUntilLimit() > 0) {
                roomDealerTurn_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000100;
              }
              while (input.getBytesUntilLimit() > 0) {
                roomDealerTurn_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 106: {
              if (!((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
                roomPlayerCardsHolder_ = new java.util.ArrayList<message.PokerProto.Poker_Player>();
                mutable_bitField0_ |= 0x00000800;
              }
              roomPlayerCardsHolder_.add(input.readMessage(message.PokerProto.Poker_Player.PARSER, extensionRegistry));
              break;
            }
            case 114: {
              if (!((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
                roomPlayerAvailableAction_ = new java.util.ArrayList<message.PokerProto.Poker_Player>();
                mutable_bitField0_ |= 0x00001000;
              }
              roomPlayerAvailableAction_.add(input.readMessage(message.PokerProto.Poker_Player.PARSER, extensionRegistry));
              break;
            }
            case 122: {
              if (!((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
                roomAll52Cards_ = new java.util.ArrayList<message.PokerProto.Poker_Cards>();
                mutable_bitField0_ |= 0x00002000;
              }
              roomAll52Cards_.add(input.readMessage(message.PokerProto.Poker_Cards.PARSER, extensionRegistry));
              break;
            }
            case 130: {
              if (!((mutable_bitField0_ & 0x00004000) == 0x00004000)) {
                roomCommunityCards_ = new java.util.ArrayList<message.PokerProto.Poker_Cards>();
                mutable_bitField0_ |= 0x00004000;
              }
              roomCommunityCards_.add(input.readMessage(message.PokerProto.Poker_Cards.PARSER, extensionRegistry));
              break;
            }
            case 136: {
              if (!((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
                roomBetAmount_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000200;
              }
              roomBetAmount_.add(input.readInt64());
              break;
            }
            case 138: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000200) == 0x00000200) && input.getBytesUntilLimit() > 0) {
                roomBetAmount_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000200;
              }
              while (input.getBytesUntilLimit() > 0) {
                roomBetAmount_.add(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 144: {
              bitField0_ |= 0x00000008;
              roomNewMinBet_ = input.readInt64();
              break;
            }
            case 152: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                roomLastAction_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              roomLastAction_.add(input.readInt32());
              break;
            }
            case 154: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020) && input.getBytesUntilLimit() > 0) {
                roomLastAction_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              while (input.getBytesUntilLimit() > 0) {
                roomLastAction_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 160: {
              if (!((mutable_bitField0_ & 0x00008000) == 0x00008000)) {
                roomCardStrenght_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00008000;
              }
              roomCardStrenght_.add(input.readInt64());
              break;
            }
            case 162: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00008000) == 0x00008000) && input.getBytesUntilLimit() > 0) {
                roomCardStrenght_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00008000;
              }
              while (input.getBytesUntilLimit() > 0) {
                roomCardStrenght_.add(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 168: {
              if (!((mutable_bitField0_ & 0x00010000) == 0x00010000)) {
                roomJoinedGameIDFOLDER_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00010000;
              }
              roomJoinedGameIDFOLDER_.add(input.readInt32());
              break;
            }
            case 170: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00010000) == 0x00010000) && input.getBytesUntilLimit() > 0) {
                roomJoinedGameIDFOLDER_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00010000;
              }
              while (input.getBytesUntilLimit() > 0) {
                roomJoinedGameIDFOLDER_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 176: {
              bitField0_ |= 0x00000010;
              roomIDOfNextDealer_ = input.readInt32();
              break;
            }
            case 184: {
              if (!((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
                roomBetAmountTotal_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000400;
              }
              roomBetAmountTotal_.add(input.readInt64());
              break;
            }
            case 186: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000400) == 0x00000400) && input.getBytesUntilLimit() > 0) {
                roomBetAmountTotal_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000400;
              }
              while (input.getBytesUntilLimit() > 0) {
                roomBetAmountTotal_.add(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 192: {
              if (!((mutable_bitField0_ & 0x00020000) == 0x00020000)) {
                roomJoinedGameIDOUTOFMONEY_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00020000;
              }
              roomJoinedGameIDOUTOFMONEY_.add(input.readInt32());
              break;
            }
            case 194: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00020000) == 0x00020000) && input.getBytesUntilLimit() > 0) {
                roomJoinedGameIDOUTOFMONEY_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00020000;
              }
              while (input.getBytesUntilLimit() > 0) {
                roomJoinedGameIDOUTOFMONEY_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00040000) == 0x00040000)) {
          userid_ = java.util.Collections.unmodifiableList(userid_);
        }
        if (((mutable_bitField0_ & 0x00080000) == 0x00080000)) {
          username_ = new com.google.protobuf.UnmodifiableLazyStringList(username_);
        }
        if (((mutable_bitField0_ & 0x00100000) == 0x00100000)) {
          usermoney_ = java.util.Collections.unmodifiableList(usermoney_);
        }
        if (((mutable_bitField0_ & 0x00200000) == 0x00200000)) {
          userBeginTurn_ = java.util.Collections.unmodifiableList(userBeginTurn_);
        }
        if (((mutable_bitField0_ & 0x00400000) == 0x00400000)) {
          userAction_ = java.util.Collections.unmodifiableList(userAction_);
        }
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          roomJoinedGameID_ = java.util.Collections.unmodifiableList(roomJoinedGameID_);
        }
        if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
          roomTurn_ = java.util.Collections.unmodifiableList(roomTurn_);
        }
        if (((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
          roomDealerTurn_ = java.util.Collections.unmodifiableList(roomDealerTurn_);
        }
        if (((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
          roomPlayerCardsHolder_ = java.util.Collections.unmodifiableList(roomPlayerCardsHolder_);
        }
        if (((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
          roomPlayerAvailableAction_ = java.util.Collections.unmodifiableList(roomPlayerAvailableAction_);
        }
        if (((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
          roomAll52Cards_ = java.util.Collections.unmodifiableList(roomAll52Cards_);
        }
        if (((mutable_bitField0_ & 0x00004000) == 0x00004000)) {
          roomCommunityCards_ = java.util.Collections.unmodifiableList(roomCommunityCards_);
        }
        if (((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
          roomBetAmount_ = java.util.Collections.unmodifiableList(roomBetAmount_);
        }
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          roomLastAction_ = java.util.Collections.unmodifiableList(roomLastAction_);
        }
        if (((mutable_bitField0_ & 0x00008000) == 0x00008000)) {
          roomCardStrenght_ = java.util.Collections.unmodifiableList(roomCardStrenght_);
        }
        if (((mutable_bitField0_ & 0x00010000) == 0x00010000)) {
          roomJoinedGameIDFOLDER_ = java.util.Collections.unmodifiableList(roomJoinedGameIDFOLDER_);
        }
        if (((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
          roomBetAmountTotal_ = java.util.Collections.unmodifiableList(roomBetAmountTotal_);
        }
        if (((mutable_bitField0_ & 0x00020000) == 0x00020000)) {
          roomJoinedGameIDOUTOFMONEY_ = java.util.Collections.unmodifiableList(roomJoinedGameIDOUTOFMONEY_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return message.PokerProto.internal_static_com_nope_fishing_Poker_Response_RoomInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return message.PokerProto.internal_static_com_nope_fishing_Poker_Response_RoomInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              message.PokerProto.Poker_Response_RoomInfo.class, message.PokerProto.Poker_Response_RoomInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<Poker_Response_RoomInfo> PARSER =
        new com.google.protobuf.AbstractParser<Poker_Response_RoomInfo>() {
      public Poker_Response_RoomInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Poker_Response_RoomInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Poker_Response_RoomInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 roomId = 1;
    public static final int ROOMID_FIELD_NUMBER = 1;
    private int roomId_;
    /**
     * <code>optional int32 roomId = 1;</code>
     */
    public boolean hasRoomId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 roomId = 1;</code>
     */
    public int getRoomId() {
      return roomId_;
    }

    // optional int32 roomCurrentPhase = 8;
    public static final int ROOMCURRENTPHASE_FIELD_NUMBER = 8;
    private int roomCurrentPhase_;
    /**
     * <code>optional int32 roomCurrentPhase = 8;</code>
     */
    public boolean hasRoomCurrentPhase() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 roomCurrentPhase = 8;</code>
     */
    public int getRoomCurrentPhase() {
      return roomCurrentPhase_;
    }

    // optional int64 roomPot = 9;
    public static final int ROOMPOT_FIELD_NUMBER = 9;
    private long roomPot_;
    /**
     * <code>optional int64 roomPot = 9;</code>
     */
    public boolean hasRoomPot() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int64 roomPot = 9;</code>
     */
    public long getRoomPot() {
      return roomPot_;
    }

    // optional int64 roomNewMinBet = 18;
    public static final int ROOMNEWMINBET_FIELD_NUMBER = 18;
    private long roomNewMinBet_;
    /**
     * <code>optional int64 roomNewMinBet = 18;</code>
     */
    public boolean hasRoomNewMinBet() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int64 roomNewMinBet = 18;</code>
     */
    public long getRoomNewMinBet() {
      return roomNewMinBet_;
    }

    // optional int32 roomIDOfNextDealer = 22;
    public static final int ROOMIDOFNEXTDEALER_FIELD_NUMBER = 22;
    private int roomIDOfNextDealer_;
    /**
     * <code>optional int32 roomIDOfNextDealer = 22;</code>
     */
    public boolean hasRoomIDOfNextDealer() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 roomIDOfNextDealer = 22;</code>
     */
    public int getRoomIDOfNextDealer() {
      return roomIDOfNextDealer_;
    }

    // repeated int32 roomLastAction = 19;
    public static final int ROOMLASTACTION_FIELD_NUMBER = 19;
    private java.util.List<java.lang.Integer> roomLastAction_;
    /**
     * <code>repeated int32 roomLastAction = 19;</code>
     */
    public java.util.List<java.lang.Integer>
        getRoomLastActionList() {
      return roomLastAction_;
    }
    /**
     * <code>repeated int32 roomLastAction = 19;</code>
     */
    public int getRoomLastActionCount() {
      return roomLastAction_.size();
    }
    /**
     * <code>repeated int32 roomLastAction = 19;</code>
     */
    public int getRoomLastAction(int index) {
      return roomLastAction_.get(index);
    }

    // repeated int32 roomJoinedGameID = 10;
    public static final int ROOMJOINEDGAMEID_FIELD_NUMBER = 10;
    private java.util.List<java.lang.Integer> roomJoinedGameID_;
    /**
     * <code>repeated int32 roomJoinedGameID = 10;</code>
     */
    public java.util.List<java.lang.Integer>
        getRoomJoinedGameIDList() {
      return roomJoinedGameID_;
    }
    /**
     * <code>repeated int32 roomJoinedGameID = 10;</code>
     */
    public int getRoomJoinedGameIDCount() {
      return roomJoinedGameID_.size();
    }
    /**
     * <code>repeated int32 roomJoinedGameID = 10;</code>
     */
    public int getRoomJoinedGameID(int index) {
      return roomJoinedGameID_.get(index);
    }

    // repeated bool roomTurn = 11;
    public static final int ROOMTURN_FIELD_NUMBER = 11;
    private java.util.List<java.lang.Boolean> roomTurn_;
    /**
     * <code>repeated bool roomTurn = 11;</code>
     */
    public java.util.List<java.lang.Boolean>
        getRoomTurnList() {
      return roomTurn_;
    }
    /**
     * <code>repeated bool roomTurn = 11;</code>
     */
    public int getRoomTurnCount() {
      return roomTurn_.size();
    }
    /**
     * <code>repeated bool roomTurn = 11;</code>
     */
    public boolean getRoomTurn(int index) {
      return roomTurn_.get(index);
    }

    // repeated int32 roomDealerTurn = 12;
    public static final int ROOMDEALERTURN_FIELD_NUMBER = 12;
    private java.util.List<java.lang.Integer> roomDealerTurn_;
    /**
     * <code>repeated int32 roomDealerTurn = 12;</code>
     */
    public java.util.List<java.lang.Integer>
        getRoomDealerTurnList() {
      return roomDealerTurn_;
    }
    /**
     * <code>repeated int32 roomDealerTurn = 12;</code>
     */
    public int getRoomDealerTurnCount() {
      return roomDealerTurn_.size();
    }
    /**
     * <code>repeated int32 roomDealerTurn = 12;</code>
     */
    public int getRoomDealerTurn(int index) {
      return roomDealerTurn_.get(index);
    }

    // repeated int64 roomBetAmount = 17;
    public static final int ROOMBETAMOUNT_FIELD_NUMBER = 17;
    private java.util.List<java.lang.Long> roomBetAmount_;
    /**
     * <code>repeated int64 roomBetAmount = 17;</code>
     */
    public java.util.List<java.lang.Long>
        getRoomBetAmountList() {
      return roomBetAmount_;
    }
    /**
     * <code>repeated int64 roomBetAmount = 17;</code>
     */
    public int getRoomBetAmountCount() {
      return roomBetAmount_.size();
    }
    /**
     * <code>repeated int64 roomBetAmount = 17;</code>
     */
    public long getRoomBetAmount(int index) {
      return roomBetAmount_.get(index);
    }

    // repeated int64 roomBetAmountTotal = 23;
    public static final int ROOMBETAMOUNTTOTAL_FIELD_NUMBER = 23;
    private java.util.List<java.lang.Long> roomBetAmountTotal_;
    /**
     * <code>repeated int64 roomBetAmountTotal = 23;</code>
     */
    public java.util.List<java.lang.Long>
        getRoomBetAmountTotalList() {
      return roomBetAmountTotal_;
    }
    /**
     * <code>repeated int64 roomBetAmountTotal = 23;</code>
     */
    public int getRoomBetAmountTotalCount() {
      return roomBetAmountTotal_.size();
    }
    /**
     * <code>repeated int64 roomBetAmountTotal = 23;</code>
     */
    public long getRoomBetAmountTotal(int index) {
      return roomBetAmountTotal_.get(index);
    }

    // repeated .com.nope.fishing.Poker_Player roomPlayerCardsHolder = 13;
    public static final int ROOMPLAYERCARDSHOLDER_FIELD_NUMBER = 13;
    private java.util.List<message.PokerProto.Poker_Player> roomPlayerCardsHolder_;
    /**
     * <code>repeated .com.nope.fishing.Poker_Player roomPlayerCardsHolder = 13;</code>
     */
    public java.util.List<message.PokerProto.Poker_Player> getRoomPlayerCardsHolderList() {
      return roomPlayerCardsHolder_;
    }
    /**
     * <code>repeated .com.nope.fishing.Poker_Player roomPlayerCardsHolder = 13;</code>
     */
    public java.util.List<? extends message.PokerProto.Poker_PlayerOrBuilder> 
        getRoomPlayerCardsHolderOrBuilderList() {
      return roomPlayerCardsHolder_;
    }
    /**
     * <code>repeated .com.nope.fishing.Poker_Player roomPlayerCardsHolder = 13;</code>
     */
    public int getRoomPlayerCardsHolderCount() {
      return roomPlayerCardsHolder_.size();
    }
    /**
     * <code>repeated .com.nope.fishing.Poker_Player roomPlayerCardsHolder = 13;</code>
     */
    public message.PokerProto.Poker_Player getRoomPlayerCardsHolder(int index) {
      return roomPlayerCardsHolder_.get(index);
    }
    /**
     * <code>repeated .com.nope.fishing.Poker_Player roomPlayerCardsHolder = 13;</code>
     */
    public message.PokerProto.Poker_PlayerOrBuilder getRoomPlayerCardsHolderOrBuilder(
        int index) {
      return roomPlayerCardsHolder_.get(index);
    }

    // repeated .com.nope.fishing.Poker_Player roomPlayerAvailableAction = 14;
    public static final int ROOMPLAYERAVAILABLEACTION_FIELD_NUMBER = 14;
    private java.util.List<message.PokerProto.Poker_Player> roomPlayerAvailableAction_;
    /**
     * <code>repeated .com.nope.fishing.Poker_Player roomPlayerAvailableAction = 14;</code>
     */
    public java.util.List<message.PokerProto.Poker_Player> getRoomPlayerAvailableActionList() {
      return roomPlayerAvailableAction_;
    }
    /**
     * <code>repeated .com.nope.fishing.Poker_Player roomPlayerAvailableAction = 14;</code>
     */
    public java.util.List<? extends message.PokerProto.Poker_PlayerOrBuilder> 
        getRoomPlayerAvailableActionOrBuilderList() {
      return roomPlayerAvailableAction_;
    }
    /**
     * <code>repeated .com.nope.fishing.Poker_Player roomPlayerAvailableAction = 14;</code>
     */
    public int getRoomPlayerAvailableActionCount() {
      return roomPlayerAvailableAction_.size();
    }
    /**
     * <code>repeated .com.nope.fishing.Poker_Player roomPlayerAvailableAction = 14;</code>
     */
    public message.PokerProto.Poker_Player getRoomPlayerAvailableAction(int index) {
      return roomPlayerAvailableAction_.get(index);
    }
    /**
     * <code>repeated .com.nope.fishing.Poker_Player roomPlayerAvailableAction = 14;</code>
     */
    public message.PokerProto.Poker_PlayerOrBuilder getRoomPlayerAvailableActionOrBuilder(
        int index) {
      return roomPlayerAvailableAction_.get(index);
    }

    // repeated .com.nope.fishing.Poker_Cards roomAll52Cards = 15;
    public static final int ROOMALL52CARDS_FIELD_NUMBER = 15;
    private java.util.List<message.PokerProto.Poker_Cards> roomAll52Cards_;
    /**
     * <code>repeated .com.nope.fishing.Poker_Cards roomAll52Cards = 15;</code>
     */
    public java.util.List<message.PokerProto.Poker_Cards> getRoomAll52CardsList() {
      return roomAll52Cards_;
    }
    /**
     * <code>repeated .com.nope.fishing.Poker_Cards roomAll52Cards = 15;</code>
     */
    public java.util.List<? extends message.PokerProto.Poker_CardsOrBuilder> 
        getRoomAll52CardsOrBuilderList() {
      return roomAll52Cards_;
    }
    /**
     * <code>repeated .com.nope.fishing.Poker_Cards roomAll52Cards = 15;</code>
     */
    public int getRoomAll52CardsCount() {
      return roomAll52Cards_.size();
    }
    /**
     * <code>repeated .com.nope.fishing.Poker_Cards roomAll52Cards = 15;</code>
     */
    public message.PokerProto.Poker_Cards getRoomAll52Cards(int index) {
      return roomAll52Cards_.get(index);
    }
    /**
     * <code>repeated .com.nope.fishing.Poker_Cards roomAll52Cards = 15;</code>
     */
    public message.PokerProto.Poker_CardsOrBuilder getRoomAll52CardsOrBuilder(
        int index) {
      return roomAll52Cards_.get(index);
    }

    // repeated .com.nope.fishing.Poker_Cards roomCommunityCards = 16;
    public static final int ROOMCOMMUNITYCARDS_FIELD_NUMBER = 16;
    private java.util.List<message.PokerProto.Poker_Cards> roomCommunityCards_;
    /**
     * <code>repeated .com.nope.fishing.Poker_Cards roomCommunityCards = 16;</code>
     */
    public java.util.List<message.PokerProto.Poker_Cards> getRoomCommunityCardsList() {
      return roomCommunityCards_;
    }
    /**
     * <code>repeated .com.nope.fishing.Poker_Cards roomCommunityCards = 16;</code>
     */
    public java.util.List<? extends message.PokerProto.Poker_CardsOrBuilder> 
        getRoomCommunityCardsOrBuilderList() {
      return roomCommunityCards_;
    }
    /**
     * <code>repeated .com.nope.fishing.Poker_Cards roomCommunityCards = 16;</code>
     */
    public int getRoomCommunityCardsCount() {
      return roomCommunityCards_.size();
    }
    /**
     * <code>repeated .com.nope.fishing.Poker_Cards roomCommunityCards = 16;</code>
     */
    public message.PokerProto.Poker_Cards getRoomCommunityCards(int index) {
      return roomCommunityCards_.get(index);
    }
    /**
     * <code>repeated .com.nope.fishing.Poker_Cards roomCommunityCards = 16;</code>
     */
    public message.PokerProto.Poker_CardsOrBuilder getRoomCommunityCardsOrBuilder(
        int index) {
      return roomCommunityCards_.get(index);
    }

    // repeated int64 roomCardStrenght = 20;
    public static final int ROOMCARDSTRENGHT_FIELD_NUMBER = 20;
    private java.util.List<java.lang.Long> roomCardStrenght_;
    /**
     * <code>repeated int64 roomCardStrenght = 20;</code>
     */
    public java.util.List<java.lang.Long>
        getRoomCardStrenghtList() {
      return roomCardStrenght_;
    }
    /**
     * <code>repeated int64 roomCardStrenght = 20;</code>
     */
    public int getRoomCardStrenghtCount() {
      return roomCardStrenght_.size();
    }
    /**
     * <code>repeated int64 roomCardStrenght = 20;</code>
     */
    public long getRoomCardStrenght(int index) {
      return roomCardStrenght_.get(index);
    }

    // repeated int32 roomJoinedGameIDFOLDER = 21;
    public static final int ROOMJOINEDGAMEIDFOLDER_FIELD_NUMBER = 21;
    private java.util.List<java.lang.Integer> roomJoinedGameIDFOLDER_;
    /**
     * <code>repeated int32 roomJoinedGameIDFOLDER = 21;</code>
     */
    public java.util.List<java.lang.Integer>
        getRoomJoinedGameIDFOLDERList() {
      return roomJoinedGameIDFOLDER_;
    }
    /**
     * <code>repeated int32 roomJoinedGameIDFOLDER = 21;</code>
     */
    public int getRoomJoinedGameIDFOLDERCount() {
      return roomJoinedGameIDFOLDER_.size();
    }
    /**
     * <code>repeated int32 roomJoinedGameIDFOLDER = 21;</code>
     */
    public int getRoomJoinedGameIDFOLDER(int index) {
      return roomJoinedGameIDFOLDER_.get(index);
    }

    // repeated int32 roomJoinedGameIDOUTOFMONEY = 24;
    public static final int ROOMJOINEDGAMEIDOUTOFMONEY_FIELD_NUMBER = 24;
    private java.util.List<java.lang.Integer> roomJoinedGameIDOUTOFMONEY_;
    /**
     * <code>repeated int32 roomJoinedGameIDOUTOFMONEY = 24;</code>
     */
    public java.util.List<java.lang.Integer>
        getRoomJoinedGameIDOUTOFMONEYList() {
      return roomJoinedGameIDOUTOFMONEY_;
    }
    /**
     * <code>repeated int32 roomJoinedGameIDOUTOFMONEY = 24;</code>
     */
    public int getRoomJoinedGameIDOUTOFMONEYCount() {
      return roomJoinedGameIDOUTOFMONEY_.size();
    }
    /**
     * <code>repeated int32 roomJoinedGameIDOUTOFMONEY = 24;</code>
     */
    public int getRoomJoinedGameIDOUTOFMONEY(int index) {
      return roomJoinedGameIDOUTOFMONEY_.get(index);
    }

    // repeated int32 userid = 3;
    public static final int USERID_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Integer> userid_;
    /**
     * <code>repeated int32 userid = 3;</code>
     *
     * <pre>
     * list các userid trong room
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getUseridList() {
      return userid_;
    }
    /**
     * <code>repeated int32 userid = 3;</code>
     *
     * <pre>
     * list các userid trong room
     * </pre>
     */
    public int getUseridCount() {
      return userid_.size();
    }
    /**
     * <code>repeated int32 userid = 3;</code>
     *
     * <pre>
     * list các userid trong room
     * </pre>
     */
    public int getUserid(int index) {
      return userid_.get(index);
    }

    // repeated string username = 4;
    public static final int USERNAME_FIELD_NUMBER = 4;
    private com.google.protobuf.LazyStringList username_;
    /**
     * <code>repeated string username = 4;</code>
     *
     * <pre>
     * list các username trong room
     * </pre>
     */
    public java.util.List<java.lang.String>
        getUsernameList() {
      return username_;
    }
    /**
     * <code>repeated string username = 4;</code>
     *
     * <pre>
     * list các username trong room
     * </pre>
     */
    public int getUsernameCount() {
      return username_.size();
    }
    /**
     * <code>repeated string username = 4;</code>
     *
     * <pre>
     * list các username trong room
     * </pre>
     */
    public java.lang.String getUsername(int index) {
      return username_.get(index);
    }
    /**
     * <code>repeated string username = 4;</code>
     *
     * <pre>
     * list các username trong room
     * </pre>
     */
    public com.google.protobuf.ByteString
        getUsernameBytes(int index) {
      return username_.getByteString(index);
    }

    // repeated int64 usermoney = 5;
    public static final int USERMONEY_FIELD_NUMBER = 5;
    private java.util.List<java.lang.Long> usermoney_;
    /**
     * <code>repeated int64 usermoney = 5;</code>
     *
     * <pre>
     * list các usermoney trong room
     * </pre>
     */
    public java.util.List<java.lang.Long>
        getUsermoneyList() {
      return usermoney_;
    }
    /**
     * <code>repeated int64 usermoney = 5;</code>
     *
     * <pre>
     * list các usermoney trong room
     * </pre>
     */
    public int getUsermoneyCount() {
      return usermoney_.size();
    }
    /**
     * <code>repeated int64 usermoney = 5;</code>
     *
     * <pre>
     * list các usermoney trong room
     * </pre>
     */
    public long getUsermoney(int index) {
      return usermoney_.get(index);
    }

    // repeated bool userBeginTurn = 6;
    public static final int USERBEGINTURN_FIELD_NUMBER = 6;
    private java.util.List<java.lang.Boolean> userBeginTurn_;
    /**
     * <code>repeated bool userBeginTurn = 6;</code>
     */
    public java.util.List<java.lang.Boolean>
        getUserBeginTurnList() {
      return userBeginTurn_;
    }
    /**
     * <code>repeated bool userBeginTurn = 6;</code>
     */
    public int getUserBeginTurnCount() {
      return userBeginTurn_.size();
    }
    /**
     * <code>repeated bool userBeginTurn = 6;</code>
     */
    public boolean getUserBeginTurn(int index) {
      return userBeginTurn_.get(index);
    }

    // repeated int32 userAction = 7;
    public static final int USERACTION_FIELD_NUMBER = 7;
    private java.util.List<java.lang.Integer> userAction_;
    /**
     * <code>repeated int32 userAction = 7;</code>
     */
    public java.util.List<java.lang.Integer>
        getUserActionList() {
      return userAction_;
    }
    /**
     * <code>repeated int32 userAction = 7;</code>
     */
    public int getUserActionCount() {
      return userAction_.size();
    }
    /**
     * <code>repeated int32 userAction = 7;</code>
     */
    public int getUserAction(int index) {
      return userAction_.get(index);
    }

    private void initFields() {
      roomId_ = 0;
      roomCurrentPhase_ = 0;
      roomPot_ = 0L;
      roomNewMinBet_ = 0L;
      roomIDOfNextDealer_ = 0;
      roomLastAction_ = java.util.Collections.emptyList();
      roomJoinedGameID_ = java.util.Collections.emptyList();
      roomTurn_ = java.util.Collections.emptyList();
      roomDealerTurn_ = java.util.Collections.emptyList();
      roomBetAmount_ = java.util.Collections.emptyList();
      roomBetAmountTotal_ = java.util.Collections.emptyList();
      roomPlayerCardsHolder_ = java.util.Collections.emptyList();
      roomPlayerAvailableAction_ = java.util.Collections.emptyList();
      roomAll52Cards_ = java.util.Collections.emptyList();
      roomCommunityCards_ = java.util.Collections.emptyList();
      roomCardStrenght_ = java.util.Collections.emptyList();
      roomJoinedGameIDFOLDER_ = java.util.Collections.emptyList();
      roomJoinedGameIDOUTOFMONEY_ = java.util.Collections.emptyList();
      userid_ = java.util.Collections.emptyList();
      username_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      usermoney_ = java.util.Collections.emptyList();
      userBeginTurn_ = java.util.Collections.emptyList();
      userAction_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, roomId_);
      }
      for (int i = 0; i < userid_.size(); i++) {
        output.writeInt32(3, userid_.get(i));
      }
      for (int i = 0; i < username_.size(); i++) {
        output.writeBytes(4, username_.getByteString(i));
      }
      for (int i = 0; i < usermoney_.size(); i++) {
        output.writeInt64(5, usermoney_.get(i));
      }
      for (int i = 0; i < userBeginTurn_.size(); i++) {
        output.writeBool(6, userBeginTurn_.get(i));
      }
      for (int i = 0; i < userAction_.size(); i++) {
        output.writeInt32(7, userAction_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(8, roomCurrentPhase_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(9, roomPot_);
      }
      for (int i = 0; i < roomJoinedGameID_.size(); i++) {
        output.writeInt32(10, roomJoinedGameID_.get(i));
      }
      for (int i = 0; i < roomTurn_.size(); i++) {
        output.writeBool(11, roomTurn_.get(i));
      }
      for (int i = 0; i < roomDealerTurn_.size(); i++) {
        output.writeInt32(12, roomDealerTurn_.get(i));
      }
      for (int i = 0; i < roomPlayerCardsHolder_.size(); i++) {
        output.writeMessage(13, roomPlayerCardsHolder_.get(i));
      }
      for (int i = 0; i < roomPlayerAvailableAction_.size(); i++) {
        output.writeMessage(14, roomPlayerAvailableAction_.get(i));
      }
      for (int i = 0; i < roomAll52Cards_.size(); i++) {
        output.writeMessage(15, roomAll52Cards_.get(i));
      }
      for (int i = 0; i < roomCommunityCards_.size(); i++) {
        output.writeMessage(16, roomCommunityCards_.get(i));
      }
      for (int i = 0; i < roomBetAmount_.size(); i++) {
        output.writeInt64(17, roomBetAmount_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt64(18, roomNewMinBet_);
      }
      for (int i = 0; i < roomLastAction_.size(); i++) {
        output.writeInt32(19, roomLastAction_.get(i));
      }
      for (int i = 0; i < roomCardStrenght_.size(); i++) {
        output.writeInt64(20, roomCardStrenght_.get(i));
      }
      for (int i = 0; i < roomJoinedGameIDFOLDER_.size(); i++) {
        output.writeInt32(21, roomJoinedGameIDFOLDER_.get(i));
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(22, roomIDOfNextDealer_);
      }
      for (int i = 0; i < roomBetAmountTotal_.size(); i++) {
        output.writeInt64(23, roomBetAmountTotal_.get(i));
      }
      for (int i = 0; i < roomJoinedGameIDOUTOFMONEY_.size(); i++) {
        output.writeInt32(24, roomJoinedGameIDOUTOFMONEY_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, roomId_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < userid_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(userid_.get(i));
        }
        size += dataSize;
        size += 1 * getUseridList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < username_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(username_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getUsernameList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < usermoney_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(usermoney_.get(i));
        }
        size += dataSize;
        size += 1 * getUsermoneyList().size();
      }
      {
        int dataSize = 0;
        dataSize = 1 * getUserBeginTurnList().size();
        size += dataSize;
        size += 1 * getUserBeginTurnList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < userAction_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(userAction_.get(i));
        }
        size += dataSize;
        size += 1 * getUserActionList().size();
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, roomCurrentPhase_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(9, roomPot_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < roomJoinedGameID_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(roomJoinedGameID_.get(i));
        }
        size += dataSize;
        size += 1 * getRoomJoinedGameIDList().size();
      }
      {
        int dataSize = 0;
        dataSize = 1 * getRoomTurnList().size();
        size += dataSize;
        size += 1 * getRoomTurnList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < roomDealerTurn_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(roomDealerTurn_.get(i));
        }
        size += dataSize;
        size += 1 * getRoomDealerTurnList().size();
      }
      for (int i = 0; i < roomPlayerCardsHolder_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(13, roomPlayerCardsHolder_.get(i));
      }
      for (int i = 0; i < roomPlayerAvailableAction_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(14, roomPlayerAvailableAction_.get(i));
      }
      for (int i = 0; i < roomAll52Cards_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(15, roomAll52Cards_.get(i));
      }
      for (int i = 0; i < roomCommunityCards_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(16, roomCommunityCards_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < roomBetAmount_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(roomBetAmount_.get(i));
        }
        size += dataSize;
        size += 2 * getRoomBetAmountList().size();
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(18, roomNewMinBet_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < roomLastAction_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(roomLastAction_.get(i));
        }
        size += dataSize;
        size += 2 * getRoomLastActionList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < roomCardStrenght_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(roomCardStrenght_.get(i));
        }
        size += dataSize;
        size += 2 * getRoomCardStrenghtList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < roomJoinedGameIDFOLDER_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(roomJoinedGameIDFOLDER_.get(i));
        }
        size += dataSize;
        size += 2 * getRoomJoinedGameIDFOLDERList().size();
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(22, roomIDOfNextDealer_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < roomBetAmountTotal_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(roomBetAmountTotal_.get(i));
        }
        size += dataSize;
        size += 2 * getRoomBetAmountTotalList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < roomJoinedGameIDOUTOFMONEY_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(roomJoinedGameIDOUTOFMONEY_.get(i));
        }
        size += dataSize;
        size += 2 * getRoomJoinedGameIDOUTOFMONEYList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static message.PokerProto.Poker_Response_RoomInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static message.PokerProto.Poker_Response_RoomInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static message.PokerProto.Poker_Response_RoomInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static message.PokerProto.Poker_Response_RoomInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static message.PokerProto.Poker_Response_RoomInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static message.PokerProto.Poker_Response_RoomInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static message.PokerProto.Poker_Response_RoomInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static message.PokerProto.Poker_Response_RoomInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static message.PokerProto.Poker_Response_RoomInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static message.PokerProto.Poker_Response_RoomInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(message.PokerProto.Poker_Response_RoomInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.nope.fishing.Poker_Response_RoomInfo}
     *
     * <pre>
     * Trả thông tin về cho User khi join room - chỉ 1 room
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements message.PokerProto.Poker_Response_RoomInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return message.PokerProto.internal_static_com_nope_fishing_Poker_Response_RoomInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return message.PokerProto.internal_static_com_nope_fishing_Poker_Response_RoomInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                message.PokerProto.Poker_Response_RoomInfo.class, message.PokerProto.Poker_Response_RoomInfo.Builder.class);
      }

      // Construct using message.PokerProto.Poker_Response_RoomInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getRoomPlayerCardsHolderFieldBuilder();
          getRoomPlayerAvailableActionFieldBuilder();
          getRoomAll52CardsFieldBuilder();
          getRoomCommunityCardsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        roomId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        roomCurrentPhase_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        roomPot_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        roomNewMinBet_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        roomIDOfNextDealer_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        roomLastAction_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        roomJoinedGameID_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        roomTurn_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        roomDealerTurn_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);
        roomBetAmount_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000200);
        roomBetAmountTotal_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000400);
        if (roomPlayerCardsHolderBuilder_ == null) {
          roomPlayerCardsHolder_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000800);
        } else {
          roomPlayerCardsHolderBuilder_.clear();
        }
        if (roomPlayerAvailableActionBuilder_ == null) {
          roomPlayerAvailableAction_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00001000);
        } else {
          roomPlayerAvailableActionBuilder_.clear();
        }
        if (roomAll52CardsBuilder_ == null) {
          roomAll52Cards_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00002000);
        } else {
          roomAll52CardsBuilder_.clear();
        }
        if (roomCommunityCardsBuilder_ == null) {
          roomCommunityCards_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00004000);
        } else {
          roomCommunityCardsBuilder_.clear();
        }
        roomCardStrenght_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00008000);
        roomJoinedGameIDFOLDER_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00010000);
        roomJoinedGameIDOUTOFMONEY_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00020000);
        userid_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00040000);
        username_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00080000);
        usermoney_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00100000);
        userBeginTurn_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00200000);
        userAction_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00400000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return message.PokerProto.internal_static_com_nope_fishing_Poker_Response_RoomInfo_descriptor;
      }

      public message.PokerProto.Poker_Response_RoomInfo getDefaultInstanceForType() {
        return message.PokerProto.Poker_Response_RoomInfo.getDefaultInstance();
      }

      public message.PokerProto.Poker_Response_RoomInfo build() {
        message.PokerProto.Poker_Response_RoomInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public message.PokerProto.Poker_Response_RoomInfo buildPartial() {
        message.PokerProto.Poker_Response_RoomInfo result = new message.PokerProto.Poker_Response_RoomInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.roomId_ = roomId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.roomCurrentPhase_ = roomCurrentPhase_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.roomPot_ = roomPot_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.roomNewMinBet_ = roomNewMinBet_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.roomIDOfNextDealer_ = roomIDOfNextDealer_;
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          roomLastAction_ = java.util.Collections.unmodifiableList(roomLastAction_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.roomLastAction_ = roomLastAction_;
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          roomJoinedGameID_ = java.util.Collections.unmodifiableList(roomJoinedGameID_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.roomJoinedGameID_ = roomJoinedGameID_;
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          roomTurn_ = java.util.Collections.unmodifiableList(roomTurn_);
          bitField0_ = (bitField0_ & ~0x00000080);
        }
        result.roomTurn_ = roomTurn_;
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          roomDealerTurn_ = java.util.Collections.unmodifiableList(roomDealerTurn_);
          bitField0_ = (bitField0_ & ~0x00000100);
        }
        result.roomDealerTurn_ = roomDealerTurn_;
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          roomBetAmount_ = java.util.Collections.unmodifiableList(roomBetAmount_);
          bitField0_ = (bitField0_ & ~0x00000200);
        }
        result.roomBetAmount_ = roomBetAmount_;
        if (((bitField0_ & 0x00000400) == 0x00000400)) {
          roomBetAmountTotal_ = java.util.Collections.unmodifiableList(roomBetAmountTotal_);
          bitField0_ = (bitField0_ & ~0x00000400);
        }
        result.roomBetAmountTotal_ = roomBetAmountTotal_;
        if (roomPlayerCardsHolderBuilder_ == null) {
          if (((bitField0_ & 0x00000800) == 0x00000800)) {
            roomPlayerCardsHolder_ = java.util.Collections.unmodifiableList(roomPlayerCardsHolder_);
            bitField0_ = (bitField0_ & ~0x00000800);
          }
          result.roomPlayerCardsHolder_ = roomPlayerCardsHolder_;
        } else {
          result.roomPlayerCardsHolder_ = roomPlayerCardsHolderBuilder_.build();
        }
        if (roomPlayerAvailableActionBuilder_ == null) {
          if (((bitField0_ & 0x00001000) == 0x00001000)) {
            roomPlayerAvailableAction_ = java.util.Collections.unmodifiableList(roomPlayerAvailableAction_);
            bitField0_ = (bitField0_ & ~0x00001000);
          }
          result.roomPlayerAvailableAction_ = roomPlayerAvailableAction_;
        } else {
          result.roomPlayerAvailableAction_ = roomPlayerAvailableActionBuilder_.build();
        }
        if (roomAll52CardsBuilder_ == null) {
          if (((bitField0_ & 0x00002000) == 0x00002000)) {
            roomAll52Cards_ = java.util.Collections.unmodifiableList(roomAll52Cards_);
            bitField0_ = (bitField0_ & ~0x00002000);
          }
          result.roomAll52Cards_ = roomAll52Cards_;
        } else {
          result.roomAll52Cards_ = roomAll52CardsBuilder_.build();
        }
        if (roomCommunityCardsBuilder_ == null) {
          if (((bitField0_ & 0x00004000) == 0x00004000)) {
            roomCommunityCards_ = java.util.Collections.unmodifiableList(roomCommunityCards_);
            bitField0_ = (bitField0_ & ~0x00004000);
          }
          result.roomCommunityCards_ = roomCommunityCards_;
        } else {
          result.roomCommunityCards_ = roomCommunityCardsBuilder_.build();
        }
        if (((bitField0_ & 0x00008000) == 0x00008000)) {
          roomCardStrenght_ = java.util.Collections.unmodifiableList(roomCardStrenght_);
          bitField0_ = (bitField0_ & ~0x00008000);
        }
        result.roomCardStrenght_ = roomCardStrenght_;
        if (((bitField0_ & 0x00010000) == 0x00010000)) {
          roomJoinedGameIDFOLDER_ = java.util.Collections.unmodifiableList(roomJoinedGameIDFOLDER_);
          bitField0_ = (bitField0_ & ~0x00010000);
        }
        result.roomJoinedGameIDFOLDER_ = roomJoinedGameIDFOLDER_;
        if (((bitField0_ & 0x00020000) == 0x00020000)) {
          roomJoinedGameIDOUTOFMONEY_ = java.util.Collections.unmodifiableList(roomJoinedGameIDOUTOFMONEY_);
          bitField0_ = (bitField0_ & ~0x00020000);
        }
        result.roomJoinedGameIDOUTOFMONEY_ = roomJoinedGameIDOUTOFMONEY_;
        if (((bitField0_ & 0x00040000) == 0x00040000)) {
          userid_ = java.util.Collections.unmodifiableList(userid_);
          bitField0_ = (bitField0_ & ~0x00040000);
        }
        result.userid_ = userid_;
        if (((bitField0_ & 0x00080000) == 0x00080000)) {
          username_ = new com.google.protobuf.UnmodifiableLazyStringList(
              username_);
          bitField0_ = (bitField0_ & ~0x00080000);
        }
        result.username_ = username_;
        if (((bitField0_ & 0x00100000) == 0x00100000)) {
          usermoney_ = java.util.Collections.unmodifiableList(usermoney_);
          bitField0_ = (bitField0_ & ~0x00100000);
        }
        result.usermoney_ = usermoney_;
        if (((bitField0_ & 0x00200000) == 0x00200000)) {
          userBeginTurn_ = java.util.Collections.unmodifiableList(userBeginTurn_);
          bitField0_ = (bitField0_ & ~0x00200000);
        }
        result.userBeginTurn_ = userBeginTurn_;
        if (((bitField0_ & 0x00400000) == 0x00400000)) {
          userAction_ = java.util.Collections.unmodifiableList(userAction_);
          bitField0_ = (bitField0_ & ~0x00400000);
        }
        result.userAction_ = userAction_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof message.PokerProto.Poker_Response_RoomInfo) {
          return mergeFrom((message.PokerProto.Poker_Response_RoomInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(message.PokerProto.Poker_Response_RoomInfo other) {
        if (other == message.PokerProto.Poker_Response_RoomInfo.getDefaultInstance()) return this;
        if (other.hasRoomId()) {
          setRoomId(other.getRoomId());
        }
        if (other.hasRoomCurrentPhase()) {
          setRoomCurrentPhase(other.getRoomCurrentPhase());
        }
        if (other.hasRoomPot()) {
          setRoomPot(other.getRoomPot());
        }
        if (other.hasRoomNewMinBet()) {
          setRoomNewMinBet(other.getRoomNewMinBet());
        }
        if (other.hasRoomIDOfNextDealer()) {
          setRoomIDOfNextDealer(other.getRoomIDOfNextDealer());
        }
        if (!other.roomLastAction_.isEmpty()) {
          if (roomLastAction_.isEmpty()) {
            roomLastAction_ = other.roomLastAction_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureRoomLastActionIsMutable();
            roomLastAction_.addAll(other.roomLastAction_);
          }
          onChanged();
        }
        if (!other.roomJoinedGameID_.isEmpty()) {
          if (roomJoinedGameID_.isEmpty()) {
            roomJoinedGameID_ = other.roomJoinedGameID_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureRoomJoinedGameIDIsMutable();
            roomJoinedGameID_.addAll(other.roomJoinedGameID_);
          }
          onChanged();
        }
        if (!other.roomTurn_.isEmpty()) {
          if (roomTurn_.isEmpty()) {
            roomTurn_ = other.roomTurn_;
            bitField0_ = (bitField0_ & ~0x00000080);
          } else {
            ensureRoomTurnIsMutable();
            roomTurn_.addAll(other.roomTurn_);
          }
          onChanged();
        }
        if (!other.roomDealerTurn_.isEmpty()) {
          if (roomDealerTurn_.isEmpty()) {
            roomDealerTurn_ = other.roomDealerTurn_;
            bitField0_ = (bitField0_ & ~0x00000100);
          } else {
            ensureRoomDealerTurnIsMutable();
            roomDealerTurn_.addAll(other.roomDealerTurn_);
          }
          onChanged();
        }
        if (!other.roomBetAmount_.isEmpty()) {
          if (roomBetAmount_.isEmpty()) {
            roomBetAmount_ = other.roomBetAmount_;
            bitField0_ = (bitField0_ & ~0x00000200);
          } else {
            ensureRoomBetAmountIsMutable();
            roomBetAmount_.addAll(other.roomBetAmount_);
          }
          onChanged();
        }
        if (!other.roomBetAmountTotal_.isEmpty()) {
          if (roomBetAmountTotal_.isEmpty()) {
            roomBetAmountTotal_ = other.roomBetAmountTotal_;
            bitField0_ = (bitField0_ & ~0x00000400);
          } else {
            ensureRoomBetAmountTotalIsMutable();
            roomBetAmountTotal_.addAll(other.roomBetAmountTotal_);
          }
          onChanged();
        }
        if (roomPlayerCardsHolderBuilder_ == null) {
          if (!other.roomPlayerCardsHolder_.isEmpty()) {
            if (roomPlayerCardsHolder_.isEmpty()) {
              roomPlayerCardsHolder_ = other.roomPlayerCardsHolder_;
              bitField0_ = (bitField0_ & ~0x00000800);
            } else {
              ensureRoomPlayerCardsHolderIsMutable();
              roomPlayerCardsHolder_.addAll(other.roomPlayerCardsHolder_);
            }
            onChanged();
          }
        } else {
          if (!other.roomPlayerCardsHolder_.isEmpty()) {
            if (roomPlayerCardsHolderBuilder_.isEmpty()) {
              roomPlayerCardsHolderBuilder_.dispose();
              roomPlayerCardsHolderBuilder_ = null;
              roomPlayerCardsHolder_ = other.roomPlayerCardsHolder_;
              bitField0_ = (bitField0_ & ~0x00000800);
              roomPlayerCardsHolderBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getRoomPlayerCardsHolderFieldBuilder() : null;
            } else {
              roomPlayerCardsHolderBuilder_.addAllMessages(other.roomPlayerCardsHolder_);
            }
          }
        }
        if (roomPlayerAvailableActionBuilder_ == null) {
          if (!other.roomPlayerAvailableAction_.isEmpty()) {
            if (roomPlayerAvailableAction_.isEmpty()) {
              roomPlayerAvailableAction_ = other.roomPlayerAvailableAction_;
              bitField0_ = (bitField0_ & ~0x00001000);
            } else {
              ensureRoomPlayerAvailableActionIsMutable();
              roomPlayerAvailableAction_.addAll(other.roomPlayerAvailableAction_);
            }
            onChanged();
          }
        } else {
          if (!other.roomPlayerAvailableAction_.isEmpty()) {
            if (roomPlayerAvailableActionBuilder_.isEmpty()) {
              roomPlayerAvailableActionBuilder_.dispose();
              roomPlayerAvailableActionBuilder_ = null;
              roomPlayerAvailableAction_ = other.roomPlayerAvailableAction_;
              bitField0_ = (bitField0_ & ~0x00001000);
              roomPlayerAvailableActionBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getRoomPlayerAvailableActionFieldBuilder() : null;
            } else {
              roomPlayerAvailableActionBuilder_.addAllMessages(other.roomPlayerAvailableAction_);
            }
          }
        }
        if (roomAll52CardsBuilder_ == null) {
          if (!other.roomAll52Cards_.isEmpty()) {
            if (roomAll52Cards_.isEmpty()) {
              roomAll52Cards_ = other.roomAll52Cards_;
              bitField0_ = (bitField0_ & ~0x00002000);
            } else {
              ensureRoomAll52CardsIsMutable();
              roomAll52Cards_.addAll(other.roomAll52Cards_);
            }
            onChanged();
          }
        } else {
          if (!other.roomAll52Cards_.isEmpty()) {
            if (roomAll52CardsBuilder_.isEmpty()) {
              roomAll52CardsBuilder_.dispose();
              roomAll52CardsBuilder_ = null;
              roomAll52Cards_ = other.roomAll52Cards_;
              bitField0_ = (bitField0_ & ~0x00002000);
              roomAll52CardsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getRoomAll52CardsFieldBuilder() : null;
            } else {
              roomAll52CardsBuilder_.addAllMessages(other.roomAll52Cards_);
            }
          }
        }
        if (roomCommunityCardsBuilder_ == null) {
          if (!other.roomCommunityCards_.isEmpty()) {
            if (roomCommunityCards_.isEmpty()) {
              roomCommunityCards_ = other.roomCommunityCards_;
              bitField0_ = (bitField0_ & ~0x00004000);
            } else {
              ensureRoomCommunityCardsIsMutable();
              roomCommunityCards_.addAll(other.roomCommunityCards_);
            }
            onChanged();
          }
        } else {
          if (!other.roomCommunityCards_.isEmpty()) {
            if (roomCommunityCardsBuilder_.isEmpty()) {
              roomCommunityCardsBuilder_.dispose();
              roomCommunityCardsBuilder_ = null;
              roomCommunityCards_ = other.roomCommunityCards_;
              bitField0_ = (bitField0_ & ~0x00004000);
              roomCommunityCardsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getRoomCommunityCardsFieldBuilder() : null;
            } else {
              roomCommunityCardsBuilder_.addAllMessages(other.roomCommunityCards_);
            }
          }
        }
        if (!other.roomCardStrenght_.isEmpty()) {
          if (roomCardStrenght_.isEmpty()) {
            roomCardStrenght_ = other.roomCardStrenght_;
            bitField0_ = (bitField0_ & ~0x00008000);
          } else {
            ensureRoomCardStrenghtIsMutable();
            roomCardStrenght_.addAll(other.roomCardStrenght_);
          }
          onChanged();
        }
        if (!other.roomJoinedGameIDFOLDER_.isEmpty()) {
          if (roomJoinedGameIDFOLDER_.isEmpty()) {
            roomJoinedGameIDFOLDER_ = other.roomJoinedGameIDFOLDER_;
            bitField0_ = (bitField0_ & ~0x00010000);
          } else {
            ensureRoomJoinedGameIDFOLDERIsMutable();
            roomJoinedGameIDFOLDER_.addAll(other.roomJoinedGameIDFOLDER_);
          }
          onChanged();
        }
        if (!other.roomJoinedGameIDOUTOFMONEY_.isEmpty()) {
          if (roomJoinedGameIDOUTOFMONEY_.isEmpty()) {
            roomJoinedGameIDOUTOFMONEY_ = other.roomJoinedGameIDOUTOFMONEY_;
            bitField0_ = (bitField0_ & ~0x00020000);
          } else {
            ensureRoomJoinedGameIDOUTOFMONEYIsMutable();
            roomJoinedGameIDOUTOFMONEY_.addAll(other.roomJoinedGameIDOUTOFMONEY_);
          }
          onChanged();
        }
        if (!other.userid_.isEmpty()) {
          if (userid_.isEmpty()) {
            userid_ = other.userid_;
            bitField0_ = (bitField0_ & ~0x00040000);
          } else {
            ensureUseridIsMutable();
            userid_.addAll(other.userid_);
          }
          onChanged();
        }
        if (!other.username_.isEmpty()) {
          if (username_.isEmpty()) {
            username_ = other.username_;
            bitField0_ = (bitField0_ & ~0x00080000);
          } else {
            ensureUsernameIsMutable();
            username_.addAll(other.username_);
          }
          onChanged();
        }
        if (!other.usermoney_.isEmpty()) {
          if (usermoney_.isEmpty()) {
            usermoney_ = other.usermoney_;
            bitField0_ = (bitField0_ & ~0x00100000);
          } else {
            ensureUsermoneyIsMutable();
            usermoney_.addAll(other.usermoney_);
          }
          onChanged();
        }
        if (!other.userBeginTurn_.isEmpty()) {
          if (userBeginTurn_.isEmpty()) {
            userBeginTurn_ = other.userBeginTurn_;
            bitField0_ = (bitField0_ & ~0x00200000);
          } else {
            ensureUserBeginTurnIsMutable();
            userBeginTurn_.addAll(other.userBeginTurn_);
          }
          onChanged();
        }
        if (!other.userAction_.isEmpty()) {
          if (userAction_.isEmpty()) {
            userAction_ = other.userAction_;
            bitField0_ = (bitField0_ & ~0x00400000);
          } else {
            ensureUserActionIsMutable();
            userAction_.addAll(other.userAction_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        message.PokerProto.Poker_Response_RoomInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (message.PokerProto.Poker_Response_RoomInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 roomId = 1;
      private int roomId_ ;
      /**
       * <code>optional int32 roomId = 1;</code>
       */
      public boolean hasRoomId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 roomId = 1;</code>
       */
      public int getRoomId() {
        return roomId_;
      }
      /**
       * <code>optional int32 roomId = 1;</code>
       */
      public Builder setRoomId(int value) {
        bitField0_ |= 0x00000001;
        roomId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 roomId = 1;</code>
       */
      public Builder clearRoomId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        roomId_ = 0;
        onChanged();
        return this;
      }

      // optional int32 roomCurrentPhase = 8;
      private int roomCurrentPhase_ ;
      /**
       * <code>optional int32 roomCurrentPhase = 8;</code>
       */
      public boolean hasRoomCurrentPhase() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 roomCurrentPhase = 8;</code>
       */
      public int getRoomCurrentPhase() {
        return roomCurrentPhase_;
      }
      /**
       * <code>optional int32 roomCurrentPhase = 8;</code>
       */
      public Builder setRoomCurrentPhase(int value) {
        bitField0_ |= 0x00000002;
        roomCurrentPhase_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 roomCurrentPhase = 8;</code>
       */
      public Builder clearRoomCurrentPhase() {
        bitField0_ = (bitField0_ & ~0x00000002);
        roomCurrentPhase_ = 0;
        onChanged();
        return this;
      }

      // optional int64 roomPot = 9;
      private long roomPot_ ;
      /**
       * <code>optional int64 roomPot = 9;</code>
       */
      public boolean hasRoomPot() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int64 roomPot = 9;</code>
       */
      public long getRoomPot() {
        return roomPot_;
      }
      /**
       * <code>optional int64 roomPot = 9;</code>
       */
      public Builder setRoomPot(long value) {
        bitField0_ |= 0x00000004;
        roomPot_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 roomPot = 9;</code>
       */
      public Builder clearRoomPot() {
        bitField0_ = (bitField0_ & ~0x00000004);
        roomPot_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 roomNewMinBet = 18;
      private long roomNewMinBet_ ;
      /**
       * <code>optional int64 roomNewMinBet = 18;</code>
       */
      public boolean hasRoomNewMinBet() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int64 roomNewMinBet = 18;</code>
       */
      public long getRoomNewMinBet() {
        return roomNewMinBet_;
      }
      /**
       * <code>optional int64 roomNewMinBet = 18;</code>
       */
      public Builder setRoomNewMinBet(long value) {
        bitField0_ |= 0x00000008;
        roomNewMinBet_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 roomNewMinBet = 18;</code>
       */
      public Builder clearRoomNewMinBet() {
        bitField0_ = (bitField0_ & ~0x00000008);
        roomNewMinBet_ = 0L;
        onChanged();
        return this;
      }

      // optional int32 roomIDOfNextDealer = 22;
      private int roomIDOfNextDealer_ ;
      /**
       * <code>optional int32 roomIDOfNextDealer = 22;</code>
       */
      public boolean hasRoomIDOfNextDealer() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 roomIDOfNextDealer = 22;</code>
       */
      public int getRoomIDOfNextDealer() {
        return roomIDOfNextDealer_;
      }
      /**
       * <code>optional int32 roomIDOfNextDealer = 22;</code>
       */
      public Builder setRoomIDOfNextDealer(int value) {
        bitField0_ |= 0x00000010;
        roomIDOfNextDealer_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 roomIDOfNextDealer = 22;</code>
       */
      public Builder clearRoomIDOfNextDealer() {
        bitField0_ = (bitField0_ & ~0x00000010);
        roomIDOfNextDealer_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 roomLastAction = 19;
      private java.util.List<java.lang.Integer> roomLastAction_ = java.util.Collections.emptyList();
      private void ensureRoomLastActionIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          roomLastAction_ = new java.util.ArrayList<java.lang.Integer>(roomLastAction_);
          bitField0_ |= 0x00000020;
         }
      }
      /**
       * <code>repeated int32 roomLastAction = 19;</code>
       */
      public java.util.List<java.lang.Integer>
          getRoomLastActionList() {
        return java.util.Collections.unmodifiableList(roomLastAction_);
      }
      /**
       * <code>repeated int32 roomLastAction = 19;</code>
       */
      public int getRoomLastActionCount() {
        return roomLastAction_.size();
      }
      /**
       * <code>repeated int32 roomLastAction = 19;</code>
       */
      public int getRoomLastAction(int index) {
        return roomLastAction_.get(index);
      }
      /**
       * <code>repeated int32 roomLastAction = 19;</code>
       */
      public Builder setRoomLastAction(
          int index, int value) {
        ensureRoomLastActionIsMutable();
        roomLastAction_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 roomLastAction = 19;</code>
       */
      public Builder addRoomLastAction(int value) {
        ensureRoomLastActionIsMutable();
        roomLastAction_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 roomLastAction = 19;</code>
       */
      public Builder addAllRoomLastAction(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureRoomLastActionIsMutable();
        super.addAll(values, roomLastAction_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 roomLastAction = 19;</code>
       */
      public Builder clearRoomLastAction() {
        roomLastAction_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }

      // repeated int32 roomJoinedGameID = 10;
      private java.util.List<java.lang.Integer> roomJoinedGameID_ = java.util.Collections.emptyList();
      private void ensureRoomJoinedGameIDIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          roomJoinedGameID_ = new java.util.ArrayList<java.lang.Integer>(roomJoinedGameID_);
          bitField0_ |= 0x00000040;
         }
      }
      /**
       * <code>repeated int32 roomJoinedGameID = 10;</code>
       */
      public java.util.List<java.lang.Integer>
          getRoomJoinedGameIDList() {
        return java.util.Collections.unmodifiableList(roomJoinedGameID_);
      }
      /**
       * <code>repeated int32 roomJoinedGameID = 10;</code>
       */
      public int getRoomJoinedGameIDCount() {
        return roomJoinedGameID_.size();
      }
      /**
       * <code>repeated int32 roomJoinedGameID = 10;</code>
       */
      public int getRoomJoinedGameID(int index) {
        return roomJoinedGameID_.get(index);
      }
      /**
       * <code>repeated int32 roomJoinedGameID = 10;</code>
       */
      public Builder setRoomJoinedGameID(
          int index, int value) {
        ensureRoomJoinedGameIDIsMutable();
        roomJoinedGameID_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 roomJoinedGameID = 10;</code>
       */
      public Builder addRoomJoinedGameID(int value) {
        ensureRoomJoinedGameIDIsMutable();
        roomJoinedGameID_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 roomJoinedGameID = 10;</code>
       */
      public Builder addAllRoomJoinedGameID(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureRoomJoinedGameIDIsMutable();
        super.addAll(values, roomJoinedGameID_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 roomJoinedGameID = 10;</code>
       */
      public Builder clearRoomJoinedGameID() {
        roomJoinedGameID_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }

      // repeated bool roomTurn = 11;
      private java.util.List<java.lang.Boolean> roomTurn_ = java.util.Collections.emptyList();
      private void ensureRoomTurnIsMutable() {
        if (!((bitField0_ & 0x00000080) == 0x00000080)) {
          roomTurn_ = new java.util.ArrayList<java.lang.Boolean>(roomTurn_);
          bitField0_ |= 0x00000080;
         }
      }
      /**
       * <code>repeated bool roomTurn = 11;</code>
       */
      public java.util.List<java.lang.Boolean>
          getRoomTurnList() {
        return java.util.Collections.unmodifiableList(roomTurn_);
      }
      /**
       * <code>repeated bool roomTurn = 11;</code>
       */
      public int getRoomTurnCount() {
        return roomTurn_.size();
      }
      /**
       * <code>repeated bool roomTurn = 11;</code>
       */
      public boolean getRoomTurn(int index) {
        return roomTurn_.get(index);
      }
      /**
       * <code>repeated bool roomTurn = 11;</code>
       */
      public Builder setRoomTurn(
          int index, boolean value) {
        ensureRoomTurnIsMutable();
        roomTurn_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool roomTurn = 11;</code>
       */
      public Builder addRoomTurn(boolean value) {
        ensureRoomTurnIsMutable();
        roomTurn_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool roomTurn = 11;</code>
       */
      public Builder addAllRoomTurn(
          java.lang.Iterable<? extends java.lang.Boolean> values) {
        ensureRoomTurnIsMutable();
        super.addAll(values, roomTurn_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool roomTurn = 11;</code>
       */
      public Builder clearRoomTurn() {
        roomTurn_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        onChanged();
        return this;
      }

      // repeated int32 roomDealerTurn = 12;
      private java.util.List<java.lang.Integer> roomDealerTurn_ = java.util.Collections.emptyList();
      private void ensureRoomDealerTurnIsMutable() {
        if (!((bitField0_ & 0x00000100) == 0x00000100)) {
          roomDealerTurn_ = new java.util.ArrayList<java.lang.Integer>(roomDealerTurn_);
          bitField0_ |= 0x00000100;
         }
      }
      /**
       * <code>repeated int32 roomDealerTurn = 12;</code>
       */
      public java.util.List<java.lang.Integer>
          getRoomDealerTurnList() {
        return java.util.Collections.unmodifiableList(roomDealerTurn_);
      }
      /**
       * <code>repeated int32 roomDealerTurn = 12;</code>
       */
      public int getRoomDealerTurnCount() {
        return roomDealerTurn_.size();
      }
      /**
       * <code>repeated int32 roomDealerTurn = 12;</code>
       */
      public int getRoomDealerTurn(int index) {
        return roomDealerTurn_.get(index);
      }
      /**
       * <code>repeated int32 roomDealerTurn = 12;</code>
       */
      public Builder setRoomDealerTurn(
          int index, int value) {
        ensureRoomDealerTurnIsMutable();
        roomDealerTurn_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 roomDealerTurn = 12;</code>
       */
      public Builder addRoomDealerTurn(int value) {
        ensureRoomDealerTurnIsMutable();
        roomDealerTurn_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 roomDealerTurn = 12;</code>
       */
      public Builder addAllRoomDealerTurn(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureRoomDealerTurnIsMutable();
        super.addAll(values, roomDealerTurn_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 roomDealerTurn = 12;</code>
       */
      public Builder clearRoomDealerTurn() {
        roomDealerTurn_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);
        onChanged();
        return this;
      }

      // repeated int64 roomBetAmount = 17;
      private java.util.List<java.lang.Long> roomBetAmount_ = java.util.Collections.emptyList();
      private void ensureRoomBetAmountIsMutable() {
        if (!((bitField0_ & 0x00000200) == 0x00000200)) {
          roomBetAmount_ = new java.util.ArrayList<java.lang.Long>(roomBetAmount_);
          bitField0_ |= 0x00000200;
         }
      }
      /**
       * <code>repeated int64 roomBetAmount = 17;</code>
       */
      public java.util.List<java.lang.Long>
          getRoomBetAmountList() {
        return java.util.Collections.unmodifiableList(roomBetAmount_);
      }
      /**
       * <code>repeated int64 roomBetAmount = 17;</code>
       */
      public int getRoomBetAmountCount() {
        return roomBetAmount_.size();
      }
      /**
       * <code>repeated int64 roomBetAmount = 17;</code>
       */
      public long getRoomBetAmount(int index) {
        return roomBetAmount_.get(index);
      }
      /**
       * <code>repeated int64 roomBetAmount = 17;</code>
       */
      public Builder setRoomBetAmount(
          int index, long value) {
        ensureRoomBetAmountIsMutable();
        roomBetAmount_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 roomBetAmount = 17;</code>
       */
      public Builder addRoomBetAmount(long value) {
        ensureRoomBetAmountIsMutable();
        roomBetAmount_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 roomBetAmount = 17;</code>
       */
      public Builder addAllRoomBetAmount(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureRoomBetAmountIsMutable();
        super.addAll(values, roomBetAmount_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 roomBetAmount = 17;</code>
       */
      public Builder clearRoomBetAmount() {
        roomBetAmount_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000200);
        onChanged();
        return this;
      }

      // repeated int64 roomBetAmountTotal = 23;
      private java.util.List<java.lang.Long> roomBetAmountTotal_ = java.util.Collections.emptyList();
      private void ensureRoomBetAmountTotalIsMutable() {
        if (!((bitField0_ & 0x00000400) == 0x00000400)) {
          roomBetAmountTotal_ = new java.util.ArrayList<java.lang.Long>(roomBetAmountTotal_);
          bitField0_ |= 0x00000400;
         }
      }
      /**
       * <code>repeated int64 roomBetAmountTotal = 23;</code>
       */
      public java.util.List<java.lang.Long>
          getRoomBetAmountTotalList() {
        return java.util.Collections.unmodifiableList(roomBetAmountTotal_);
      }
      /**
       * <code>repeated int64 roomBetAmountTotal = 23;</code>
       */
      public int getRoomBetAmountTotalCount() {
        return roomBetAmountTotal_.size();
      }
      /**
       * <code>repeated int64 roomBetAmountTotal = 23;</code>
       */
      public long getRoomBetAmountTotal(int index) {
        return roomBetAmountTotal_.get(index);
      }
      /**
       * <code>repeated int64 roomBetAmountTotal = 23;</code>
       */
      public Builder setRoomBetAmountTotal(
          int index, long value) {
        ensureRoomBetAmountTotalIsMutable();
        roomBetAmountTotal_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 roomBetAmountTotal = 23;</code>
       */
      public Builder addRoomBetAmountTotal(long value) {
        ensureRoomBetAmountTotalIsMutable();
        roomBetAmountTotal_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 roomBetAmountTotal = 23;</code>
       */
      public Builder addAllRoomBetAmountTotal(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureRoomBetAmountTotalIsMutable();
        super.addAll(values, roomBetAmountTotal_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 roomBetAmountTotal = 23;</code>
       */
      public Builder clearRoomBetAmountTotal() {
        roomBetAmountTotal_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000400);
        onChanged();
        return this;
      }

      // repeated .com.nope.fishing.Poker_Player roomPlayerCardsHolder = 13;
      private java.util.List<message.PokerProto.Poker_Player> roomPlayerCardsHolder_ =
        java.util.Collections.emptyList();
      private void ensureRoomPlayerCardsHolderIsMutable() {
        if (!((bitField0_ & 0x00000800) == 0x00000800)) {
          roomPlayerCardsHolder_ = new java.util.ArrayList<message.PokerProto.Poker_Player>(roomPlayerCardsHolder_);
          bitField0_ |= 0x00000800;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          message.PokerProto.Poker_Player, message.PokerProto.Poker_Player.Builder, message.PokerProto.Poker_PlayerOrBuilder> roomPlayerCardsHolderBuilder_;

      /**
       * <code>repeated .com.nope.fishing.Poker_Player roomPlayerCardsHolder = 13;</code>
       */
      public java.util.List<message.PokerProto.Poker_Player> getRoomPlayerCardsHolderList() {
        if (roomPlayerCardsHolderBuilder_ == null) {
          return java.util.Collections.unmodifiableList(roomPlayerCardsHolder_);
        } else {
          return roomPlayerCardsHolderBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.nope.fishing.Poker_Player roomPlayerCardsHolder = 13;</code>
       */
      public int getRoomPlayerCardsHolderCount() {
        if (roomPlayerCardsHolderBuilder_ == null) {
          return roomPlayerCardsHolder_.size();
        } else {
          return roomPlayerCardsHolderBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.nope.fishing.Poker_Player roomPlayerCardsHolder = 13;</code>
       */
      public message.PokerProto.Poker_Player getRoomPlayerCardsHolder(int index) {
        if (roomPlayerCardsHolderBuilder_ == null) {
          return roomPlayerCardsHolder_.get(index);
        } else {
          return roomPlayerCardsHolderBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.nope.fishing.Poker_Player roomPlayerCardsHolder = 13;</code>
       */
      public Builder setRoomPlayerCardsHolder(
          int index, message.PokerProto.Poker_Player value) {
        if (roomPlayerCardsHolderBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRoomPlayerCardsHolderIsMutable();
          roomPlayerCardsHolder_.set(index, value);
          onChanged();
        } else {
          roomPlayerCardsHolderBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.nope.fishing.Poker_Player roomPlayerCardsHolder = 13;</code>
       */
      public Builder setRoomPlayerCardsHolder(
          int index, message.PokerProto.Poker_Player.Builder builderForValue) {
        if (roomPlayerCardsHolderBuilder_ == null) {
          ensureRoomPlayerCardsHolderIsMutable();
          roomPlayerCardsHolder_.set(index, builderForValue.build());
          onChanged();
        } else {
          roomPlayerCardsHolderBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.nope.fishing.Poker_Player roomPlayerCardsHolder = 13;</code>
       */
      public Builder addRoomPlayerCardsHolder(message.PokerProto.Poker_Player value) {
        if (roomPlayerCardsHolderBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRoomPlayerCardsHolderIsMutable();
          roomPlayerCardsHolder_.add(value);
          onChanged();
        } else {
          roomPlayerCardsHolderBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.nope.fishing.Poker_Player roomPlayerCardsHolder = 13;</code>
       */
      public Builder addRoomPlayerCardsHolder(
          int index, message.PokerProto.Poker_Player value) {
        if (roomPlayerCardsHolderBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRoomPlayerCardsHolderIsMutable();
          roomPlayerCardsHolder_.add(index, value);
          onChanged();
        } else {
          roomPlayerCardsHolderBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.nope.fishing.Poker_Player roomPlayerCardsHolder = 13;</code>
       */
      public Builder addRoomPlayerCardsHolder(
          message.PokerProto.Poker_Player.Builder builderForValue) {
        if (roomPlayerCardsHolderBuilder_ == null) {
          ensureRoomPlayerCardsHolderIsMutable();
          roomPlayerCardsHolder_.add(builderForValue.build());
          onChanged();
        } else {
          roomPlayerCardsHolderBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.nope.fishing.Poker_Player roomPlayerCardsHolder = 13;</code>
       */
      public Builder addRoomPlayerCardsHolder(
          int index, message.PokerProto.Poker_Player.Builder builderForValue) {
        if (roomPlayerCardsHolderBuilder_ == null) {
          ensureRoomPlayerCardsHolderIsMutable();
          roomPlayerCardsHolder_.add(index, builderForValue.build());
          onChanged();
        } else {
          roomPlayerCardsHolderBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.nope.fishing.Poker_Player roomPlayerCardsHolder = 13;</code>
       */
      public Builder addAllRoomPlayerCardsHolder(
          java.lang.Iterable<? extends message.PokerProto.Poker_Player> values) {
        if (roomPlayerCardsHolderBuilder_ == null) {
          ensureRoomPlayerCardsHolderIsMutable();
          super.addAll(values, roomPlayerCardsHolder_);
          onChanged();
        } else {
          roomPlayerCardsHolderBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.nope.fishing.Poker_Player roomPlayerCardsHolder = 13;</code>
       */
      public Builder clearRoomPlayerCardsHolder() {
        if (roomPlayerCardsHolderBuilder_ == null) {
          roomPlayerCardsHolder_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000800);
          onChanged();
        } else {
          roomPlayerCardsHolderBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.nope.fishing.Poker_Player roomPlayerCardsHolder = 13;</code>
       */
      public Builder removeRoomPlayerCardsHolder(int index) {
        if (roomPlayerCardsHolderBuilder_ == null) {
          ensureRoomPlayerCardsHolderIsMutable();
          roomPlayerCardsHolder_.remove(index);
          onChanged();
        } else {
          roomPlayerCardsHolderBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.nope.fishing.Poker_Player roomPlayerCardsHolder = 13;</code>
       */
      public message.PokerProto.Poker_Player.Builder getRoomPlayerCardsHolderBuilder(
          int index) {
        return getRoomPlayerCardsHolderFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.nope.fishing.Poker_Player roomPlayerCardsHolder = 13;</code>
       */
      public message.PokerProto.Poker_PlayerOrBuilder getRoomPlayerCardsHolderOrBuilder(
          int index) {
        if (roomPlayerCardsHolderBuilder_ == null) {
          return roomPlayerCardsHolder_.get(index);  } else {
          return roomPlayerCardsHolderBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.nope.fishing.Poker_Player roomPlayerCardsHolder = 13;</code>
       */
      public java.util.List<? extends message.PokerProto.Poker_PlayerOrBuilder> 
           getRoomPlayerCardsHolderOrBuilderList() {
        if (roomPlayerCardsHolderBuilder_ != null) {
          return roomPlayerCardsHolderBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(roomPlayerCardsHolder_);
        }
      }
      /**
       * <code>repeated .com.nope.fishing.Poker_Player roomPlayerCardsHolder = 13;</code>
       */
      public message.PokerProto.Poker_Player.Builder addRoomPlayerCardsHolderBuilder() {
        return getRoomPlayerCardsHolderFieldBuilder().addBuilder(
            message.PokerProto.Poker_Player.getDefaultInstance());
      }
      /**
       * <code>repeated .com.nope.fishing.Poker_Player roomPlayerCardsHolder = 13;</code>
       */
      public message.PokerProto.Poker_Player.Builder addRoomPlayerCardsHolderBuilder(
          int index) {
        return getRoomPlayerCardsHolderFieldBuilder().addBuilder(
            index, message.PokerProto.Poker_Player.getDefaultInstance());
      }
      /**
       * <code>repeated .com.nope.fishing.Poker_Player roomPlayerCardsHolder = 13;</code>
       */
      public java.util.List<message.PokerProto.Poker_Player.Builder> 
           getRoomPlayerCardsHolderBuilderList() {
        return getRoomPlayerCardsHolderFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          message.PokerProto.Poker_Player, message.PokerProto.Poker_Player.Builder, message.PokerProto.Poker_PlayerOrBuilder> 
          getRoomPlayerCardsHolderFieldBuilder() {
        if (roomPlayerCardsHolderBuilder_ == null) {
          roomPlayerCardsHolderBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              message.PokerProto.Poker_Player, message.PokerProto.Poker_Player.Builder, message.PokerProto.Poker_PlayerOrBuilder>(
                  roomPlayerCardsHolder_,
                  ((bitField0_ & 0x00000800) == 0x00000800),
                  getParentForChildren(),
                  isClean());
          roomPlayerCardsHolder_ = null;
        }
        return roomPlayerCardsHolderBuilder_;
      }

      // repeated .com.nope.fishing.Poker_Player roomPlayerAvailableAction = 14;
      private java.util.List<message.PokerProto.Poker_Player> roomPlayerAvailableAction_ =
        java.util.Collections.emptyList();
      private void ensureRoomPlayerAvailableActionIsMutable() {
        if (!((bitField0_ & 0x00001000) == 0x00001000)) {
          roomPlayerAvailableAction_ = new java.util.ArrayList<message.PokerProto.Poker_Player>(roomPlayerAvailableAction_);
          bitField0_ |= 0x00001000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          message.PokerProto.Poker_Player, message.PokerProto.Poker_Player.Builder, message.PokerProto.Poker_PlayerOrBuilder> roomPlayerAvailableActionBuilder_;

      /**
       * <code>repeated .com.nope.fishing.Poker_Player roomPlayerAvailableAction = 14;</code>
       */
      public java.util.List<message.PokerProto.Poker_Player> getRoomPlayerAvailableActionList() {
        if (roomPlayerAvailableActionBuilder_ == null) {
          return java.util.Collections.unmodifiableList(roomPlayerAvailableAction_);
        } else {
          return roomPlayerAvailableActionBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.nope.fishing.Poker_Player roomPlayerAvailableAction = 14;</code>
       */
      public int getRoomPlayerAvailableActionCount() {
        if (roomPlayerAvailableActionBuilder_ == null) {
          return roomPlayerAvailableAction_.size();
        } else {
          return roomPlayerAvailableActionBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.nope.fishing.Poker_Player roomPlayerAvailableAction = 14;</code>
       */
      public message.PokerProto.Poker_Player getRoomPlayerAvailableAction(int index) {
        if (roomPlayerAvailableActionBuilder_ == null) {
          return roomPlayerAvailableAction_.get(index);
        } else {
          return roomPlayerAvailableActionBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.nope.fishing.Poker_Player roomPlayerAvailableAction = 14;</code>
       */
      public Builder setRoomPlayerAvailableAction(
          int index, message.PokerProto.Poker_Player value) {
        if (roomPlayerAvailableActionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRoomPlayerAvailableActionIsMutable();
          roomPlayerAvailableAction_.set(index, value);
          onChanged();
        } else {
          roomPlayerAvailableActionBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.nope.fishing.Poker_Player roomPlayerAvailableAction = 14;</code>
       */
      public Builder setRoomPlayerAvailableAction(
          int index, message.PokerProto.Poker_Player.Builder builderForValue) {
        if (roomPlayerAvailableActionBuilder_ == null) {
          ensureRoomPlayerAvailableActionIsMutable();
          roomPlayerAvailableAction_.set(index, builderForValue.build());
          onChanged();
        } else {
          roomPlayerAvailableActionBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.nope.fishing.Poker_Player roomPlayerAvailableAction = 14;</code>
       */
      public Builder addRoomPlayerAvailableAction(message.PokerProto.Poker_Player value) {
        if (roomPlayerAvailableActionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRoomPlayerAvailableActionIsMutable();
          roomPlayerAvailableAction_.add(value);
          onChanged();
        } else {
          roomPlayerAvailableActionBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.nope.fishing.Poker_Player roomPlayerAvailableAction = 14;</code>
       */
      public Builder addRoomPlayerAvailableAction(
          int index, message.PokerProto.Poker_Player value) {
        if (roomPlayerAvailableActionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRoomPlayerAvailableActionIsMutable();
          roomPlayerAvailableAction_.add(index, value);
          onChanged();
        } else {
          roomPlayerAvailableActionBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.nope.fishing.Poker_Player roomPlayerAvailableAction = 14;</code>
       */
      public Builder addRoomPlayerAvailableAction(
          message.PokerProto.Poker_Player.Builder builderForValue) {
        if (roomPlayerAvailableActionBuilder_ == null) {
          ensureRoomPlayerAvailableActionIsMutable();
          roomPlayerAvailableAction_.add(builderForValue.build());
          onChanged();
        } else {
          roomPlayerAvailableActionBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.nope.fishing.Poker_Player roomPlayerAvailableAction = 14;</code>
       */
      public Builder addRoomPlayerAvailableAction(
          int index, message.PokerProto.Poker_Player.Builder builderForValue) {
        if (roomPlayerAvailableActionBuilder_ == null) {
          ensureRoomPlayerAvailableActionIsMutable();
          roomPlayerAvailableAction_.add(index, builderForValue.build());
          onChanged();
        } else {
          roomPlayerAvailableActionBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.nope.fishing.Poker_Player roomPlayerAvailableAction = 14;</code>
       */
      public Builder addAllRoomPlayerAvailableAction(
          java.lang.Iterable<? extends message.PokerProto.Poker_Player> values) {
        if (roomPlayerAvailableActionBuilder_ == null) {
          ensureRoomPlayerAvailableActionIsMutable();
          super.addAll(values, roomPlayerAvailableAction_);
          onChanged();
        } else {
          roomPlayerAvailableActionBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.nope.fishing.Poker_Player roomPlayerAvailableAction = 14;</code>
       */
      public Builder clearRoomPlayerAvailableAction() {
        if (roomPlayerAvailableActionBuilder_ == null) {
          roomPlayerAvailableAction_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00001000);
          onChanged();
        } else {
          roomPlayerAvailableActionBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.nope.fishing.Poker_Player roomPlayerAvailableAction = 14;</code>
       */
      public Builder removeRoomPlayerAvailableAction(int index) {
        if (roomPlayerAvailableActionBuilder_ == null) {
          ensureRoomPlayerAvailableActionIsMutable();
          roomPlayerAvailableAction_.remove(index);
          onChanged();
        } else {
          roomPlayerAvailableActionBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.nope.fishing.Poker_Player roomPlayerAvailableAction = 14;</code>
       */
      public message.PokerProto.Poker_Player.Builder getRoomPlayerAvailableActionBuilder(
          int index) {
        return getRoomPlayerAvailableActionFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.nope.fishing.Poker_Player roomPlayerAvailableAction = 14;</code>
       */
      public message.PokerProto.Poker_PlayerOrBuilder getRoomPlayerAvailableActionOrBuilder(
          int index) {
        if (roomPlayerAvailableActionBuilder_ == null) {
          return roomPlayerAvailableAction_.get(index);  } else {
          return roomPlayerAvailableActionBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.nope.fishing.Poker_Player roomPlayerAvailableAction = 14;</code>
       */
      public java.util.List<? extends message.PokerProto.Poker_PlayerOrBuilder> 
           getRoomPlayerAvailableActionOrBuilderList() {
        if (roomPlayerAvailableActionBuilder_ != null) {
          return roomPlayerAvailableActionBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(roomPlayerAvailableAction_);
        }
      }
      /**
       * <code>repeated .com.nope.fishing.Poker_Player roomPlayerAvailableAction = 14;</code>
       */
      public message.PokerProto.Poker_Player.Builder addRoomPlayerAvailableActionBuilder() {
        return getRoomPlayerAvailableActionFieldBuilder().addBuilder(
            message.PokerProto.Poker_Player.getDefaultInstance());
      }
      /**
       * <code>repeated .com.nope.fishing.Poker_Player roomPlayerAvailableAction = 14;</code>
       */
      public message.PokerProto.Poker_Player.Builder addRoomPlayerAvailableActionBuilder(
          int index) {
        return getRoomPlayerAvailableActionFieldBuilder().addBuilder(
            index, message.PokerProto.Poker_Player.getDefaultInstance());
      }
      /**
       * <code>repeated .com.nope.fishing.Poker_Player roomPlayerAvailableAction = 14;</code>
       */
      public java.util.List<message.PokerProto.Poker_Player.Builder> 
           getRoomPlayerAvailableActionBuilderList() {
        return getRoomPlayerAvailableActionFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          message.PokerProto.Poker_Player, message.PokerProto.Poker_Player.Builder, message.PokerProto.Poker_PlayerOrBuilder> 
          getRoomPlayerAvailableActionFieldBuilder() {
        if (roomPlayerAvailableActionBuilder_ == null) {
          roomPlayerAvailableActionBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              message.PokerProto.Poker_Player, message.PokerProto.Poker_Player.Builder, message.PokerProto.Poker_PlayerOrBuilder>(
                  roomPlayerAvailableAction_,
                  ((bitField0_ & 0x00001000) == 0x00001000),
                  getParentForChildren(),
                  isClean());
          roomPlayerAvailableAction_ = null;
        }
        return roomPlayerAvailableActionBuilder_;
      }

      // repeated .com.nope.fishing.Poker_Cards roomAll52Cards = 15;
      private java.util.List<message.PokerProto.Poker_Cards> roomAll52Cards_ =
        java.util.Collections.emptyList();
      private void ensureRoomAll52CardsIsMutable() {
        if (!((bitField0_ & 0x00002000) == 0x00002000)) {
          roomAll52Cards_ = new java.util.ArrayList<message.PokerProto.Poker_Cards>(roomAll52Cards_);
          bitField0_ |= 0x00002000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          message.PokerProto.Poker_Cards, message.PokerProto.Poker_Cards.Builder, message.PokerProto.Poker_CardsOrBuilder> roomAll52CardsBuilder_;

      /**
       * <code>repeated .com.nope.fishing.Poker_Cards roomAll52Cards = 15;</code>
       */
      public java.util.List<message.PokerProto.Poker_Cards> getRoomAll52CardsList() {
        if (roomAll52CardsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(roomAll52Cards_);
        } else {
          return roomAll52CardsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.nope.fishing.Poker_Cards roomAll52Cards = 15;</code>
       */
      public int getRoomAll52CardsCount() {
        if (roomAll52CardsBuilder_ == null) {
          return roomAll52Cards_.size();
        } else {
          return roomAll52CardsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.nope.fishing.Poker_Cards roomAll52Cards = 15;</code>
       */
      public message.PokerProto.Poker_Cards getRoomAll52Cards(int index) {
        if (roomAll52CardsBuilder_ == null) {
          return roomAll52Cards_.get(index);
        } else {
          return roomAll52CardsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.nope.fishing.Poker_Cards roomAll52Cards = 15;</code>
       */
      public Builder setRoomAll52Cards(
          int index, message.PokerProto.Poker_Cards value) {
        if (roomAll52CardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRoomAll52CardsIsMutable();
          roomAll52Cards_.set(index, value);
          onChanged();
        } else {
          roomAll52CardsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.nope.fishing.Poker_Cards roomAll52Cards = 15;</code>
       */
      public Builder setRoomAll52Cards(
          int index, message.PokerProto.Poker_Cards.Builder builderForValue) {
        if (roomAll52CardsBuilder_ == null) {
          ensureRoomAll52CardsIsMutable();
          roomAll52Cards_.set(index, builderForValue.build());
          onChanged();
        } else {
          roomAll52CardsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.nope.fishing.Poker_Cards roomAll52Cards = 15;</code>
       */
      public Builder addRoomAll52Cards(message.PokerProto.Poker_Cards value) {
        if (roomAll52CardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRoomAll52CardsIsMutable();
          roomAll52Cards_.add(value);
          onChanged();
        } else {
          roomAll52CardsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.nope.fishing.Poker_Cards roomAll52Cards = 15;</code>
       */
      public Builder addRoomAll52Cards(
          int index, message.PokerProto.Poker_Cards value) {
        if (roomAll52CardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRoomAll52CardsIsMutable();
          roomAll52Cards_.add(index, value);
          onChanged();
        } else {
          roomAll52CardsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.nope.fishing.Poker_Cards roomAll52Cards = 15;</code>
       */
      public Builder addRoomAll52Cards(
          message.PokerProto.Poker_Cards.Builder builderForValue) {
        if (roomAll52CardsBuilder_ == null) {
          ensureRoomAll52CardsIsMutable();
          roomAll52Cards_.add(builderForValue.build());
          onChanged();
        } else {
          roomAll52CardsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.nope.fishing.Poker_Cards roomAll52Cards = 15;</code>
       */
      public Builder addRoomAll52Cards(
          int index, message.PokerProto.Poker_Cards.Builder builderForValue) {
        if (roomAll52CardsBuilder_ == null) {
          ensureRoomAll52CardsIsMutable();
          roomAll52Cards_.add(index, builderForValue.build());
          onChanged();
        } else {
          roomAll52CardsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.nope.fishing.Poker_Cards roomAll52Cards = 15;</code>
       */
      public Builder addAllRoomAll52Cards(
          java.lang.Iterable<? extends message.PokerProto.Poker_Cards> values) {
        if (roomAll52CardsBuilder_ == null) {
          ensureRoomAll52CardsIsMutable();
          super.addAll(values, roomAll52Cards_);
          onChanged();
        } else {
          roomAll52CardsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.nope.fishing.Poker_Cards roomAll52Cards = 15;</code>
       */
      public Builder clearRoomAll52Cards() {
        if (roomAll52CardsBuilder_ == null) {
          roomAll52Cards_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00002000);
          onChanged();
        } else {
          roomAll52CardsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.nope.fishing.Poker_Cards roomAll52Cards = 15;</code>
       */
      public Builder removeRoomAll52Cards(int index) {
        if (roomAll52CardsBuilder_ == null) {
          ensureRoomAll52CardsIsMutable();
          roomAll52Cards_.remove(index);
          onChanged();
        } else {
          roomAll52CardsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.nope.fishing.Poker_Cards roomAll52Cards = 15;</code>
       */
      public message.PokerProto.Poker_Cards.Builder getRoomAll52CardsBuilder(
          int index) {
        return getRoomAll52CardsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.nope.fishing.Poker_Cards roomAll52Cards = 15;</code>
       */
      public message.PokerProto.Poker_CardsOrBuilder getRoomAll52CardsOrBuilder(
          int index) {
        if (roomAll52CardsBuilder_ == null) {
          return roomAll52Cards_.get(index);  } else {
          return roomAll52CardsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.nope.fishing.Poker_Cards roomAll52Cards = 15;</code>
       */
      public java.util.List<? extends message.PokerProto.Poker_CardsOrBuilder> 
           getRoomAll52CardsOrBuilderList() {
        if (roomAll52CardsBuilder_ != null) {
          return roomAll52CardsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(roomAll52Cards_);
        }
      }
      /**
       * <code>repeated .com.nope.fishing.Poker_Cards roomAll52Cards = 15;</code>
       */
      public message.PokerProto.Poker_Cards.Builder addRoomAll52CardsBuilder() {
        return getRoomAll52CardsFieldBuilder().addBuilder(
            message.PokerProto.Poker_Cards.getDefaultInstance());
      }
      /**
       * <code>repeated .com.nope.fishing.Poker_Cards roomAll52Cards = 15;</code>
       */
      public message.PokerProto.Poker_Cards.Builder addRoomAll52CardsBuilder(
          int index) {
        return getRoomAll52CardsFieldBuilder().addBuilder(
            index, message.PokerProto.Poker_Cards.getDefaultInstance());
      }
      /**
       * <code>repeated .com.nope.fishing.Poker_Cards roomAll52Cards = 15;</code>
       */
      public java.util.List<message.PokerProto.Poker_Cards.Builder> 
           getRoomAll52CardsBuilderList() {
        return getRoomAll52CardsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          message.PokerProto.Poker_Cards, message.PokerProto.Poker_Cards.Builder, message.PokerProto.Poker_CardsOrBuilder> 
          getRoomAll52CardsFieldBuilder() {
        if (roomAll52CardsBuilder_ == null) {
          roomAll52CardsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              message.PokerProto.Poker_Cards, message.PokerProto.Poker_Cards.Builder, message.PokerProto.Poker_CardsOrBuilder>(
                  roomAll52Cards_,
                  ((bitField0_ & 0x00002000) == 0x00002000),
                  getParentForChildren(),
                  isClean());
          roomAll52Cards_ = null;
        }
        return roomAll52CardsBuilder_;
      }

      // repeated .com.nope.fishing.Poker_Cards roomCommunityCards = 16;
      private java.util.List<message.PokerProto.Poker_Cards> roomCommunityCards_ =
        java.util.Collections.emptyList();
      private void ensureRoomCommunityCardsIsMutable() {
        if (!((bitField0_ & 0x00004000) == 0x00004000)) {
          roomCommunityCards_ = new java.util.ArrayList<message.PokerProto.Poker_Cards>(roomCommunityCards_);
          bitField0_ |= 0x00004000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          message.PokerProto.Poker_Cards, message.PokerProto.Poker_Cards.Builder, message.PokerProto.Poker_CardsOrBuilder> roomCommunityCardsBuilder_;

      /**
       * <code>repeated .com.nope.fishing.Poker_Cards roomCommunityCards = 16;</code>
       */
      public java.util.List<message.PokerProto.Poker_Cards> getRoomCommunityCardsList() {
        if (roomCommunityCardsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(roomCommunityCards_);
        } else {
          return roomCommunityCardsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.nope.fishing.Poker_Cards roomCommunityCards = 16;</code>
       */
      public int getRoomCommunityCardsCount() {
        if (roomCommunityCardsBuilder_ == null) {
          return roomCommunityCards_.size();
        } else {
          return roomCommunityCardsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.nope.fishing.Poker_Cards roomCommunityCards = 16;</code>
       */
      public message.PokerProto.Poker_Cards getRoomCommunityCards(int index) {
        if (roomCommunityCardsBuilder_ == null) {
          return roomCommunityCards_.get(index);
        } else {
          return roomCommunityCardsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.nope.fishing.Poker_Cards roomCommunityCards = 16;</code>
       */
      public Builder setRoomCommunityCards(
          int index, message.PokerProto.Poker_Cards value) {
        if (roomCommunityCardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRoomCommunityCardsIsMutable();
          roomCommunityCards_.set(index, value);
          onChanged();
        } else {
          roomCommunityCardsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.nope.fishing.Poker_Cards roomCommunityCards = 16;</code>
       */
      public Builder setRoomCommunityCards(
          int index, message.PokerProto.Poker_Cards.Builder builderForValue) {
        if (roomCommunityCardsBuilder_ == null) {
          ensureRoomCommunityCardsIsMutable();
          roomCommunityCards_.set(index, builderForValue.build());
          onChanged();
        } else {
          roomCommunityCardsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.nope.fishing.Poker_Cards roomCommunityCards = 16;</code>
       */
      public Builder addRoomCommunityCards(message.PokerProto.Poker_Cards value) {
        if (roomCommunityCardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRoomCommunityCardsIsMutable();
          roomCommunityCards_.add(value);
          onChanged();
        } else {
          roomCommunityCardsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.nope.fishing.Poker_Cards roomCommunityCards = 16;</code>
       */
      public Builder addRoomCommunityCards(
          int index, message.PokerProto.Poker_Cards value) {
        if (roomCommunityCardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRoomCommunityCardsIsMutable();
          roomCommunityCards_.add(index, value);
          onChanged();
        } else {
          roomCommunityCardsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.nope.fishing.Poker_Cards roomCommunityCards = 16;</code>
       */
      public Builder addRoomCommunityCards(
          message.PokerProto.Poker_Cards.Builder builderForValue) {
        if (roomCommunityCardsBuilder_ == null) {
          ensureRoomCommunityCardsIsMutable();
          roomCommunityCards_.add(builderForValue.build());
          onChanged();
        } else {
          roomCommunityCardsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.nope.fishing.Poker_Cards roomCommunityCards = 16;</code>
       */
      public Builder addRoomCommunityCards(
          int index, message.PokerProto.Poker_Cards.Builder builderForValue) {
        if (roomCommunityCardsBuilder_ == null) {
          ensureRoomCommunityCardsIsMutable();
          roomCommunityCards_.add(index, builderForValue.build());
          onChanged();
        } else {
          roomCommunityCardsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.nope.fishing.Poker_Cards roomCommunityCards = 16;</code>
       */
      public Builder addAllRoomCommunityCards(
          java.lang.Iterable<? extends message.PokerProto.Poker_Cards> values) {
        if (roomCommunityCardsBuilder_ == null) {
          ensureRoomCommunityCardsIsMutable();
          super.addAll(values, roomCommunityCards_);
          onChanged();
        } else {
          roomCommunityCardsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.nope.fishing.Poker_Cards roomCommunityCards = 16;</code>
       */
      public Builder clearRoomCommunityCards() {
        if (roomCommunityCardsBuilder_ == null) {
          roomCommunityCards_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00004000);
          onChanged();
        } else {
          roomCommunityCardsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.nope.fishing.Poker_Cards roomCommunityCards = 16;</code>
       */
      public Builder removeRoomCommunityCards(int index) {
        if (roomCommunityCardsBuilder_ == null) {
          ensureRoomCommunityCardsIsMutable();
          roomCommunityCards_.remove(index);
          onChanged();
        } else {
          roomCommunityCardsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.nope.fishing.Poker_Cards roomCommunityCards = 16;</code>
       */
      public message.PokerProto.Poker_Cards.Builder getRoomCommunityCardsBuilder(
          int index) {
        return getRoomCommunityCardsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.nope.fishing.Poker_Cards roomCommunityCards = 16;</code>
       */
      public message.PokerProto.Poker_CardsOrBuilder getRoomCommunityCardsOrBuilder(
          int index) {
        if (roomCommunityCardsBuilder_ == null) {
          return roomCommunityCards_.get(index);  } else {
          return roomCommunityCardsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.nope.fishing.Poker_Cards roomCommunityCards = 16;</code>
       */
      public java.util.List<? extends message.PokerProto.Poker_CardsOrBuilder> 
           getRoomCommunityCardsOrBuilderList() {
        if (roomCommunityCardsBuilder_ != null) {
          return roomCommunityCardsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(roomCommunityCards_);
        }
      }
      /**
       * <code>repeated .com.nope.fishing.Poker_Cards roomCommunityCards = 16;</code>
       */
      public message.PokerProto.Poker_Cards.Builder addRoomCommunityCardsBuilder() {
        return getRoomCommunityCardsFieldBuilder().addBuilder(
            message.PokerProto.Poker_Cards.getDefaultInstance());
      }
      /**
       * <code>repeated .com.nope.fishing.Poker_Cards roomCommunityCards = 16;</code>
       */
      public message.PokerProto.Poker_Cards.Builder addRoomCommunityCardsBuilder(
          int index) {
        return getRoomCommunityCardsFieldBuilder().addBuilder(
            index, message.PokerProto.Poker_Cards.getDefaultInstance());
      }
      /**
       * <code>repeated .com.nope.fishing.Poker_Cards roomCommunityCards = 16;</code>
       */
      public java.util.List<message.PokerProto.Poker_Cards.Builder> 
           getRoomCommunityCardsBuilderList() {
        return getRoomCommunityCardsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          message.PokerProto.Poker_Cards, message.PokerProto.Poker_Cards.Builder, message.PokerProto.Poker_CardsOrBuilder> 
          getRoomCommunityCardsFieldBuilder() {
        if (roomCommunityCardsBuilder_ == null) {
          roomCommunityCardsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              message.PokerProto.Poker_Cards, message.PokerProto.Poker_Cards.Builder, message.PokerProto.Poker_CardsOrBuilder>(
                  roomCommunityCards_,
                  ((bitField0_ & 0x00004000) == 0x00004000),
                  getParentForChildren(),
                  isClean());
          roomCommunityCards_ = null;
        }
        return roomCommunityCardsBuilder_;
      }

      // repeated int64 roomCardStrenght = 20;
      private java.util.List<java.lang.Long> roomCardStrenght_ = java.util.Collections.emptyList();
      private void ensureRoomCardStrenghtIsMutable() {
        if (!((bitField0_ & 0x00008000) == 0x00008000)) {
          roomCardStrenght_ = new java.util.ArrayList<java.lang.Long>(roomCardStrenght_);
          bitField0_ |= 0x00008000;
         }
      }
      /**
       * <code>repeated int64 roomCardStrenght = 20;</code>
       */
      public java.util.List<java.lang.Long>
          getRoomCardStrenghtList() {
        return java.util.Collections.unmodifiableList(roomCardStrenght_);
      }
      /**
       * <code>repeated int64 roomCardStrenght = 20;</code>
       */
      public int getRoomCardStrenghtCount() {
        return roomCardStrenght_.size();
      }
      /**
       * <code>repeated int64 roomCardStrenght = 20;</code>
       */
      public long getRoomCardStrenght(int index) {
        return roomCardStrenght_.get(index);
      }
      /**
       * <code>repeated int64 roomCardStrenght = 20;</code>
       */
      public Builder setRoomCardStrenght(
          int index, long value) {
        ensureRoomCardStrenghtIsMutable();
        roomCardStrenght_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 roomCardStrenght = 20;</code>
       */
      public Builder addRoomCardStrenght(long value) {
        ensureRoomCardStrenghtIsMutable();
        roomCardStrenght_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 roomCardStrenght = 20;</code>
       */
      public Builder addAllRoomCardStrenght(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureRoomCardStrenghtIsMutable();
        super.addAll(values, roomCardStrenght_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 roomCardStrenght = 20;</code>
       */
      public Builder clearRoomCardStrenght() {
        roomCardStrenght_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00008000);
        onChanged();
        return this;
      }

      // repeated int32 roomJoinedGameIDFOLDER = 21;
      private java.util.List<java.lang.Integer> roomJoinedGameIDFOLDER_ = java.util.Collections.emptyList();
      private void ensureRoomJoinedGameIDFOLDERIsMutable() {
        if (!((bitField0_ & 0x00010000) == 0x00010000)) {
          roomJoinedGameIDFOLDER_ = new java.util.ArrayList<java.lang.Integer>(roomJoinedGameIDFOLDER_);
          bitField0_ |= 0x00010000;
         }
      }
      /**
       * <code>repeated int32 roomJoinedGameIDFOLDER = 21;</code>
       */
      public java.util.List<java.lang.Integer>
          getRoomJoinedGameIDFOLDERList() {
        return java.util.Collections.unmodifiableList(roomJoinedGameIDFOLDER_);
      }
      /**
       * <code>repeated int32 roomJoinedGameIDFOLDER = 21;</code>
       */
      public int getRoomJoinedGameIDFOLDERCount() {
        return roomJoinedGameIDFOLDER_.size();
      }
      /**
       * <code>repeated int32 roomJoinedGameIDFOLDER = 21;</code>
       */
      public int getRoomJoinedGameIDFOLDER(int index) {
        return roomJoinedGameIDFOLDER_.get(index);
      }
      /**
       * <code>repeated int32 roomJoinedGameIDFOLDER = 21;</code>
       */
      public Builder setRoomJoinedGameIDFOLDER(
          int index, int value) {
        ensureRoomJoinedGameIDFOLDERIsMutable();
        roomJoinedGameIDFOLDER_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 roomJoinedGameIDFOLDER = 21;</code>
       */
      public Builder addRoomJoinedGameIDFOLDER(int value) {
        ensureRoomJoinedGameIDFOLDERIsMutable();
        roomJoinedGameIDFOLDER_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 roomJoinedGameIDFOLDER = 21;</code>
       */
      public Builder addAllRoomJoinedGameIDFOLDER(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureRoomJoinedGameIDFOLDERIsMutable();
        super.addAll(values, roomJoinedGameIDFOLDER_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 roomJoinedGameIDFOLDER = 21;</code>
       */
      public Builder clearRoomJoinedGameIDFOLDER() {
        roomJoinedGameIDFOLDER_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00010000);
        onChanged();
        return this;
      }

      // repeated int32 roomJoinedGameIDOUTOFMONEY = 24;
      private java.util.List<java.lang.Integer> roomJoinedGameIDOUTOFMONEY_ = java.util.Collections.emptyList();
      private void ensureRoomJoinedGameIDOUTOFMONEYIsMutable() {
        if (!((bitField0_ & 0x00020000) == 0x00020000)) {
          roomJoinedGameIDOUTOFMONEY_ = new java.util.ArrayList<java.lang.Integer>(roomJoinedGameIDOUTOFMONEY_);
          bitField0_ |= 0x00020000;
         }
      }
      /**
       * <code>repeated int32 roomJoinedGameIDOUTOFMONEY = 24;</code>
       */
      public java.util.List<java.lang.Integer>
          getRoomJoinedGameIDOUTOFMONEYList() {
        return java.util.Collections.unmodifiableList(roomJoinedGameIDOUTOFMONEY_);
      }
      /**
       * <code>repeated int32 roomJoinedGameIDOUTOFMONEY = 24;</code>
       */
      public int getRoomJoinedGameIDOUTOFMONEYCount() {
        return roomJoinedGameIDOUTOFMONEY_.size();
      }
      /**
       * <code>repeated int32 roomJoinedGameIDOUTOFMONEY = 24;</code>
       */
      public int getRoomJoinedGameIDOUTOFMONEY(int index) {
        return roomJoinedGameIDOUTOFMONEY_.get(index);
      }
      /**
       * <code>repeated int32 roomJoinedGameIDOUTOFMONEY = 24;</code>
       */
      public Builder setRoomJoinedGameIDOUTOFMONEY(
          int index, int value) {
        ensureRoomJoinedGameIDOUTOFMONEYIsMutable();
        roomJoinedGameIDOUTOFMONEY_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 roomJoinedGameIDOUTOFMONEY = 24;</code>
       */
      public Builder addRoomJoinedGameIDOUTOFMONEY(int value) {
        ensureRoomJoinedGameIDOUTOFMONEYIsMutable();
        roomJoinedGameIDOUTOFMONEY_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 roomJoinedGameIDOUTOFMONEY = 24;</code>
       */
      public Builder addAllRoomJoinedGameIDOUTOFMONEY(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureRoomJoinedGameIDOUTOFMONEYIsMutable();
        super.addAll(values, roomJoinedGameIDOUTOFMONEY_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 roomJoinedGameIDOUTOFMONEY = 24;</code>
       */
      public Builder clearRoomJoinedGameIDOUTOFMONEY() {
        roomJoinedGameIDOUTOFMONEY_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00020000);
        onChanged();
        return this;
      }

      // repeated int32 userid = 3;
      private java.util.List<java.lang.Integer> userid_ = java.util.Collections.emptyList();
      private void ensureUseridIsMutable() {
        if (!((bitField0_ & 0x00040000) == 0x00040000)) {
          userid_ = new java.util.ArrayList<java.lang.Integer>(userid_);
          bitField0_ |= 0x00040000;
         }
      }
      /**
       * <code>repeated int32 userid = 3;</code>
       *
       * <pre>
       * list các userid trong room
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getUseridList() {
        return java.util.Collections.unmodifiableList(userid_);
      }
      /**
       * <code>repeated int32 userid = 3;</code>
       *
       * <pre>
       * list các userid trong room
       * </pre>
       */
      public int getUseridCount() {
        return userid_.size();
      }
      /**
       * <code>repeated int32 userid = 3;</code>
       *
       * <pre>
       * list các userid trong room
       * </pre>
       */
      public int getUserid(int index) {
        return userid_.get(index);
      }
      /**
       * <code>repeated int32 userid = 3;</code>
       *
       * <pre>
       * list các userid trong room
       * </pre>
       */
      public Builder setUserid(
          int index, int value) {
        ensureUseridIsMutable();
        userid_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 userid = 3;</code>
       *
       * <pre>
       * list các userid trong room
       * </pre>
       */
      public Builder addUserid(int value) {
        ensureUseridIsMutable();
        userid_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 userid = 3;</code>
       *
       * <pre>
       * list các userid trong room
       * </pre>
       */
      public Builder addAllUserid(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureUseridIsMutable();
        super.addAll(values, userid_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 userid = 3;</code>
       *
       * <pre>
       * list các userid trong room
       * </pre>
       */
      public Builder clearUserid() {
        userid_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00040000);
        onChanged();
        return this;
      }

      // repeated string username = 4;
      private com.google.protobuf.LazyStringList username_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureUsernameIsMutable() {
        if (!((bitField0_ & 0x00080000) == 0x00080000)) {
          username_ = new com.google.protobuf.LazyStringArrayList(username_);
          bitField0_ |= 0x00080000;
         }
      }
      /**
       * <code>repeated string username = 4;</code>
       *
       * <pre>
       * list các username trong room
       * </pre>
       */
      public java.util.List<java.lang.String>
          getUsernameList() {
        return java.util.Collections.unmodifiableList(username_);
      }
      /**
       * <code>repeated string username = 4;</code>
       *
       * <pre>
       * list các username trong room
       * </pre>
       */
      public int getUsernameCount() {
        return username_.size();
      }
      /**
       * <code>repeated string username = 4;</code>
       *
       * <pre>
       * list các username trong room
       * </pre>
       */
      public java.lang.String getUsername(int index) {
        return username_.get(index);
      }
      /**
       * <code>repeated string username = 4;</code>
       *
       * <pre>
       * list các username trong room
       * </pre>
       */
      public com.google.protobuf.ByteString
          getUsernameBytes(int index) {
        return username_.getByteString(index);
      }
      /**
       * <code>repeated string username = 4;</code>
       *
       * <pre>
       * list các username trong room
       * </pre>
       */
      public Builder setUsername(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureUsernameIsMutable();
        username_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string username = 4;</code>
       *
       * <pre>
       * list các username trong room
       * </pre>
       */
      public Builder addUsername(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureUsernameIsMutable();
        username_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string username = 4;</code>
       *
       * <pre>
       * list các username trong room
       * </pre>
       */
      public Builder addAllUsername(
          java.lang.Iterable<java.lang.String> values) {
        ensureUsernameIsMutable();
        super.addAll(values, username_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string username = 4;</code>
       *
       * <pre>
       * list các username trong room
       * </pre>
       */
      public Builder clearUsername() {
        username_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00080000);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string username = 4;</code>
       *
       * <pre>
       * list các username trong room
       * </pre>
       */
      public Builder addUsernameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureUsernameIsMutable();
        username_.add(value);
        onChanged();
        return this;
      }

      // repeated int64 usermoney = 5;
      private java.util.List<java.lang.Long> usermoney_ = java.util.Collections.emptyList();
      private void ensureUsermoneyIsMutable() {
        if (!((bitField0_ & 0x00100000) == 0x00100000)) {
          usermoney_ = new java.util.ArrayList<java.lang.Long>(usermoney_);
          bitField0_ |= 0x00100000;
         }
      }
      /**
       * <code>repeated int64 usermoney = 5;</code>
       *
       * <pre>
       * list các usermoney trong room
       * </pre>
       */
      public java.util.List<java.lang.Long>
          getUsermoneyList() {
        return java.util.Collections.unmodifiableList(usermoney_);
      }
      /**
       * <code>repeated int64 usermoney = 5;</code>
       *
       * <pre>
       * list các usermoney trong room
       * </pre>
       */
      public int getUsermoneyCount() {
        return usermoney_.size();
      }
      /**
       * <code>repeated int64 usermoney = 5;</code>
       *
       * <pre>
       * list các usermoney trong room
       * </pre>
       */
      public long getUsermoney(int index) {
        return usermoney_.get(index);
      }
      /**
       * <code>repeated int64 usermoney = 5;</code>
       *
       * <pre>
       * list các usermoney trong room
       * </pre>
       */
      public Builder setUsermoney(
          int index, long value) {
        ensureUsermoneyIsMutable();
        usermoney_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 usermoney = 5;</code>
       *
       * <pre>
       * list các usermoney trong room
       * </pre>
       */
      public Builder addUsermoney(long value) {
        ensureUsermoneyIsMutable();
        usermoney_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 usermoney = 5;</code>
       *
       * <pre>
       * list các usermoney trong room
       * </pre>
       */
      public Builder addAllUsermoney(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureUsermoneyIsMutable();
        super.addAll(values, usermoney_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 usermoney = 5;</code>
       *
       * <pre>
       * list các usermoney trong room
       * </pre>
       */
      public Builder clearUsermoney() {
        usermoney_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00100000);
        onChanged();
        return this;
      }

      // repeated bool userBeginTurn = 6;
      private java.util.List<java.lang.Boolean> userBeginTurn_ = java.util.Collections.emptyList();
      private void ensureUserBeginTurnIsMutable() {
        if (!((bitField0_ & 0x00200000) == 0x00200000)) {
          userBeginTurn_ = new java.util.ArrayList<java.lang.Boolean>(userBeginTurn_);
          bitField0_ |= 0x00200000;
         }
      }
      /**
       * <code>repeated bool userBeginTurn = 6;</code>
       */
      public java.util.List<java.lang.Boolean>
          getUserBeginTurnList() {
        return java.util.Collections.unmodifiableList(userBeginTurn_);
      }
      /**
       * <code>repeated bool userBeginTurn = 6;</code>
       */
      public int getUserBeginTurnCount() {
        return userBeginTurn_.size();
      }
      /**
       * <code>repeated bool userBeginTurn = 6;</code>
       */
      public boolean getUserBeginTurn(int index) {
        return userBeginTurn_.get(index);
      }
      /**
       * <code>repeated bool userBeginTurn = 6;</code>
       */
      public Builder setUserBeginTurn(
          int index, boolean value) {
        ensureUserBeginTurnIsMutable();
        userBeginTurn_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool userBeginTurn = 6;</code>
       */
      public Builder addUserBeginTurn(boolean value) {
        ensureUserBeginTurnIsMutable();
        userBeginTurn_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool userBeginTurn = 6;</code>
       */
      public Builder addAllUserBeginTurn(
          java.lang.Iterable<? extends java.lang.Boolean> values) {
        ensureUserBeginTurnIsMutable();
        super.addAll(values, userBeginTurn_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool userBeginTurn = 6;</code>
       */
      public Builder clearUserBeginTurn() {
        userBeginTurn_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00200000);
        onChanged();
        return this;
      }

      // repeated int32 userAction = 7;
      private java.util.List<java.lang.Integer> userAction_ = java.util.Collections.emptyList();
      private void ensureUserActionIsMutable() {
        if (!((bitField0_ & 0x00400000) == 0x00400000)) {
          userAction_ = new java.util.ArrayList<java.lang.Integer>(userAction_);
          bitField0_ |= 0x00400000;
         }
      }
      /**
       * <code>repeated int32 userAction = 7;</code>
       */
      public java.util.List<java.lang.Integer>
          getUserActionList() {
        return java.util.Collections.unmodifiableList(userAction_);
      }
      /**
       * <code>repeated int32 userAction = 7;</code>
       */
      public int getUserActionCount() {
        return userAction_.size();
      }
      /**
       * <code>repeated int32 userAction = 7;</code>
       */
      public int getUserAction(int index) {
        return userAction_.get(index);
      }
      /**
       * <code>repeated int32 userAction = 7;</code>
       */
      public Builder setUserAction(
          int index, int value) {
        ensureUserActionIsMutable();
        userAction_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 userAction = 7;</code>
       */
      public Builder addUserAction(int value) {
        ensureUserActionIsMutable();
        userAction_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 userAction = 7;</code>
       */
      public Builder addAllUserAction(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureUserActionIsMutable();
        super.addAll(values, userAction_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 userAction = 7;</code>
       */
      public Builder clearUserAction() {
        userAction_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00400000);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.nope.fishing.Poker_Response_RoomInfo)
    }

    static {
      defaultInstance = new Poker_Response_RoomInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.nope.fishing.Poker_Response_RoomInfo)
  }

  public interface Poker_Response_CountDownOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 roomId = 1;
    /**
     * <code>optional int32 roomId = 1;</code>
     */
    boolean hasRoomId();
    /**
     * <code>optional int32 roomId = 1;</code>
     */
    int getRoomId();

    // optional int64 roomCountdown = 2;
    /**
     * <code>optional int64 roomCountdown = 2;</code>
     */
    boolean hasRoomCountdown();
    /**
     * <code>optional int64 roomCountdown = 2;</code>
     */
    long getRoomCountdown();
  }
  /**
   * Protobuf type {@code com.nope.fishing.Poker_Response_CountDown}
   *
   * <pre>
   * Gửi liên tục nhiều =&gt; để riêng
   * </pre>
   */
  public static final class Poker_Response_CountDown extends
      com.google.protobuf.GeneratedMessage
      implements Poker_Response_CountDownOrBuilder {
    // Use Poker_Response_CountDown.newBuilder() to construct.
    private Poker_Response_CountDown(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Poker_Response_CountDown(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Poker_Response_CountDown defaultInstance;
    public static Poker_Response_CountDown getDefaultInstance() {
      return defaultInstance;
    }

    public Poker_Response_CountDown getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Poker_Response_CountDown(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              roomId_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              roomCountdown_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return message.PokerProto.internal_static_com_nope_fishing_Poker_Response_CountDown_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return message.PokerProto.internal_static_com_nope_fishing_Poker_Response_CountDown_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              message.PokerProto.Poker_Response_CountDown.class, message.PokerProto.Poker_Response_CountDown.Builder.class);
    }

    public static com.google.protobuf.Parser<Poker_Response_CountDown> PARSER =
        new com.google.protobuf.AbstractParser<Poker_Response_CountDown>() {
      public Poker_Response_CountDown parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Poker_Response_CountDown(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Poker_Response_CountDown> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 roomId = 1;
    public static final int ROOMID_FIELD_NUMBER = 1;
    private int roomId_;
    /**
     * <code>optional int32 roomId = 1;</code>
     */
    public boolean hasRoomId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 roomId = 1;</code>
     */
    public int getRoomId() {
      return roomId_;
    }

    // optional int64 roomCountdown = 2;
    public static final int ROOMCOUNTDOWN_FIELD_NUMBER = 2;
    private long roomCountdown_;
    /**
     * <code>optional int64 roomCountdown = 2;</code>
     */
    public boolean hasRoomCountdown() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int64 roomCountdown = 2;</code>
     */
    public long getRoomCountdown() {
      return roomCountdown_;
    }

    private void initFields() {
      roomId_ = 0;
      roomCountdown_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, roomId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, roomCountdown_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, roomId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, roomCountdown_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static message.PokerProto.Poker_Response_CountDown parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static message.PokerProto.Poker_Response_CountDown parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static message.PokerProto.Poker_Response_CountDown parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static message.PokerProto.Poker_Response_CountDown parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static message.PokerProto.Poker_Response_CountDown parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static message.PokerProto.Poker_Response_CountDown parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static message.PokerProto.Poker_Response_CountDown parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static message.PokerProto.Poker_Response_CountDown parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static message.PokerProto.Poker_Response_CountDown parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static message.PokerProto.Poker_Response_CountDown parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(message.PokerProto.Poker_Response_CountDown prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.nope.fishing.Poker_Response_CountDown}
     *
     * <pre>
     * Gửi liên tục nhiều =&gt; để riêng
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements message.PokerProto.Poker_Response_CountDownOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return message.PokerProto.internal_static_com_nope_fishing_Poker_Response_CountDown_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return message.PokerProto.internal_static_com_nope_fishing_Poker_Response_CountDown_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                message.PokerProto.Poker_Response_CountDown.class, message.PokerProto.Poker_Response_CountDown.Builder.class);
      }

      // Construct using message.PokerProto.Poker_Response_CountDown.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        roomId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        roomCountdown_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return message.PokerProto.internal_static_com_nope_fishing_Poker_Response_CountDown_descriptor;
      }

      public message.PokerProto.Poker_Response_CountDown getDefaultInstanceForType() {
        return message.PokerProto.Poker_Response_CountDown.getDefaultInstance();
      }

      public message.PokerProto.Poker_Response_CountDown build() {
        message.PokerProto.Poker_Response_CountDown result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public message.PokerProto.Poker_Response_CountDown buildPartial() {
        message.PokerProto.Poker_Response_CountDown result = new message.PokerProto.Poker_Response_CountDown(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.roomId_ = roomId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.roomCountdown_ = roomCountdown_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof message.PokerProto.Poker_Response_CountDown) {
          return mergeFrom((message.PokerProto.Poker_Response_CountDown)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(message.PokerProto.Poker_Response_CountDown other) {
        if (other == message.PokerProto.Poker_Response_CountDown.getDefaultInstance()) return this;
        if (other.hasRoomId()) {
          setRoomId(other.getRoomId());
        }
        if (other.hasRoomCountdown()) {
          setRoomCountdown(other.getRoomCountdown());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        message.PokerProto.Poker_Response_CountDown parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (message.PokerProto.Poker_Response_CountDown) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 roomId = 1;
      private int roomId_ ;
      /**
       * <code>optional int32 roomId = 1;</code>
       */
      public boolean hasRoomId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 roomId = 1;</code>
       */
      public int getRoomId() {
        return roomId_;
      }
      /**
       * <code>optional int32 roomId = 1;</code>
       */
      public Builder setRoomId(int value) {
        bitField0_ |= 0x00000001;
        roomId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 roomId = 1;</code>
       */
      public Builder clearRoomId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        roomId_ = 0;
        onChanged();
        return this;
      }

      // optional int64 roomCountdown = 2;
      private long roomCountdown_ ;
      /**
       * <code>optional int64 roomCountdown = 2;</code>
       */
      public boolean hasRoomCountdown() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int64 roomCountdown = 2;</code>
       */
      public long getRoomCountdown() {
        return roomCountdown_;
      }
      /**
       * <code>optional int64 roomCountdown = 2;</code>
       */
      public Builder setRoomCountdown(long value) {
        bitField0_ |= 0x00000002;
        roomCountdown_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 roomCountdown = 2;</code>
       */
      public Builder clearRoomCountdown() {
        bitField0_ = (bitField0_ & ~0x00000002);
        roomCountdown_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.nope.fishing.Poker_Response_CountDown)
    }

    static {
      defaultInstance = new Poker_Response_CountDown(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.nope.fishing.Poker_Response_CountDown)
  }

  public interface Poker_PlayerOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 playerID = 1;
    /**
     * <code>optional int32 playerID = 1;</code>
     */
    boolean hasPlayerID();
    /**
     * <code>optional int32 playerID = 1;</code>
     */
    int getPlayerID();

    // repeated .com.nope.fishing.Poker_Cards playerCardHolder = 2;
    /**
     * <code>repeated .com.nope.fishing.Poker_Cards playerCardHolder = 2;</code>
     */
    java.util.List<message.PokerProto.Poker_Cards> 
        getPlayerCardHolderList();
    /**
     * <code>repeated .com.nope.fishing.Poker_Cards playerCardHolder = 2;</code>
     */
    message.PokerProto.Poker_Cards getPlayerCardHolder(int index);
    /**
     * <code>repeated .com.nope.fishing.Poker_Cards playerCardHolder = 2;</code>
     */
    int getPlayerCardHolderCount();
    /**
     * <code>repeated .com.nope.fishing.Poker_Cards playerCardHolder = 2;</code>
     */
    java.util.List<? extends message.PokerProto.Poker_CardsOrBuilder> 
        getPlayerCardHolderOrBuilderList();
    /**
     * <code>repeated .com.nope.fishing.Poker_Cards playerCardHolder = 2;</code>
     */
    message.PokerProto.Poker_CardsOrBuilder getPlayerCardHolderOrBuilder(
        int index);

    // repeated int32 playerAvailableAction = 3;
    /**
     * <code>repeated int32 playerAvailableAction = 3;</code>
     */
    java.util.List<java.lang.Integer> getPlayerAvailableActionList();
    /**
     * <code>repeated int32 playerAvailableAction = 3;</code>
     */
    int getPlayerAvailableActionCount();
    /**
     * <code>repeated int32 playerAvailableAction = 3;</code>
     */
    int getPlayerAvailableAction(int index);
  }
  /**
   * Protobuf type {@code com.nope.fishing.Poker_Player}
   *
   * <pre>
   * --------------------------------------------------------------------------
   * </pre>
   */
  public static final class Poker_Player extends
      com.google.protobuf.GeneratedMessage
      implements Poker_PlayerOrBuilder {
    // Use Poker_Player.newBuilder() to construct.
    private Poker_Player(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Poker_Player(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Poker_Player defaultInstance;
    public static Poker_Player getDefaultInstance() {
      return defaultInstance;
    }

    public Poker_Player getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Poker_Player(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              playerID_ = input.readInt32();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                playerCardHolder_ = new java.util.ArrayList<message.PokerProto.Poker_Cards>();
                mutable_bitField0_ |= 0x00000002;
              }
              playerCardHolder_.add(input.readMessage(message.PokerProto.Poker_Cards.PARSER, extensionRegistry));
              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                playerAvailableAction_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              playerAvailableAction_.add(input.readInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                playerAvailableAction_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                playerAvailableAction_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          playerCardHolder_ = java.util.Collections.unmodifiableList(playerCardHolder_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          playerAvailableAction_ = java.util.Collections.unmodifiableList(playerAvailableAction_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return message.PokerProto.internal_static_com_nope_fishing_Poker_Player_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return message.PokerProto.internal_static_com_nope_fishing_Poker_Player_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              message.PokerProto.Poker_Player.class, message.PokerProto.Poker_Player.Builder.class);
    }

    public static com.google.protobuf.Parser<Poker_Player> PARSER =
        new com.google.protobuf.AbstractParser<Poker_Player>() {
      public Poker_Player parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Poker_Player(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Poker_Player> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 playerID = 1;
    public static final int PLAYERID_FIELD_NUMBER = 1;
    private int playerID_;
    /**
     * <code>optional int32 playerID = 1;</code>
     */
    public boolean hasPlayerID() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 playerID = 1;</code>
     */
    public int getPlayerID() {
      return playerID_;
    }

    // repeated .com.nope.fishing.Poker_Cards playerCardHolder = 2;
    public static final int PLAYERCARDHOLDER_FIELD_NUMBER = 2;
    private java.util.List<message.PokerProto.Poker_Cards> playerCardHolder_;
    /**
     * <code>repeated .com.nope.fishing.Poker_Cards playerCardHolder = 2;</code>
     */
    public java.util.List<message.PokerProto.Poker_Cards> getPlayerCardHolderList() {
      return playerCardHolder_;
    }
    /**
     * <code>repeated .com.nope.fishing.Poker_Cards playerCardHolder = 2;</code>
     */
    public java.util.List<? extends message.PokerProto.Poker_CardsOrBuilder> 
        getPlayerCardHolderOrBuilderList() {
      return playerCardHolder_;
    }
    /**
     * <code>repeated .com.nope.fishing.Poker_Cards playerCardHolder = 2;</code>
     */
    public int getPlayerCardHolderCount() {
      return playerCardHolder_.size();
    }
    /**
     * <code>repeated .com.nope.fishing.Poker_Cards playerCardHolder = 2;</code>
     */
    public message.PokerProto.Poker_Cards getPlayerCardHolder(int index) {
      return playerCardHolder_.get(index);
    }
    /**
     * <code>repeated .com.nope.fishing.Poker_Cards playerCardHolder = 2;</code>
     */
    public message.PokerProto.Poker_CardsOrBuilder getPlayerCardHolderOrBuilder(
        int index) {
      return playerCardHolder_.get(index);
    }

    // repeated int32 playerAvailableAction = 3;
    public static final int PLAYERAVAILABLEACTION_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Integer> playerAvailableAction_;
    /**
     * <code>repeated int32 playerAvailableAction = 3;</code>
     */
    public java.util.List<java.lang.Integer>
        getPlayerAvailableActionList() {
      return playerAvailableAction_;
    }
    /**
     * <code>repeated int32 playerAvailableAction = 3;</code>
     */
    public int getPlayerAvailableActionCount() {
      return playerAvailableAction_.size();
    }
    /**
     * <code>repeated int32 playerAvailableAction = 3;</code>
     */
    public int getPlayerAvailableAction(int index) {
      return playerAvailableAction_.get(index);
    }

    private void initFields() {
      playerID_ = 0;
      playerCardHolder_ = java.util.Collections.emptyList();
      playerAvailableAction_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, playerID_);
      }
      for (int i = 0; i < playerCardHolder_.size(); i++) {
        output.writeMessage(2, playerCardHolder_.get(i));
      }
      for (int i = 0; i < playerAvailableAction_.size(); i++) {
        output.writeInt32(3, playerAvailableAction_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, playerID_);
      }
      for (int i = 0; i < playerCardHolder_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, playerCardHolder_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < playerAvailableAction_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(playerAvailableAction_.get(i));
        }
        size += dataSize;
        size += 1 * getPlayerAvailableActionList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static message.PokerProto.Poker_Player parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static message.PokerProto.Poker_Player parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static message.PokerProto.Poker_Player parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static message.PokerProto.Poker_Player parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static message.PokerProto.Poker_Player parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static message.PokerProto.Poker_Player parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static message.PokerProto.Poker_Player parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static message.PokerProto.Poker_Player parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static message.PokerProto.Poker_Player parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static message.PokerProto.Poker_Player parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(message.PokerProto.Poker_Player prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.nope.fishing.Poker_Player}
     *
     * <pre>
     * --------------------------------------------------------------------------
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements message.PokerProto.Poker_PlayerOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return message.PokerProto.internal_static_com_nope_fishing_Poker_Player_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return message.PokerProto.internal_static_com_nope_fishing_Poker_Player_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                message.PokerProto.Poker_Player.class, message.PokerProto.Poker_Player.Builder.class);
      }

      // Construct using message.PokerProto.Poker_Player.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getPlayerCardHolderFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        playerID_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (playerCardHolderBuilder_ == null) {
          playerCardHolder_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          playerCardHolderBuilder_.clear();
        }
        playerAvailableAction_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return message.PokerProto.internal_static_com_nope_fishing_Poker_Player_descriptor;
      }

      public message.PokerProto.Poker_Player getDefaultInstanceForType() {
        return message.PokerProto.Poker_Player.getDefaultInstance();
      }

      public message.PokerProto.Poker_Player build() {
        message.PokerProto.Poker_Player result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public message.PokerProto.Poker_Player buildPartial() {
        message.PokerProto.Poker_Player result = new message.PokerProto.Poker_Player(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.playerID_ = playerID_;
        if (playerCardHolderBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            playerCardHolder_ = java.util.Collections.unmodifiableList(playerCardHolder_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.playerCardHolder_ = playerCardHolder_;
        } else {
          result.playerCardHolder_ = playerCardHolderBuilder_.build();
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          playerAvailableAction_ = java.util.Collections.unmodifiableList(playerAvailableAction_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.playerAvailableAction_ = playerAvailableAction_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof message.PokerProto.Poker_Player) {
          return mergeFrom((message.PokerProto.Poker_Player)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(message.PokerProto.Poker_Player other) {
        if (other == message.PokerProto.Poker_Player.getDefaultInstance()) return this;
        if (other.hasPlayerID()) {
          setPlayerID(other.getPlayerID());
        }
        if (playerCardHolderBuilder_ == null) {
          if (!other.playerCardHolder_.isEmpty()) {
            if (playerCardHolder_.isEmpty()) {
              playerCardHolder_ = other.playerCardHolder_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensurePlayerCardHolderIsMutable();
              playerCardHolder_.addAll(other.playerCardHolder_);
            }
            onChanged();
          }
        } else {
          if (!other.playerCardHolder_.isEmpty()) {
            if (playerCardHolderBuilder_.isEmpty()) {
              playerCardHolderBuilder_.dispose();
              playerCardHolderBuilder_ = null;
              playerCardHolder_ = other.playerCardHolder_;
              bitField0_ = (bitField0_ & ~0x00000002);
              playerCardHolderBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPlayerCardHolderFieldBuilder() : null;
            } else {
              playerCardHolderBuilder_.addAllMessages(other.playerCardHolder_);
            }
          }
        }
        if (!other.playerAvailableAction_.isEmpty()) {
          if (playerAvailableAction_.isEmpty()) {
            playerAvailableAction_ = other.playerAvailableAction_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensurePlayerAvailableActionIsMutable();
            playerAvailableAction_.addAll(other.playerAvailableAction_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        message.PokerProto.Poker_Player parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (message.PokerProto.Poker_Player) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 playerID = 1;
      private int playerID_ ;
      /**
       * <code>optional int32 playerID = 1;</code>
       */
      public boolean hasPlayerID() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 playerID = 1;</code>
       */
      public int getPlayerID() {
        return playerID_;
      }
      /**
       * <code>optional int32 playerID = 1;</code>
       */
      public Builder setPlayerID(int value) {
        bitField0_ |= 0x00000001;
        playerID_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 playerID = 1;</code>
       */
      public Builder clearPlayerID() {
        bitField0_ = (bitField0_ & ~0x00000001);
        playerID_ = 0;
        onChanged();
        return this;
      }

      // repeated .com.nope.fishing.Poker_Cards playerCardHolder = 2;
      private java.util.List<message.PokerProto.Poker_Cards> playerCardHolder_ =
        java.util.Collections.emptyList();
      private void ensurePlayerCardHolderIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          playerCardHolder_ = new java.util.ArrayList<message.PokerProto.Poker_Cards>(playerCardHolder_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          message.PokerProto.Poker_Cards, message.PokerProto.Poker_Cards.Builder, message.PokerProto.Poker_CardsOrBuilder> playerCardHolderBuilder_;

      /**
       * <code>repeated .com.nope.fishing.Poker_Cards playerCardHolder = 2;</code>
       */
      public java.util.List<message.PokerProto.Poker_Cards> getPlayerCardHolderList() {
        if (playerCardHolderBuilder_ == null) {
          return java.util.Collections.unmodifiableList(playerCardHolder_);
        } else {
          return playerCardHolderBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.nope.fishing.Poker_Cards playerCardHolder = 2;</code>
       */
      public int getPlayerCardHolderCount() {
        if (playerCardHolderBuilder_ == null) {
          return playerCardHolder_.size();
        } else {
          return playerCardHolderBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.nope.fishing.Poker_Cards playerCardHolder = 2;</code>
       */
      public message.PokerProto.Poker_Cards getPlayerCardHolder(int index) {
        if (playerCardHolderBuilder_ == null) {
          return playerCardHolder_.get(index);
        } else {
          return playerCardHolderBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.nope.fishing.Poker_Cards playerCardHolder = 2;</code>
       */
      public Builder setPlayerCardHolder(
          int index, message.PokerProto.Poker_Cards value) {
        if (playerCardHolderBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayerCardHolderIsMutable();
          playerCardHolder_.set(index, value);
          onChanged();
        } else {
          playerCardHolderBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.nope.fishing.Poker_Cards playerCardHolder = 2;</code>
       */
      public Builder setPlayerCardHolder(
          int index, message.PokerProto.Poker_Cards.Builder builderForValue) {
        if (playerCardHolderBuilder_ == null) {
          ensurePlayerCardHolderIsMutable();
          playerCardHolder_.set(index, builderForValue.build());
          onChanged();
        } else {
          playerCardHolderBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.nope.fishing.Poker_Cards playerCardHolder = 2;</code>
       */
      public Builder addPlayerCardHolder(message.PokerProto.Poker_Cards value) {
        if (playerCardHolderBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayerCardHolderIsMutable();
          playerCardHolder_.add(value);
          onChanged();
        } else {
          playerCardHolderBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.nope.fishing.Poker_Cards playerCardHolder = 2;</code>
       */
      public Builder addPlayerCardHolder(
          int index, message.PokerProto.Poker_Cards value) {
        if (playerCardHolderBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayerCardHolderIsMutable();
          playerCardHolder_.add(index, value);
          onChanged();
        } else {
          playerCardHolderBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.nope.fishing.Poker_Cards playerCardHolder = 2;</code>
       */
      public Builder addPlayerCardHolder(
          message.PokerProto.Poker_Cards.Builder builderForValue) {
        if (playerCardHolderBuilder_ == null) {
          ensurePlayerCardHolderIsMutable();
          playerCardHolder_.add(builderForValue.build());
          onChanged();
        } else {
          playerCardHolderBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.nope.fishing.Poker_Cards playerCardHolder = 2;</code>
       */
      public Builder addPlayerCardHolder(
          int index, message.PokerProto.Poker_Cards.Builder builderForValue) {
        if (playerCardHolderBuilder_ == null) {
          ensurePlayerCardHolderIsMutable();
          playerCardHolder_.add(index, builderForValue.build());
          onChanged();
        } else {
          playerCardHolderBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.nope.fishing.Poker_Cards playerCardHolder = 2;</code>
       */
      public Builder addAllPlayerCardHolder(
          java.lang.Iterable<? extends message.PokerProto.Poker_Cards> values) {
        if (playerCardHolderBuilder_ == null) {
          ensurePlayerCardHolderIsMutable();
          super.addAll(values, playerCardHolder_);
          onChanged();
        } else {
          playerCardHolderBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.nope.fishing.Poker_Cards playerCardHolder = 2;</code>
       */
      public Builder clearPlayerCardHolder() {
        if (playerCardHolderBuilder_ == null) {
          playerCardHolder_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          playerCardHolderBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.nope.fishing.Poker_Cards playerCardHolder = 2;</code>
       */
      public Builder removePlayerCardHolder(int index) {
        if (playerCardHolderBuilder_ == null) {
          ensurePlayerCardHolderIsMutable();
          playerCardHolder_.remove(index);
          onChanged();
        } else {
          playerCardHolderBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.nope.fishing.Poker_Cards playerCardHolder = 2;</code>
       */
      public message.PokerProto.Poker_Cards.Builder getPlayerCardHolderBuilder(
          int index) {
        return getPlayerCardHolderFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.nope.fishing.Poker_Cards playerCardHolder = 2;</code>
       */
      public message.PokerProto.Poker_CardsOrBuilder getPlayerCardHolderOrBuilder(
          int index) {
        if (playerCardHolderBuilder_ == null) {
          return playerCardHolder_.get(index);  } else {
          return playerCardHolderBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.nope.fishing.Poker_Cards playerCardHolder = 2;</code>
       */
      public java.util.List<? extends message.PokerProto.Poker_CardsOrBuilder> 
           getPlayerCardHolderOrBuilderList() {
        if (playerCardHolderBuilder_ != null) {
          return playerCardHolderBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(playerCardHolder_);
        }
      }
      /**
       * <code>repeated .com.nope.fishing.Poker_Cards playerCardHolder = 2;</code>
       */
      public message.PokerProto.Poker_Cards.Builder addPlayerCardHolderBuilder() {
        return getPlayerCardHolderFieldBuilder().addBuilder(
            message.PokerProto.Poker_Cards.getDefaultInstance());
      }
      /**
       * <code>repeated .com.nope.fishing.Poker_Cards playerCardHolder = 2;</code>
       */
      public message.PokerProto.Poker_Cards.Builder addPlayerCardHolderBuilder(
          int index) {
        return getPlayerCardHolderFieldBuilder().addBuilder(
            index, message.PokerProto.Poker_Cards.getDefaultInstance());
      }
      /**
       * <code>repeated .com.nope.fishing.Poker_Cards playerCardHolder = 2;</code>
       */
      public java.util.List<message.PokerProto.Poker_Cards.Builder> 
           getPlayerCardHolderBuilderList() {
        return getPlayerCardHolderFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          message.PokerProto.Poker_Cards, message.PokerProto.Poker_Cards.Builder, message.PokerProto.Poker_CardsOrBuilder> 
          getPlayerCardHolderFieldBuilder() {
        if (playerCardHolderBuilder_ == null) {
          playerCardHolderBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              message.PokerProto.Poker_Cards, message.PokerProto.Poker_Cards.Builder, message.PokerProto.Poker_CardsOrBuilder>(
                  playerCardHolder_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          playerCardHolder_ = null;
        }
        return playerCardHolderBuilder_;
      }

      // repeated int32 playerAvailableAction = 3;
      private java.util.List<java.lang.Integer> playerAvailableAction_ = java.util.Collections.emptyList();
      private void ensurePlayerAvailableActionIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          playerAvailableAction_ = new java.util.ArrayList<java.lang.Integer>(playerAvailableAction_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated int32 playerAvailableAction = 3;</code>
       */
      public java.util.List<java.lang.Integer>
          getPlayerAvailableActionList() {
        return java.util.Collections.unmodifiableList(playerAvailableAction_);
      }
      /**
       * <code>repeated int32 playerAvailableAction = 3;</code>
       */
      public int getPlayerAvailableActionCount() {
        return playerAvailableAction_.size();
      }
      /**
       * <code>repeated int32 playerAvailableAction = 3;</code>
       */
      public int getPlayerAvailableAction(int index) {
        return playerAvailableAction_.get(index);
      }
      /**
       * <code>repeated int32 playerAvailableAction = 3;</code>
       */
      public Builder setPlayerAvailableAction(
          int index, int value) {
        ensurePlayerAvailableActionIsMutable();
        playerAvailableAction_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 playerAvailableAction = 3;</code>
       */
      public Builder addPlayerAvailableAction(int value) {
        ensurePlayerAvailableActionIsMutable();
        playerAvailableAction_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 playerAvailableAction = 3;</code>
       */
      public Builder addAllPlayerAvailableAction(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensurePlayerAvailableActionIsMutable();
        super.addAll(values, playerAvailableAction_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 playerAvailableAction = 3;</code>
       */
      public Builder clearPlayerAvailableAction() {
        playerAvailableAction_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.nope.fishing.Poker_Player)
    }

    static {
      defaultInstance = new Poker_Player(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.nope.fishing.Poker_Player)
  }

  public interface Poker_CardsOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string cardnumber = 1;
    /**
     * <code>optional string cardnumber = 1;</code>
     */
    boolean hasCardnumber();
    /**
     * <code>optional string cardnumber = 1;</code>
     */
    java.lang.String getCardnumber();
    /**
     * <code>optional string cardnumber = 1;</code>
     */
    com.google.protobuf.ByteString
        getCardnumberBytes();

    // optional string cardtype = 2;
    /**
     * <code>optional string cardtype = 2;</code>
     */
    boolean hasCardtype();
    /**
     * <code>optional string cardtype = 2;</code>
     */
    java.lang.String getCardtype();
    /**
     * <code>optional string cardtype = 2;</code>
     */
    com.google.protobuf.ByteString
        getCardtypeBytes();
  }
  /**
   * Protobuf type {@code com.nope.fishing.Poker_Cards}
   */
  public static final class Poker_Cards extends
      com.google.protobuf.GeneratedMessage
      implements Poker_CardsOrBuilder {
    // Use Poker_Cards.newBuilder() to construct.
    private Poker_Cards(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Poker_Cards(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Poker_Cards defaultInstance;
    public static Poker_Cards getDefaultInstance() {
      return defaultInstance;
    }

    public Poker_Cards getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Poker_Cards(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              cardnumber_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              cardtype_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return message.PokerProto.internal_static_com_nope_fishing_Poker_Cards_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return message.PokerProto.internal_static_com_nope_fishing_Poker_Cards_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              message.PokerProto.Poker_Cards.class, message.PokerProto.Poker_Cards.Builder.class);
    }

    public static com.google.protobuf.Parser<Poker_Cards> PARSER =
        new com.google.protobuf.AbstractParser<Poker_Cards>() {
      public Poker_Cards parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Poker_Cards(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Poker_Cards> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string cardnumber = 1;
    public static final int CARDNUMBER_FIELD_NUMBER = 1;
    private java.lang.Object cardnumber_;
    /**
     * <code>optional string cardnumber = 1;</code>
     */
    public boolean hasCardnumber() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string cardnumber = 1;</code>
     */
    public java.lang.String getCardnumber() {
      java.lang.Object ref = cardnumber_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          cardnumber_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string cardnumber = 1;</code>
     */
    public com.google.protobuf.ByteString
        getCardnumberBytes() {
      java.lang.Object ref = cardnumber_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        cardnumber_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string cardtype = 2;
    public static final int CARDTYPE_FIELD_NUMBER = 2;
    private java.lang.Object cardtype_;
    /**
     * <code>optional string cardtype = 2;</code>
     */
    public boolean hasCardtype() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string cardtype = 2;</code>
     */
    public java.lang.String getCardtype() {
      java.lang.Object ref = cardtype_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          cardtype_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string cardtype = 2;</code>
     */
    public com.google.protobuf.ByteString
        getCardtypeBytes() {
      java.lang.Object ref = cardtype_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        cardtype_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      cardnumber_ = "";
      cardtype_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getCardnumberBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getCardtypeBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getCardnumberBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getCardtypeBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static message.PokerProto.Poker_Cards parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static message.PokerProto.Poker_Cards parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static message.PokerProto.Poker_Cards parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static message.PokerProto.Poker_Cards parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static message.PokerProto.Poker_Cards parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static message.PokerProto.Poker_Cards parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static message.PokerProto.Poker_Cards parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static message.PokerProto.Poker_Cards parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static message.PokerProto.Poker_Cards parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static message.PokerProto.Poker_Cards parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(message.PokerProto.Poker_Cards prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.nope.fishing.Poker_Cards}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements message.PokerProto.Poker_CardsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return message.PokerProto.internal_static_com_nope_fishing_Poker_Cards_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return message.PokerProto.internal_static_com_nope_fishing_Poker_Cards_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                message.PokerProto.Poker_Cards.class, message.PokerProto.Poker_Cards.Builder.class);
      }

      // Construct using message.PokerProto.Poker_Cards.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        cardnumber_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        cardtype_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return message.PokerProto.internal_static_com_nope_fishing_Poker_Cards_descriptor;
      }

      public message.PokerProto.Poker_Cards getDefaultInstanceForType() {
        return message.PokerProto.Poker_Cards.getDefaultInstance();
      }

      public message.PokerProto.Poker_Cards build() {
        message.PokerProto.Poker_Cards result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public message.PokerProto.Poker_Cards buildPartial() {
        message.PokerProto.Poker_Cards result = new message.PokerProto.Poker_Cards(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.cardnumber_ = cardnumber_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.cardtype_ = cardtype_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof message.PokerProto.Poker_Cards) {
          return mergeFrom((message.PokerProto.Poker_Cards)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(message.PokerProto.Poker_Cards other) {
        if (other == message.PokerProto.Poker_Cards.getDefaultInstance()) return this;
        if (other.hasCardnumber()) {
          bitField0_ |= 0x00000001;
          cardnumber_ = other.cardnumber_;
          onChanged();
        }
        if (other.hasCardtype()) {
          bitField0_ |= 0x00000002;
          cardtype_ = other.cardtype_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        message.PokerProto.Poker_Cards parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (message.PokerProto.Poker_Cards) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string cardnumber = 1;
      private java.lang.Object cardnumber_ = "";
      /**
       * <code>optional string cardnumber = 1;</code>
       */
      public boolean hasCardnumber() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string cardnumber = 1;</code>
       */
      public java.lang.String getCardnumber() {
        java.lang.Object ref = cardnumber_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          cardnumber_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string cardnumber = 1;</code>
       */
      public com.google.protobuf.ByteString
          getCardnumberBytes() {
        java.lang.Object ref = cardnumber_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          cardnumber_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string cardnumber = 1;</code>
       */
      public Builder setCardnumber(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        cardnumber_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string cardnumber = 1;</code>
       */
      public Builder clearCardnumber() {
        bitField0_ = (bitField0_ & ~0x00000001);
        cardnumber_ = getDefaultInstance().getCardnumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional string cardnumber = 1;</code>
       */
      public Builder setCardnumberBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        cardnumber_ = value;
        onChanged();
        return this;
      }

      // optional string cardtype = 2;
      private java.lang.Object cardtype_ = "";
      /**
       * <code>optional string cardtype = 2;</code>
       */
      public boolean hasCardtype() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string cardtype = 2;</code>
       */
      public java.lang.String getCardtype() {
        java.lang.Object ref = cardtype_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          cardtype_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string cardtype = 2;</code>
       */
      public com.google.protobuf.ByteString
          getCardtypeBytes() {
        java.lang.Object ref = cardtype_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          cardtype_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string cardtype = 2;</code>
       */
      public Builder setCardtype(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        cardtype_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string cardtype = 2;</code>
       */
      public Builder clearCardtype() {
        bitField0_ = (bitField0_ & ~0x00000002);
        cardtype_ = getDefaultInstance().getCardtype();
        onChanged();
        return this;
      }
      /**
       * <code>optional string cardtype = 2;</code>
       */
      public Builder setCardtypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        cardtype_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.nope.fishing.Poker_Cards)
    }

    static {
      defaultInstance = new Poker_Cards(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.nope.fishing.Poker_Cards)
  }

  public interface Poker_TurnOverOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 roomid = 1;
    /**
     * <code>optional int32 roomid = 1;</code>
     */
    boolean hasRoomid();
    /**
     * <code>optional int32 roomid = 1;</code>
     */
    int getRoomid();

    // optional int32 playerid = 2;
    /**
     * <code>optional int32 playerid = 2;</code>
     */
    boolean hasPlayerid();
    /**
     * <code>optional int32 playerid = 2;</code>
     */
    int getPlayerid();

    // optional int32 action = 3;
    /**
     * <code>optional int32 action = 3;</code>
     */
    boolean hasAction();
    /**
     * <code>optional int32 action = 3;</code>
     */
    int getAction();

    // optional int64 currentMoney_Phase = 4;
    /**
     * <code>optional int64 currentMoney_Phase = 4;</code>
     */
    boolean hasCurrentMoneyPhase();
    /**
     * <code>optional int64 currentMoney_Phase = 4;</code>
     */
    long getCurrentMoneyPhase();
  }
  /**
   * Protobuf type {@code com.nope.fishing.Poker_TurnOver}
   *
   * <pre>
   * ---------------------------------------------------------------------------
   * NHẬN THÔNG TIN THÔNG BÁO TỪ CLIENT
   * </pre>
   */
  public static final class Poker_TurnOver extends
      com.google.protobuf.GeneratedMessage
      implements Poker_TurnOverOrBuilder {
    // Use Poker_TurnOver.newBuilder() to construct.
    private Poker_TurnOver(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Poker_TurnOver(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Poker_TurnOver defaultInstance;
    public static Poker_TurnOver getDefaultInstance() {
      return defaultInstance;
    }

    public Poker_TurnOver getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Poker_TurnOver(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              roomid_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              playerid_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              action_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              currentMoneyPhase_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return message.PokerProto.internal_static_com_nope_fishing_Poker_TurnOver_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return message.PokerProto.internal_static_com_nope_fishing_Poker_TurnOver_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              message.PokerProto.Poker_TurnOver.class, message.PokerProto.Poker_TurnOver.Builder.class);
    }

    public static com.google.protobuf.Parser<Poker_TurnOver> PARSER =
        new com.google.protobuf.AbstractParser<Poker_TurnOver>() {
      public Poker_TurnOver parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Poker_TurnOver(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Poker_TurnOver> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 roomid = 1;
    public static final int ROOMID_FIELD_NUMBER = 1;
    private int roomid_;
    /**
     * <code>optional int32 roomid = 1;</code>
     */
    public boolean hasRoomid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 roomid = 1;</code>
     */
    public int getRoomid() {
      return roomid_;
    }

    // optional int32 playerid = 2;
    public static final int PLAYERID_FIELD_NUMBER = 2;
    private int playerid_;
    /**
     * <code>optional int32 playerid = 2;</code>
     */
    public boolean hasPlayerid() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 playerid = 2;</code>
     */
    public int getPlayerid() {
      return playerid_;
    }

    // optional int32 action = 3;
    public static final int ACTION_FIELD_NUMBER = 3;
    private int action_;
    /**
     * <code>optional int32 action = 3;</code>
     */
    public boolean hasAction() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 action = 3;</code>
     */
    public int getAction() {
      return action_;
    }

    // optional int64 currentMoney_Phase = 4;
    public static final int CURRENTMONEY_PHASE_FIELD_NUMBER = 4;
    private long currentMoneyPhase_;
    /**
     * <code>optional int64 currentMoney_Phase = 4;</code>
     */
    public boolean hasCurrentMoneyPhase() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int64 currentMoney_Phase = 4;</code>
     */
    public long getCurrentMoneyPhase() {
      return currentMoneyPhase_;
    }

    private void initFields() {
      roomid_ = 0;
      playerid_ = 0;
      action_ = 0;
      currentMoneyPhase_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, roomid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, playerid_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, action_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt64(4, currentMoneyPhase_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, roomid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, playerid_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, action_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, currentMoneyPhase_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static message.PokerProto.Poker_TurnOver parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static message.PokerProto.Poker_TurnOver parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static message.PokerProto.Poker_TurnOver parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static message.PokerProto.Poker_TurnOver parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static message.PokerProto.Poker_TurnOver parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static message.PokerProto.Poker_TurnOver parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static message.PokerProto.Poker_TurnOver parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static message.PokerProto.Poker_TurnOver parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static message.PokerProto.Poker_TurnOver parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static message.PokerProto.Poker_TurnOver parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(message.PokerProto.Poker_TurnOver prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.nope.fishing.Poker_TurnOver}
     *
     * <pre>
     * ---------------------------------------------------------------------------
     * NHẬN THÔNG TIN THÔNG BÁO TỪ CLIENT
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements message.PokerProto.Poker_TurnOverOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return message.PokerProto.internal_static_com_nope_fishing_Poker_TurnOver_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return message.PokerProto.internal_static_com_nope_fishing_Poker_TurnOver_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                message.PokerProto.Poker_TurnOver.class, message.PokerProto.Poker_TurnOver.Builder.class);
      }

      // Construct using message.PokerProto.Poker_TurnOver.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        roomid_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        playerid_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        action_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        currentMoneyPhase_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return message.PokerProto.internal_static_com_nope_fishing_Poker_TurnOver_descriptor;
      }

      public message.PokerProto.Poker_TurnOver getDefaultInstanceForType() {
        return message.PokerProto.Poker_TurnOver.getDefaultInstance();
      }

      public message.PokerProto.Poker_TurnOver build() {
        message.PokerProto.Poker_TurnOver result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public message.PokerProto.Poker_TurnOver buildPartial() {
        message.PokerProto.Poker_TurnOver result = new message.PokerProto.Poker_TurnOver(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.roomid_ = roomid_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.playerid_ = playerid_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.action_ = action_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.currentMoneyPhase_ = currentMoneyPhase_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof message.PokerProto.Poker_TurnOver) {
          return mergeFrom((message.PokerProto.Poker_TurnOver)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(message.PokerProto.Poker_TurnOver other) {
        if (other == message.PokerProto.Poker_TurnOver.getDefaultInstance()) return this;
        if (other.hasRoomid()) {
          setRoomid(other.getRoomid());
        }
        if (other.hasPlayerid()) {
          setPlayerid(other.getPlayerid());
        }
        if (other.hasAction()) {
          setAction(other.getAction());
        }
        if (other.hasCurrentMoneyPhase()) {
          setCurrentMoneyPhase(other.getCurrentMoneyPhase());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        message.PokerProto.Poker_TurnOver parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (message.PokerProto.Poker_TurnOver) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 roomid = 1;
      private int roomid_ ;
      /**
       * <code>optional int32 roomid = 1;</code>
       */
      public boolean hasRoomid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 roomid = 1;</code>
       */
      public int getRoomid() {
        return roomid_;
      }
      /**
       * <code>optional int32 roomid = 1;</code>
       */
      public Builder setRoomid(int value) {
        bitField0_ |= 0x00000001;
        roomid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 roomid = 1;</code>
       */
      public Builder clearRoomid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        roomid_ = 0;
        onChanged();
        return this;
      }

      // optional int32 playerid = 2;
      private int playerid_ ;
      /**
       * <code>optional int32 playerid = 2;</code>
       */
      public boolean hasPlayerid() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 playerid = 2;</code>
       */
      public int getPlayerid() {
        return playerid_;
      }
      /**
       * <code>optional int32 playerid = 2;</code>
       */
      public Builder setPlayerid(int value) {
        bitField0_ |= 0x00000002;
        playerid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 playerid = 2;</code>
       */
      public Builder clearPlayerid() {
        bitField0_ = (bitField0_ & ~0x00000002);
        playerid_ = 0;
        onChanged();
        return this;
      }

      // optional int32 action = 3;
      private int action_ ;
      /**
       * <code>optional int32 action = 3;</code>
       */
      public boolean hasAction() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 action = 3;</code>
       */
      public int getAction() {
        return action_;
      }
      /**
       * <code>optional int32 action = 3;</code>
       */
      public Builder setAction(int value) {
        bitField0_ |= 0x00000004;
        action_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 action = 3;</code>
       */
      public Builder clearAction() {
        bitField0_ = (bitField0_ & ~0x00000004);
        action_ = 0;
        onChanged();
        return this;
      }

      // optional int64 currentMoney_Phase = 4;
      private long currentMoneyPhase_ ;
      /**
       * <code>optional int64 currentMoney_Phase = 4;</code>
       */
      public boolean hasCurrentMoneyPhase() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int64 currentMoney_Phase = 4;</code>
       */
      public long getCurrentMoneyPhase() {
        return currentMoneyPhase_;
      }
      /**
       * <code>optional int64 currentMoney_Phase = 4;</code>
       */
      public Builder setCurrentMoneyPhase(long value) {
        bitField0_ |= 0x00000008;
        currentMoneyPhase_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 currentMoney_Phase = 4;</code>
       */
      public Builder clearCurrentMoneyPhase() {
        bitField0_ = (bitField0_ & ~0x00000008);
        currentMoneyPhase_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.nope.fishing.Poker_TurnOver)
    }

    static {
      defaultInstance = new Poker_TurnOver(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.nope.fishing.Poker_TurnOver)
  }

  public interface Poker_NEWGAMEOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code com.nope.fishing.Poker_NEWGAME}
   */
  public static final class Poker_NEWGAME extends
      com.google.protobuf.GeneratedMessage
      implements Poker_NEWGAMEOrBuilder {
    // Use Poker_NEWGAME.newBuilder() to construct.
    private Poker_NEWGAME(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Poker_NEWGAME(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Poker_NEWGAME defaultInstance;
    public static Poker_NEWGAME getDefaultInstance() {
      return defaultInstance;
    }

    public Poker_NEWGAME getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Poker_NEWGAME(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return message.PokerProto.internal_static_com_nope_fishing_Poker_NEWGAME_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return message.PokerProto.internal_static_com_nope_fishing_Poker_NEWGAME_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              message.PokerProto.Poker_NEWGAME.class, message.PokerProto.Poker_NEWGAME.Builder.class);
    }

    public static com.google.protobuf.Parser<Poker_NEWGAME> PARSER =
        new com.google.protobuf.AbstractParser<Poker_NEWGAME>() {
      public Poker_NEWGAME parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Poker_NEWGAME(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Poker_NEWGAME> getParserForType() {
      return PARSER;
    }

    private void initFields() {
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static message.PokerProto.Poker_NEWGAME parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static message.PokerProto.Poker_NEWGAME parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static message.PokerProto.Poker_NEWGAME parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static message.PokerProto.Poker_NEWGAME parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static message.PokerProto.Poker_NEWGAME parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static message.PokerProto.Poker_NEWGAME parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static message.PokerProto.Poker_NEWGAME parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static message.PokerProto.Poker_NEWGAME parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static message.PokerProto.Poker_NEWGAME parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static message.PokerProto.Poker_NEWGAME parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(message.PokerProto.Poker_NEWGAME prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.nope.fishing.Poker_NEWGAME}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements message.PokerProto.Poker_NEWGAMEOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return message.PokerProto.internal_static_com_nope_fishing_Poker_NEWGAME_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return message.PokerProto.internal_static_com_nope_fishing_Poker_NEWGAME_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                message.PokerProto.Poker_NEWGAME.class, message.PokerProto.Poker_NEWGAME.Builder.class);
      }

      // Construct using message.PokerProto.Poker_NEWGAME.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return message.PokerProto.internal_static_com_nope_fishing_Poker_NEWGAME_descriptor;
      }

      public message.PokerProto.Poker_NEWGAME getDefaultInstanceForType() {
        return message.PokerProto.Poker_NEWGAME.getDefaultInstance();
      }

      public message.PokerProto.Poker_NEWGAME build() {
        message.PokerProto.Poker_NEWGAME result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public message.PokerProto.Poker_NEWGAME buildPartial() {
        message.PokerProto.Poker_NEWGAME result = new message.PokerProto.Poker_NEWGAME(this);
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof message.PokerProto.Poker_NEWGAME) {
          return mergeFrom((message.PokerProto.Poker_NEWGAME)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(message.PokerProto.Poker_NEWGAME other) {
        if (other == message.PokerProto.Poker_NEWGAME.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        message.PokerProto.Poker_NEWGAME parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (message.PokerProto.Poker_NEWGAME) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.nope.fishing.Poker_NEWGAME)
    }

    static {
      defaultInstance = new Poker_NEWGAME(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.nope.fishing.Poker_NEWGAME)
  }

  public interface Poker_Request_BetOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 userid = 1;
    /**
     * <code>optional int32 userid = 1;</code>
     */
    boolean hasUserid();
    /**
     * <code>optional int32 userid = 1;</code>
     */
    int getUserid();

    // optional int64 betAmount = 3;
    /**
     * <code>optional int64 betAmount = 3;</code>
     */
    boolean hasBetAmount();
    /**
     * <code>optional int64 betAmount = 3;</code>
     */
    long getBetAmount();
  }
  /**
   * Protobuf type {@code com.nope.fishing.Poker_Request_Bet}
   *
   * <pre>
   * gửi ngược lại list trong room
   * </pre>
   */
  public static final class Poker_Request_Bet extends
      com.google.protobuf.GeneratedMessage
      implements Poker_Request_BetOrBuilder {
    // Use Poker_Request_Bet.newBuilder() to construct.
    private Poker_Request_Bet(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Poker_Request_Bet(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Poker_Request_Bet defaultInstance;
    public static Poker_Request_Bet getDefaultInstance() {
      return defaultInstance;
    }

    public Poker_Request_Bet getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Poker_Request_Bet(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              userid_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              betAmount_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return message.PokerProto.internal_static_com_nope_fishing_Poker_Request_Bet_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return message.PokerProto.internal_static_com_nope_fishing_Poker_Request_Bet_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              message.PokerProto.Poker_Request_Bet.class, message.PokerProto.Poker_Request_Bet.Builder.class);
    }

    public static com.google.protobuf.Parser<Poker_Request_Bet> PARSER =
        new com.google.protobuf.AbstractParser<Poker_Request_Bet>() {
      public Poker_Request_Bet parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Poker_Request_Bet(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Poker_Request_Bet> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 userid = 1;
    public static final int USERID_FIELD_NUMBER = 1;
    private int userid_;
    /**
     * <code>optional int32 userid = 1;</code>
     */
    public boolean hasUserid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 userid = 1;</code>
     */
    public int getUserid() {
      return userid_;
    }

    // optional int64 betAmount = 3;
    public static final int BETAMOUNT_FIELD_NUMBER = 3;
    private long betAmount_;
    /**
     * <code>optional int64 betAmount = 3;</code>
     */
    public boolean hasBetAmount() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int64 betAmount = 3;</code>
     */
    public long getBetAmount() {
      return betAmount_;
    }

    private void initFields() {
      userid_ = 0;
      betAmount_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, userid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(3, betAmount_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, userid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, betAmount_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static message.PokerProto.Poker_Request_Bet parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static message.PokerProto.Poker_Request_Bet parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static message.PokerProto.Poker_Request_Bet parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static message.PokerProto.Poker_Request_Bet parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static message.PokerProto.Poker_Request_Bet parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static message.PokerProto.Poker_Request_Bet parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static message.PokerProto.Poker_Request_Bet parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static message.PokerProto.Poker_Request_Bet parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static message.PokerProto.Poker_Request_Bet parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static message.PokerProto.Poker_Request_Bet parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(message.PokerProto.Poker_Request_Bet prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.nope.fishing.Poker_Request_Bet}
     *
     * <pre>
     * gửi ngược lại list trong room
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements message.PokerProto.Poker_Request_BetOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return message.PokerProto.internal_static_com_nope_fishing_Poker_Request_Bet_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return message.PokerProto.internal_static_com_nope_fishing_Poker_Request_Bet_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                message.PokerProto.Poker_Request_Bet.class, message.PokerProto.Poker_Request_Bet.Builder.class);
      }

      // Construct using message.PokerProto.Poker_Request_Bet.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        userid_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        betAmount_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return message.PokerProto.internal_static_com_nope_fishing_Poker_Request_Bet_descriptor;
      }

      public message.PokerProto.Poker_Request_Bet getDefaultInstanceForType() {
        return message.PokerProto.Poker_Request_Bet.getDefaultInstance();
      }

      public message.PokerProto.Poker_Request_Bet build() {
        message.PokerProto.Poker_Request_Bet result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public message.PokerProto.Poker_Request_Bet buildPartial() {
        message.PokerProto.Poker_Request_Bet result = new message.PokerProto.Poker_Request_Bet(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.userid_ = userid_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.betAmount_ = betAmount_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof message.PokerProto.Poker_Request_Bet) {
          return mergeFrom((message.PokerProto.Poker_Request_Bet)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(message.PokerProto.Poker_Request_Bet other) {
        if (other == message.PokerProto.Poker_Request_Bet.getDefaultInstance()) return this;
        if (other.hasUserid()) {
          setUserid(other.getUserid());
        }
        if (other.hasBetAmount()) {
          setBetAmount(other.getBetAmount());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        message.PokerProto.Poker_Request_Bet parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (message.PokerProto.Poker_Request_Bet) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 userid = 1;
      private int userid_ ;
      /**
       * <code>optional int32 userid = 1;</code>
       */
      public boolean hasUserid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 userid = 1;</code>
       */
      public int getUserid() {
        return userid_;
      }
      /**
       * <code>optional int32 userid = 1;</code>
       */
      public Builder setUserid(int value) {
        bitField0_ |= 0x00000001;
        userid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 userid = 1;</code>
       */
      public Builder clearUserid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        userid_ = 0;
        onChanged();
        return this;
      }

      // optional int64 betAmount = 3;
      private long betAmount_ ;
      /**
       * <code>optional int64 betAmount = 3;</code>
       */
      public boolean hasBetAmount() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int64 betAmount = 3;</code>
       */
      public long getBetAmount() {
        return betAmount_;
      }
      /**
       * <code>optional int64 betAmount = 3;</code>
       */
      public Builder setBetAmount(long value) {
        bitField0_ |= 0x00000002;
        betAmount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 betAmount = 3;</code>
       */
      public Builder clearBetAmount() {
        bitField0_ = (bitField0_ & ~0x00000002);
        betAmount_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.nope.fishing.Poker_Request_Bet)
    }

    static {
      defaultInstance = new Poker_Request_Bet(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.nope.fishing.Poker_Request_Bet)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_nope_fishing_Poker_Response_RoomIdFund_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_nope_fishing_Poker_Response_RoomIdFund_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_nope_fishing_Poker_Response_GameInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_nope_fishing_Poker_Response_GameInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_nope_fishing_Poker_Response_AllCountDown_10Room_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_nope_fishing_Poker_Response_AllCountDown_10Room_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_nope_fishing_Poker_Response_UpdateMoney_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_nope_fishing_Poker_Response_UpdateMoney_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_nope_fishing_Poker_Request_JoinFakePlayer_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_nope_fishing_Poker_Request_JoinFakePlayer_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_nope_fishing_Poker_Request_JoinLobby_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_nope_fishing_Poker_Request_JoinLobby_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_nope_fishing_Poker_Request_LeaveLobby_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_nope_fishing_Poker_Request_LeaveLobby_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_nope_fishing_Poker_Request_JoinRoom_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_nope_fishing_Poker_Request_JoinRoom_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_nope_fishing_Poker_Request_LeaveRoom_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_nope_fishing_Poker_Request_LeaveRoom_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_nope_fishing_Poker_Response_RoomInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_nope_fishing_Poker_Response_RoomInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_nope_fishing_Poker_Response_CountDown_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_nope_fishing_Poker_Response_CountDown_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_nope_fishing_Poker_Player_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_nope_fishing_Poker_Player_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_nope_fishing_Poker_Cards_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_nope_fishing_Poker_Cards_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_nope_fishing_Poker_TurnOver_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_nope_fishing_Poker_TurnOver_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_nope_fishing_Poker_NEWGAME_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_nope_fishing_Poker_NEWGAME_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_nope_fishing_Poker_Request_Bet_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_nope_fishing_Poker_Request_Bet_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\013Poker.proto\022\020com.nope.fishing\"9\n\031Poker" +
      "_Response_RoomIdFund\022\016\n\006roomid\030\001 \001(\005\022\014\n\004" +
      "fund\030\002 \001(\003\"R\n\027Poker_Response_GameInfo\0227\n" +
      "\004room\030\001 \003(\0132).com.nope.fishing.Poker_Res" +
      "ponse_RoomInfo\"^\n\"Poker_Response_AllCoun" +
      "tDown_10Room\0228\n\004room\030\001 \003(\0132*.com.nope.fi" +
      "shing.Poker_Response_CountDown\"+\n\032Poker_" +
      "Response_UpdateMoney\022\r\n\005money\030\001 \001(\003\"L\n\034P" +
      "oker_Request_JoinFakePlayer\022\016\n\006RoomID\030\001 " +
      "\001(\005\022\n\n\002id\030\002 \001(\005\022\020\n\010username\030\003 \001(\t\"\031\n\027Pok",
      "er_Request_JoinLobby\"\032\n\030Poker_Request_Le" +
      "aveLobby\"(\n\026Poker_Request_JoinRoom\022\016\n\006ro" +
      "omid\030\001 \001(\005\"<\n\027Poker_Request_LeaveRoom\022\016\n" +
      "\006roomid\030\001 \001(\005\022\021\n\terrorCode\030\002 \001(\005\"\310\005\n\027Pok" +
      "er_Response_RoomInfo\022\016\n\006roomId\030\001 \001(\005\022\030\n\020" +
      "roomCurrentPhase\030\010 \001(\005\022\017\n\007roomPot\030\t \001(\003\022" +
      "\025\n\rroomNewMinBet\030\022 \001(\003\022\032\n\022roomIDOfNextDe" +
      "aler\030\026 \001(\005\022\026\n\016roomLastAction\030\023 \003(\005\022\030\n\020ro" +
      "omJoinedGameID\030\n \003(\005\022\020\n\010roomTurn\030\013 \003(\010\022\026" +
      "\n\016roomDealerTurn\030\014 \003(\005\022\025\n\rroomBetAmount\030",
      "\021 \003(\003\022\032\n\022roomBetAmountTotal\030\027 \003(\003\022=\n\025roo" +
      "mPlayerCardsHolder\030\r \003(\0132\036.com.nope.fish" +
      "ing.Poker_Player\022A\n\031roomPlayerAvailableA" +
      "ction\030\016 \003(\0132\036.com.nope.fishing.Poker_Pla" +
      "yer\0225\n\016roomAll52Cards\030\017 \003(\0132\035.com.nope.f" +
      "ishing.Poker_Cards\0229\n\022roomCommunityCards" +
      "\030\020 \003(\0132\035.com.nope.fishing.Poker_Cards\022\030\n" +
      "\020roomCardStrenght\030\024 \003(\003\022\036\n\026roomJoinedGam" +
      "eIDFOLDER\030\025 \003(\005\022\"\n\032roomJoinedGameIDOUTOF" +
      "MONEY\030\030 \003(\005\022\016\n\006userid\030\003 \003(\005\022\020\n\010username\030",
      "\004 \003(\t\022\021\n\tusermoney\030\005 \003(\003\022\025\n\ruserBeginTur" +
      "n\030\006 \003(\010\022\022\n\nuserAction\030\007 \003(\005\"A\n\030Poker_Res" +
      "ponse_CountDown\022\016\n\006roomId\030\001 \001(\005\022\025\n\rroomC" +
      "ountdown\030\002 \001(\003\"x\n\014Poker_Player\022\020\n\010player" +
      "ID\030\001 \001(\005\0227\n\020playerCardHolder\030\002 \003(\0132\035.com" +
      ".nope.fishing.Poker_Cards\022\035\n\025playerAvail" +
      "ableAction\030\003 \003(\005\"3\n\013Poker_Cards\022\022\n\ncardn" +
      "umber\030\001 \001(\t\022\020\n\010cardtype\030\002 \001(\t\"^\n\016Poker_T" +
      "urnOver\022\016\n\006roomid\030\001 \001(\005\022\020\n\010playerid\030\002 \001(" +
      "\005\022\016\n\006action\030\003 \001(\005\022\032\n\022currentMoney_Phase\030",
      "\004 \001(\003\"\017\n\rPoker_NEWGAME\"6\n\021Poker_Request_" +
      "Bet\022\016\n\006userid\030\001 \001(\005\022\021\n\tbetAmount\030\003 \001(\003B\027" +
      "\n\007messageB\nPokerProtoH\001"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_com_nope_fishing_Poker_Response_RoomIdFund_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_com_nope_fishing_Poker_Response_RoomIdFund_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_nope_fishing_Poker_Response_RoomIdFund_descriptor,
              new java.lang.String[] { "Roomid", "Fund", });
          internal_static_com_nope_fishing_Poker_Response_GameInfo_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_com_nope_fishing_Poker_Response_GameInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_nope_fishing_Poker_Response_GameInfo_descriptor,
              new java.lang.String[] { "Room", });
          internal_static_com_nope_fishing_Poker_Response_AllCountDown_10Room_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_com_nope_fishing_Poker_Response_AllCountDown_10Room_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_nope_fishing_Poker_Response_AllCountDown_10Room_descriptor,
              new java.lang.String[] { "Room", });
          internal_static_com_nope_fishing_Poker_Response_UpdateMoney_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_com_nope_fishing_Poker_Response_UpdateMoney_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_nope_fishing_Poker_Response_UpdateMoney_descriptor,
              new java.lang.String[] { "Money", });
          internal_static_com_nope_fishing_Poker_Request_JoinFakePlayer_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_com_nope_fishing_Poker_Request_JoinFakePlayer_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_nope_fishing_Poker_Request_JoinFakePlayer_descriptor,
              new java.lang.String[] { "RoomID", "Id", "Username", });
          internal_static_com_nope_fishing_Poker_Request_JoinLobby_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_com_nope_fishing_Poker_Request_JoinLobby_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_nope_fishing_Poker_Request_JoinLobby_descriptor,
              new java.lang.String[] { });
          internal_static_com_nope_fishing_Poker_Request_LeaveLobby_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_com_nope_fishing_Poker_Request_LeaveLobby_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_nope_fishing_Poker_Request_LeaveLobby_descriptor,
              new java.lang.String[] { });
          internal_static_com_nope_fishing_Poker_Request_JoinRoom_descriptor =
            getDescriptor().getMessageTypes().get(7);
          internal_static_com_nope_fishing_Poker_Request_JoinRoom_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_nope_fishing_Poker_Request_JoinRoom_descriptor,
              new java.lang.String[] { "Roomid", });
          internal_static_com_nope_fishing_Poker_Request_LeaveRoom_descriptor =
            getDescriptor().getMessageTypes().get(8);
          internal_static_com_nope_fishing_Poker_Request_LeaveRoom_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_nope_fishing_Poker_Request_LeaveRoom_descriptor,
              new java.lang.String[] { "Roomid", "ErrorCode", });
          internal_static_com_nope_fishing_Poker_Response_RoomInfo_descriptor =
            getDescriptor().getMessageTypes().get(9);
          internal_static_com_nope_fishing_Poker_Response_RoomInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_nope_fishing_Poker_Response_RoomInfo_descriptor,
              new java.lang.String[] { "RoomId", "RoomCurrentPhase", "RoomPot", "RoomNewMinBet", "RoomIDOfNextDealer", "RoomLastAction", "RoomJoinedGameID", "RoomTurn", "RoomDealerTurn", "RoomBetAmount", "RoomBetAmountTotal", "RoomPlayerCardsHolder", "RoomPlayerAvailableAction", "RoomAll52Cards", "RoomCommunityCards", "RoomCardStrenght", "RoomJoinedGameIDFOLDER", "RoomJoinedGameIDOUTOFMONEY", "Userid", "Username", "Usermoney", "UserBeginTurn", "UserAction", });
          internal_static_com_nope_fishing_Poker_Response_CountDown_descriptor =
            getDescriptor().getMessageTypes().get(10);
          internal_static_com_nope_fishing_Poker_Response_CountDown_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_nope_fishing_Poker_Response_CountDown_descriptor,
              new java.lang.String[] { "RoomId", "RoomCountdown", });
          internal_static_com_nope_fishing_Poker_Player_descriptor =
            getDescriptor().getMessageTypes().get(11);
          internal_static_com_nope_fishing_Poker_Player_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_nope_fishing_Poker_Player_descriptor,
              new java.lang.String[] { "PlayerID", "PlayerCardHolder", "PlayerAvailableAction", });
          internal_static_com_nope_fishing_Poker_Cards_descriptor =
            getDescriptor().getMessageTypes().get(12);
          internal_static_com_nope_fishing_Poker_Cards_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_nope_fishing_Poker_Cards_descriptor,
              new java.lang.String[] { "Cardnumber", "Cardtype", });
          internal_static_com_nope_fishing_Poker_TurnOver_descriptor =
            getDescriptor().getMessageTypes().get(13);
          internal_static_com_nope_fishing_Poker_TurnOver_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_nope_fishing_Poker_TurnOver_descriptor,
              new java.lang.String[] { "Roomid", "Playerid", "Action", "CurrentMoneyPhase", });
          internal_static_com_nope_fishing_Poker_NEWGAME_descriptor =
            getDescriptor().getMessageTypes().get(14);
          internal_static_com_nope_fishing_Poker_NEWGAME_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_nope_fishing_Poker_NEWGAME_descriptor,
              new java.lang.String[] { });
          internal_static_com_nope_fishing_Poker_Request_Bet_descriptor =
            getDescriptor().getMessageTypes().get(15);
          internal_static_com_nope_fishing_Poker_Request_Bet_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_nope_fishing_Poker_Request_Bet_descriptor,
              new java.lang.String[] { "Userid", "BetAmount", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
